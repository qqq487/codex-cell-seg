sample {'image': tensor([[[0.0078, 0.0039, 0.0078,  ..., 0.0431, 0.0235, 0.0118],
         [0.0078, 0.0078, 0.0118,  ..., 0.0275, 0.0157, 0.0078],
         [0.0118, 0.0118, 0.0157,  ..., 0.0157, 0.0078, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0392, 0.0314, 0.0392],
         [0.0039, 0.0078, 0.0078,  ..., 0.0706, 0.0980, 0.1059],
         [0.0039, 0.0039, 0.0039,  ..., 0.0941, 0.1451, 0.1725]],
        [[0.0078, 0.0039, 0.0078,  ..., 0.0431, 0.0235, 0.0118],
         [0.0078, 0.0078, 0.0118,  ..., 0.0275, 0.0157, 0.0078],
         [0.0118, 0.0118, 0.0157,  ..., 0.0157, 0.0078, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0392, 0.0314, 0.0392],
         [0.0039, 0.0078, 0.0078,  ..., 0.0706, 0.0980, 0.1059],
         [0.0039, 0.0039, 0.0039,  ..., 0.0941, 0.1451, 0.1725]],
        [[0.0078, 0.0039, 0.0078,  ..., 0.0431, 0.0235, 0.0118],
         [0.0078, 0.0078, 0.0118,  ..., 0.0275, 0.0157, 0.0078],
         [0.0118, 0.0118, 0.0157,  ..., 0.0157, 0.0078, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0392, 0.0314, 0.0392],
         [0.0039, 0.0078, 0.0078,  ..., 0.0706, 0.0980, 0.1059],
         [0.0039, 0.0039, 0.0039,  ..., 0.0941, 0.1451, 0.1725]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.1020, 0.1294],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1255, 0.1216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1176, 0.0941],
         ...,
         [0.0157, 0.0157, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.1020, 0.1294],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1255, 0.1216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1176, 0.0941],
         ...,
         [0.0157, 0.0157, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.1020, 0.1294],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1255, 0.1216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1176, 0.0941],
         ...,
         [0.0157, 0.0157, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0078, 0.0118, 0.0157,  ..., 0.0039, 0.0039, 0.0078],
         [0.0039, 0.0039, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0157, 0.0275,  ..., 0.0235, 0.0078, 0.0000]],
        [[0.0078, 0.0118, 0.0157,  ..., 0.0039, 0.0039, 0.0078],
         [0.0039, 0.0039, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0157, 0.0275,  ..., 0.0235, 0.0078, 0.0000]],
        [[0.0078, 0.0118, 0.0157,  ..., 0.0039, 0.0039, 0.0078],
         [0.0039, 0.0039, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0157, 0.0275,  ..., 0.0235, 0.0078, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0000,  ..., 0.1961, 0.1216, 0.0549],
         [0.0039, 0.0039, 0.0000,  ..., 0.1176, 0.0706, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0627, 0.0275, 0.0078],
         ...,
         [0.2314, 0.2078, 0.1647,  ..., 0.0157, 0.0078, 0.0078],
         [0.1569, 0.1569, 0.1373,  ..., 0.0196, 0.0078, 0.0078],
         [0.1059, 0.0980, 0.1098,  ..., 0.0314, 0.0039, 0.0078]],
        [[0.0039, 0.0039, 0.0000,  ..., 0.1961, 0.1216, 0.0549],
         [0.0039, 0.0039, 0.0000,  ..., 0.1176, 0.0706, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0627, 0.0275, 0.0078],
         ...,
         [0.2314, 0.2078, 0.1647,  ..., 0.0157, 0.0078, 0.0078],
         [0.1569, 0.1569, 0.1373,  ..., 0.0196, 0.0078, 0.0078],
         [0.1059, 0.0980, 0.1098,  ..., 0.0314, 0.0039, 0.0078]],
        [[0.0039, 0.0039, 0.0000,  ..., 0.1961, 0.1216, 0.0549],
         [0.0039, 0.0039, 0.0000,  ..., 0.1176, 0.0706, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0627, 0.0275, 0.0078],
         ...,
         [0.2314, 0.2078, 0.1647,  ..., 0.0157, 0.0078, 0.0078],
         [0.1569, 0.1569, 0.1373,  ..., 0.0196, 0.0078, 0.0078],
         [0.1059, 0.0980, 0.1098,  ..., 0.0314, 0.0039, 0.0078]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0588, 0.1255, 0.3490,  ..., 0.2157, 0.1725, 0.1725],
         [0.0275, 0.0745, 0.2196,  ..., 0.1922, 0.1569, 0.1176],
         [0.0078, 0.0314, 0.0941,  ..., 0.2392, 0.1961, 0.1294],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0588, 0.1255, 0.3490,  ..., 0.2157, 0.1725, 0.1725],
         [0.0275, 0.0745, 0.2196,  ..., 0.1922, 0.1569, 0.1176],
         [0.0078, 0.0314, 0.0941,  ..., 0.2392, 0.1961, 0.1294],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0588, 0.1255, 0.3490,  ..., 0.2157, 0.1725, 0.1725],
         [0.0275, 0.0745, 0.2196,  ..., 0.1922, 0.1569, 0.1176],
         [0.0078, 0.0314, 0.0941,  ..., 0.2392, 0.1961, 0.1294],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0667, 0.0235, 0.0118,  ..., 0.2549, 0.1843, 0.1059],
         [0.0588, 0.0196, 0.0078,  ..., 0.2745, 0.1765, 0.0863],
         [0.0471, 0.0118, 0.0039,  ..., 0.2863, 0.2039, 0.0706],
         ...,
         [0.1059, 0.0784, 0.0510,  ..., 0.0275, 0.0275, 0.0196],
         [0.0353, 0.0157, 0.0118,  ..., 0.0353, 0.0431, 0.0275],
         [0.0157, 0.0157, 0.0157,  ..., 0.0549, 0.0471, 0.0431]],
        [[0.0667, 0.0235, 0.0118,  ..., 0.2549, 0.1843, 0.1059],
         [0.0588, 0.0196, 0.0078,  ..., 0.2745, 0.1765, 0.0863],
         [0.0471, 0.0118, 0.0039,  ..., 0.2863, 0.2039, 0.0706],
         ...,
         [0.1059, 0.0784, 0.0510,  ..., 0.0275, 0.0275, 0.0196],
         [0.0353, 0.0157, 0.0118,  ..., 0.0353, 0.0431, 0.0275],
         [0.0157, 0.0157, 0.0157,  ..., 0.0549, 0.0471, 0.0431]],
        [[0.0667, 0.0235, 0.0118,  ..., 0.2549, 0.1843, 0.1059],
         [0.0588, 0.0196, 0.0078,  ..., 0.2745, 0.1765, 0.0863],
         [0.0471, 0.0118, 0.0039,  ..., 0.2863, 0.2039, 0.0706],
         ...,
         [0.1059, 0.0784, 0.0510,  ..., 0.0275, 0.0275, 0.0196],
         [0.0353, 0.0157, 0.0118,  ..., 0.0353, 0.0431, 0.0275],
         [0.0157, 0.0157, 0.0157,  ..., 0.0549, 0.0471, 0.0431]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1647, 0.1608, 0.1490,  ..., 0.0157, 0.0196, 0.0275],
         [0.1569, 0.1804, 0.1961,  ..., 0.0118, 0.0196, 0.0235],
         [0.1922, 0.1843, 0.1961,  ..., 0.0157, 0.0196, 0.0275],
         ...,
         [0.0196, 0.0275, 0.0588,  ..., 0.0235, 0.0941, 0.1255],
         [0.0078, 0.0157, 0.0353,  ..., 0.0667, 0.2314, 0.2196],
         [0.0039, 0.0078, 0.0157,  ..., 0.1216, 0.3451, 0.3137]],
        [[0.1647, 0.1608, 0.1490,  ..., 0.0157, 0.0196, 0.0275],
         [0.1569, 0.1804, 0.1961,  ..., 0.0118, 0.0196, 0.0235],
         [0.1922, 0.1843, 0.1961,  ..., 0.0157, 0.0196, 0.0275],
         ...,
         [0.0196, 0.0275, 0.0588,  ..., 0.0235, 0.0941, 0.1255],
         [0.0078, 0.0157, 0.0353,  ..., 0.0667, 0.2314, 0.2196],
         [0.0039, 0.0078, 0.0157,  ..., 0.1216, 0.3451, 0.3137]],
        [[0.1647, 0.1608, 0.1490,  ..., 0.0157, 0.0196, 0.0275],
         [0.1569, 0.1804, 0.1961,  ..., 0.0118, 0.0196, 0.0235],
         [0.1922, 0.1843, 0.1961,  ..., 0.0157, 0.0196, 0.0275],
         ...,
         [0.0196, 0.0275, 0.0588,  ..., 0.0235, 0.0941, 0.1255],
         [0.0078, 0.0157, 0.0353,  ..., 0.0667, 0.2314, 0.2196],
         [0.0039, 0.0078, 0.0157,  ..., 0.1216, 0.3451, 0.3137]]]), 'mask': tensor([[0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0118, 0.0235,  ..., 0.0627, 0.0392, 0.0275],
         [0.0039, 0.0196, 0.0353,  ..., 0.0471, 0.0314, 0.0235],
         [0.0078, 0.0314, 0.0392,  ..., 0.0471, 0.0314, 0.0235],
         ...,
         [0.0902, 0.0941, 0.0824,  ..., 0.1020, 0.1020, 0.0784],
         [0.1216, 0.1216, 0.0824,  ..., 0.1412, 0.1176, 0.0706],
         [0.1529, 0.1373, 0.0980,  ..., 0.1686, 0.1137, 0.0745]],
        [[0.0039, 0.0118, 0.0235,  ..., 0.0627, 0.0392, 0.0275],
         [0.0039, 0.0196, 0.0353,  ..., 0.0471, 0.0314, 0.0235],
         [0.0078, 0.0314, 0.0392,  ..., 0.0471, 0.0314, 0.0235],
         ...,
         [0.0902, 0.0941, 0.0824,  ..., 0.1020, 0.1020, 0.0784],
         [0.1216, 0.1216, 0.0824,  ..., 0.1412, 0.1176, 0.0706],
         [0.1529, 0.1373, 0.0980,  ..., 0.1686, 0.1137, 0.0745]],
        [[0.0039, 0.0118, 0.0235,  ..., 0.0627, 0.0392, 0.0275],
         [0.0039, 0.0196, 0.0353,  ..., 0.0471, 0.0314, 0.0235],
         [0.0078, 0.0314, 0.0392,  ..., 0.0471, 0.0314, 0.0235],
         ...,
         [0.0902, 0.0941, 0.0824,  ..., 0.1020, 0.1020, 0.0784],
         [0.1216, 0.1216, 0.0824,  ..., 0.1412, 0.1176, 0.0706],
         [0.1529, 0.1373, 0.0980,  ..., 0.1686, 0.1137, 0.0745]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
INFO: Starting training:
        Epochs:          1000
        Batch size:      2
        Learning rate:   1e-06
        Training size:   4
        Validation size: 0
        Checkpoints:     True
        Device:          cuda
        Images scaling:  0.5
        Mixed Precision: True
Epoch 1/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 1/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  4.28img/s, loss (batch)=1.32]
INFO: Checkpoint 1 saved!
Epoch 2/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 2/1000: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.35img/s, loss (batch)=1.2]
Epoch 3/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 3/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.23img/s, loss (batch)=1.23]
Epoch 4/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 4/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.02img/s, loss (batch)=1.14]
Epoch 5/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 5/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.38img/s, loss (batch)=1.08]
Epoch 6/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 6/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.70img/s, loss (batch)=1.07]
Epoch 7/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]
sample {'image': tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0431, 0.0314, 0.0157,  ..., 0.0627, 0.0471, 0.0314],
         [0.0314, 0.0235, 0.0157,  ..., 0.0431, 0.0392, 0.0235],
         [0.0235, 0.0196, 0.0157,  ..., 0.0353, 0.0392, 0.0275]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0431, 0.0314, 0.0157,  ..., 0.0627, 0.0471, 0.0314],
         [0.0314, 0.0235, 0.0157,  ..., 0.0431, 0.0392, 0.0235],
         [0.0235, 0.0196, 0.0157,  ..., 0.0353, 0.0392, 0.0275]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0431, 0.0314, 0.0157,  ..., 0.0627, 0.0471, 0.0314],
         [0.0314, 0.0235, 0.0157,  ..., 0.0431, 0.0392, 0.0235],
         [0.0235, 0.0196, 0.0157,  ..., 0.0353, 0.0392, 0.0275]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0902, 0.0902, 0.1451,  ..., 0.0431, 0.0275, 0.0078],
         [0.1098, 0.1255, 0.1725,  ..., 0.0314, 0.0275, 0.0078],
         [0.1961, 0.1843, 0.1961,  ..., 0.0353, 0.0275, 0.0118],
         ...,
         [0.0000, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0902, 0.0902, 0.1451,  ..., 0.0431, 0.0275, 0.0078],
         [0.1098, 0.1255, 0.1725,  ..., 0.0314, 0.0275, 0.0078],
         [0.1961, 0.1843, 0.1961,  ..., 0.0353, 0.0275, 0.0118],
         ...,
         [0.0000, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0902, 0.0902, 0.1451,  ..., 0.0431, 0.0275, 0.0078],
         [0.1098, 0.1255, 0.1725,  ..., 0.0314, 0.0275, 0.0078],
         [0.1961, 0.1843, 0.1961,  ..., 0.0353, 0.0275, 0.0118],
         ...,
         [0.0000, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         [0.0000, 0.0039, 0.0039,  ..., 0.0000, 0.0039, 0.0196],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         [0.0000, 0.0039, 0.0039,  ..., 0.0000, 0.0039, 0.0196],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         [0.0000, 0.0039, 0.0039,  ..., 0.0000, 0.0039, 0.0196],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0235, 0.0078, 0.0039,  ..., 0.3961, 0.7608, 0.7412],
         [0.0118, 0.0039, 0.0000,  ..., 0.3333, 0.4941, 0.4588],
         [0.0078, 0.0000, 0.0000,  ..., 0.1490, 0.1647, 0.1608],
         ...,
         [0.2078, 0.4000, 0.3255,  ..., 0.8039, 0.8980, 0.8824],
         [0.1882, 0.2863, 0.2039,  ..., 0.6118, 0.8471, 0.8471],
         [0.1176, 0.1765, 0.1255,  ..., 0.4980, 0.5922, 0.4000]],
        [[0.0235, 0.0078, 0.0039,  ..., 0.3961, 0.7608, 0.7412],
         [0.0118, 0.0039, 0.0000,  ..., 0.3333, 0.4941, 0.4588],
         [0.0078, 0.0000, 0.0000,  ..., 0.1490, 0.1647, 0.1608],
         ...,
         [0.2078, 0.4000, 0.3255,  ..., 0.8039, 0.8980, 0.8824],
         [0.1882, 0.2863, 0.2039,  ..., 0.6118, 0.8471, 0.8471],
         [0.1176, 0.1765, 0.1255,  ..., 0.4980, 0.5922, 0.4000]],
        [[0.0235, 0.0078, 0.0039,  ..., 0.3961, 0.7608, 0.7412],
         [0.0118, 0.0039, 0.0000,  ..., 0.3333, 0.4941, 0.4588],
         [0.0078, 0.0000, 0.0000,  ..., 0.1490, 0.1647, 0.1608],
         ...,
         [0.2078, 0.4000, 0.3255,  ..., 0.8039, 0.8980, 0.8824],
         [0.1882, 0.2863, 0.2039,  ..., 0.6118, 0.8471, 0.8471],
         [0.1176, 0.1765, 0.1255,  ..., 0.4980, 0.5922, 0.4000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0196, 0.0196, 0.0078,  ..., 0.3098, 0.3020, 0.3294],
         [0.0353, 0.0314, 0.0157,  ..., 0.2784, 0.2824, 0.2941],
         [0.1020, 0.0941, 0.0353,  ..., 0.1843, 0.1922, 0.1843],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0118]],
        [[0.0196, 0.0196, 0.0078,  ..., 0.3098, 0.3020, 0.3294],
         [0.0353, 0.0314, 0.0157,  ..., 0.2784, 0.2824, 0.2941],
         [0.1020, 0.0941, 0.0353,  ..., 0.1843, 0.1922, 0.1843],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0118]],
        [[0.0196, 0.0196, 0.0078,  ..., 0.3098, 0.3020, 0.3294],
         [0.0353, 0.0314, 0.0157,  ..., 0.2784, 0.2824, 0.2941],
         [0.1020, 0.0941, 0.0353,  ..., 0.1843, 0.1922, 0.1843],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0196, 0.0314, 0.0471,  ..., 0.0784, 0.0706, 0.0745],
         [0.0078, 0.0118, 0.0235,  ..., 0.0941, 0.0902, 0.0941],
         [0.0000, 0.0039, 0.0078,  ..., 0.0863, 0.0863, 0.0824],
         ...,
         [0.0157, 0.0157, 0.0118,  ..., 0.0118, 0.0118, 0.0157],
         [0.0196, 0.0196, 0.0157,  ..., 0.0157, 0.0196, 0.0235],
         [0.0196, 0.0196, 0.0235,  ..., 0.0235, 0.0275, 0.0431]],
        [[0.0196, 0.0314, 0.0471,  ..., 0.0784, 0.0706, 0.0745],
         [0.0078, 0.0118, 0.0235,  ..., 0.0941, 0.0902, 0.0941],
         [0.0000, 0.0039, 0.0078,  ..., 0.0863, 0.0863, 0.0824],
         ...,
         [0.0157, 0.0157, 0.0118,  ..., 0.0118, 0.0118, 0.0157],
         [0.0196, 0.0196, 0.0157,  ..., 0.0157, 0.0196, 0.0235],
         [0.0196, 0.0196, 0.0235,  ..., 0.0235, 0.0275, 0.0431]],
        [[0.0196, 0.0314, 0.0471,  ..., 0.0784, 0.0706, 0.0745],
         [0.0078, 0.0118, 0.0235,  ..., 0.0941, 0.0902, 0.0941],
         [0.0000, 0.0039, 0.0078,  ..., 0.0863, 0.0863, 0.0824],
         ...,
         [0.0157, 0.0157, 0.0118,  ..., 0.0118, 0.0118, 0.0157],
         [0.0196, 0.0196, 0.0157,  ..., 0.0157, 0.0196, 0.0235],
         [0.0196, 0.0196, 0.0235,  ..., 0.0235, 0.0275, 0.0431]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1529, 0.1333, 0.1333,  ..., 0.1373, 0.1451, 0.1765],
         [0.1294, 0.1137, 0.0941,  ..., 0.1451, 0.1765, 0.1843],
         [0.1059, 0.0784, 0.0627,  ..., 0.1216, 0.2196, 0.2510],
         ...,
         [0.0353, 0.0745, 0.0863,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0784, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0392, 0.0314,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1529, 0.1333, 0.1333,  ..., 0.1373, 0.1451, 0.1765],
         [0.1294, 0.1137, 0.0941,  ..., 0.1451, 0.1765, 0.1843],
         [0.1059, 0.0784, 0.0627,  ..., 0.1216, 0.2196, 0.2510],
         ...,
         [0.0353, 0.0745, 0.0863,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0784, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0392, 0.0314,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1529, 0.1333, 0.1333,  ..., 0.1373, 0.1451, 0.1765],
         [0.1294, 0.1137, 0.0941,  ..., 0.1451, 0.1765, 0.1843],
         [0.1059, 0.0784, 0.0627,  ..., 0.1216, 0.2196, 0.2510],
         ...,
         [0.0353, 0.0745, 0.0863,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0784, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0392, 0.0314,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0039,  ..., 0.1765, 0.1804, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1725, 0.1490, 0.1412],
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1373, 0.1059],
         ...,
         [0.0118, 0.0118, 0.0157,  ..., 0.7765, 0.4000, 0.1490],
         [0.0078, 0.0118, 0.0118,  ..., 0.7608, 0.4627, 0.1804],
         [0.0078, 0.0078, 0.0078,  ..., 0.7490, 0.4980, 0.2235]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.1765, 0.1804, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1725, 0.1490, 0.1412],
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1373, 0.1059],
         ...,
         [0.0118, 0.0118, 0.0157,  ..., 0.7765, 0.4000, 0.1490],
         [0.0078, 0.0118, 0.0118,  ..., 0.7608, 0.4627, 0.1804],
         [0.0078, 0.0078, 0.0078,  ..., 0.7490, 0.4980, 0.2235]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.1765, 0.1804, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1725, 0.1490, 0.1412],
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1373, 0.1059],
         ...,
         [0.0118, 0.0118, 0.0157,  ..., 0.7765, 0.4000, 0.1490],
         [0.0078, 0.0118, 0.0118,  ..., 0.7608, 0.4627, 0.1804],
         [0.0078, 0.0078, 0.0078,  ..., 0.7490, 0.4980, 0.2235]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.0706, 0.0706],
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.0784, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1294, 0.1216, 0.1294],
         ...,
         [0.7569, 0.4745, 0.2745,  ..., 0.0078, 0.0078, 0.0078],
         [0.8431, 0.6392, 0.3020,  ..., 0.0078, 0.0039, 0.0039],
         [0.7059, 0.6627, 0.3098,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.0706, 0.0706],
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.0784, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1294, 0.1216, 0.1294],
         ...,
         [0.7569, 0.4745, 0.2745,  ..., 0.0078, 0.0078, 0.0078],
         [0.8431, 0.6392, 0.3020,  ..., 0.0078, 0.0039, 0.0039],
         [0.7059, 0.6627, 0.3098,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.0706, 0.0706],
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.0784, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1294, 0.1216, 0.1294],
         ...,
         [0.7569, 0.4745, 0.2745,  ..., 0.0078, 0.0078, 0.0078],
         [0.8431, 0.6392, 0.3020,  ..., 0.0078, 0.0039, 0.0039],
         [0.7059, 0.6627, 0.3098,  ..., 0.0039, 0.0039, 0.0039]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 1., 1.,  ..., 1., 1., 1.],
        [0., 1., 1.,  ..., 1., 1., 1.],
        [0., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0078, 0.0039, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0157, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0078, 0.0039],
         [0.0000, 0.0039, 0.0039,  ..., 0.0078, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0078,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0078, 0.0039, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0157, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0078, 0.0039],
         [0.0000, 0.0039, 0.0039,  ..., 0.0078, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0078,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0078, 0.0039, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0157, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0078, 0.0039],
         [0.0000, 0.0039, 0.0039,  ..., 0.0078, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0078,  ..., 0.0039, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0706, 0.0902, 0.1569,  ..., 0.1176, 0.1098, 0.1373],
         [0.1137, 0.1922, 0.1843,  ..., 0.2118, 0.2235, 0.2314],
         [0.1098, 0.1686, 0.1137,  ..., 0.1647, 0.1686, 0.1961],
         ...,
         [0.7333, 0.6627, 0.3490,  ..., 0.0431, 0.0510, 0.0706],
         [0.8196, 0.8275, 0.4000,  ..., 0.0627, 0.0706, 0.0784],
         [0.6588, 0.7176, 0.3843,  ..., 0.0863, 0.0863, 0.0824]],
        [[0.0706, 0.0902, 0.1569,  ..., 0.1176, 0.1098, 0.1373],
         [0.1137, 0.1922, 0.1843,  ..., 0.2118, 0.2235, 0.2314],
         [0.1098, 0.1686, 0.1137,  ..., 0.1647, 0.1686, 0.1961],
         ...,
         [0.7333, 0.6627, 0.3490,  ..., 0.0431, 0.0510, 0.0706],
         [0.8196, 0.8275, 0.4000,  ..., 0.0627, 0.0706, 0.0784],
         [0.6588, 0.7176, 0.3843,  ..., 0.0863, 0.0863, 0.0824]],
        [[0.0706, 0.0902, 0.1569,  ..., 0.1176, 0.1098, 0.1373],
         [0.1137, 0.1922, 0.1843,  ..., 0.2118, 0.2235, 0.2314],
         [0.1098, 0.1686, 0.1137,  ..., 0.1647, 0.1686, 0.1961],
         ...,
         [0.7333, 0.6627, 0.3490,  ..., 0.0431, 0.0510, 0.0706],
         [0.8196, 0.8275, 0.4000,  ..., 0.0627, 0.0706, 0.0784],
         [0.6588, 0.7176, 0.3843,  ..., 0.0863, 0.0863, 0.0824]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0824, 0.0627, 0.0431,  ..., 0.0000, 0.0000, 0.0000],
         [0.0549, 0.0392, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0275, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0980, 0.1020, 0.0980,  ..., 0.0588, 0.0431, 0.0353],
         [0.1098, 0.0980, 0.1020,  ..., 0.0627, 0.0431, 0.0275],
         [0.1020, 0.1137, 0.1176,  ..., 0.0588, 0.0510, 0.0392]],
        [[0.0824, 0.0627, 0.0431,  ..., 0.0000, 0.0000, 0.0000],
         [0.0549, 0.0392, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0275, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0980, 0.1020, 0.0980,  ..., 0.0588, 0.0431, 0.0353],
         [0.1098, 0.0980, 0.1020,  ..., 0.0627, 0.0431, 0.0275],
         [0.1020, 0.1137, 0.1176,  ..., 0.0588, 0.0510, 0.0392]],
        [[0.0824, 0.0627, 0.0431,  ..., 0.0000, 0.0000, 0.0000],
         [0.0549, 0.0392, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0275, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0980, 0.1020, 0.0980,  ..., 0.0588, 0.0431, 0.0353],
         [0.1098, 0.0980, 0.1020,  ..., 0.0627, 0.0431, 0.0275],
         [0.1020, 0.1137, 0.1176,  ..., 0.0588, 0.0510, 0.0392]]]), 'mask': tensor([[0., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1098, 0.0863, 0.0471,  ..., 0.0039, 0.0039, 0.0078],
         [0.1961, 0.1608, 0.0706,  ..., 0.0000, 0.0039, 0.0078],
         [0.2000, 0.1686, 0.0941,  ..., 0.0039, 0.0078, 0.0078],
         ...,
         [0.0078, 0.0118, 0.0078,  ..., 0.0314, 0.0902, 0.2078],
         [0.0196, 0.0157, 0.0196,  ..., 0.0118, 0.0431, 0.1255],
         [0.0196, 0.0314, 0.0314,  ..., 0.0078, 0.0275, 0.0706]],
        [[0.1098, 0.0863, 0.0471,  ..., 0.0039, 0.0039, 0.0078],
         [0.1961, 0.1608, 0.0706,  ..., 0.0000, 0.0039, 0.0078],
         [0.2000, 0.1686, 0.0941,  ..., 0.0039, 0.0078, 0.0078],
         ...,
         [0.0078, 0.0118, 0.0078,  ..., 0.0314, 0.0902, 0.2078],
         [0.0196, 0.0157, 0.0196,  ..., 0.0118, 0.0431, 0.1255],
         [0.0196, 0.0314, 0.0314,  ..., 0.0078, 0.0275, 0.0706]],
        [[0.1098, 0.0863, 0.0471,  ..., 0.0039, 0.0039, 0.0078],
         [0.1961, 0.1608, 0.0706,  ..., 0.0000, 0.0039, 0.0078],
         [0.2000, 0.1686, 0.0941,  ..., 0.0039, 0.0078, 0.0078],
         ...,
         [0.0078, 0.0118, 0.0078,  ..., 0.0314, 0.0902, 0.2078],
         [0.0196, 0.0157, 0.0196,  ..., 0.0118, 0.0431, 0.1255],
         [0.0196, 0.0314, 0.0314,  ..., 0.0078, 0.0275, 0.0706]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.0902, 0.0549],
         [0.0039, 0.0000, 0.0000,  ..., 0.2510, 0.1098, 0.0588],
         [0.0078, 0.0000, 0.0000,  ..., 0.4118, 0.1569, 0.0784]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.0902, 0.0549],
         [0.0039, 0.0000, 0.0000,  ..., 0.2510, 0.1098, 0.0588],
         [0.0078, 0.0000, 0.0000,  ..., 0.4118, 0.1569, 0.0784]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.0902, 0.0549],
         [0.0039, 0.0000, 0.0000,  ..., 0.2510, 0.1098, 0.0588],
         [0.0078, 0.0000, 0.0000,  ..., 0.4118, 0.1569, 0.0784]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]])}
sample {'image': tensor([[[0.0706, 0.0431, 0.0471,  ..., 0.2196, 0.2941, 0.2706],
         [0.0745, 0.0549, 0.0471,  ..., 0.1882, 0.2039, 0.2000],
         [0.0824, 0.0706, 0.0745,  ..., 0.2000, 0.1725, 0.1255],
         ...,
         [0.0314, 0.0314, 0.0392,  ..., 0.1059, 0.1098, 0.1176],
         [0.0510, 0.0431, 0.0588,  ..., 0.0784, 0.1098, 0.0824],
         [0.0824, 0.0510, 0.0627,  ..., 0.0471, 0.0627, 0.0627]],
        [[0.0706, 0.0431, 0.0471,  ..., 0.2196, 0.2941, 0.2706],
         [0.0745, 0.0549, 0.0471,  ..., 0.1882, 0.2039, 0.2000],
         [0.0824, 0.0706, 0.0745,  ..., 0.2000, 0.1725, 0.1255],
         ...,
         [0.0314, 0.0314, 0.0392,  ..., 0.1059, 0.1098, 0.1176],
         [0.0510, 0.0431, 0.0588,  ..., 0.0784, 0.1098, 0.0824],
         [0.0824, 0.0510, 0.0627,  ..., 0.0471, 0.0627, 0.0627]],
        [[0.0706, 0.0431, 0.0471,  ..., 0.2196, 0.2941, 0.2706],
         [0.0745, 0.0549, 0.0471,  ..., 0.1882, 0.2039, 0.2000],
         [0.0824, 0.0706, 0.0745,  ..., 0.2000, 0.1725, 0.1255],
         ...,
         [0.0314, 0.0314, 0.0392,  ..., 0.1059, 0.1098, 0.1176],
         [0.0510, 0.0431, 0.0588,  ..., 0.0784, 0.1098, 0.0824],
         [0.0824, 0.0510, 0.0627,  ..., 0.0471, 0.0627, 0.0627]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0314, 0.0078, 0.0039,  ..., 0.0588, 0.0157, 0.0078],
         [0.0353, 0.0000, 0.0000,  ..., 0.0588, 0.0196, 0.0118],
         [0.0314, 0.0000, 0.0000,  ..., 0.0667, 0.0314, 0.0118],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0235, 0.0392, 0.0549],
         [0.0000, 0.0039, 0.0039,  ..., 0.0353, 0.0471, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0392, 0.0588]],
        [[0.0314, 0.0078, 0.0039,  ..., 0.0588, 0.0157, 0.0078],
         [0.0353, 0.0000, 0.0000,  ..., 0.0588, 0.0196, 0.0118],
         [0.0314, 0.0000, 0.0000,  ..., 0.0667, 0.0314, 0.0118],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0235, 0.0392, 0.0549],
         [0.0000, 0.0039, 0.0039,  ..., 0.0353, 0.0471, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0392, 0.0588]],
        [[0.0314, 0.0078, 0.0039,  ..., 0.0588, 0.0157, 0.0078],
         [0.0353, 0.0000, 0.0000,  ..., 0.0588, 0.0196, 0.0118],
         [0.0314, 0.0000, 0.0000,  ..., 0.0667, 0.0314, 0.0118],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0235, 0.0392, 0.0549],
         [0.0000, 0.0039, 0.0039,  ..., 0.0353, 0.0471, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0392, 0.0588]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0078, 0.0078,  ..., 0.0510, 0.0627, 0.0549],
         [0.0078, 0.0157, 0.0196,  ..., 0.0706, 0.0863, 0.0824],
         [0.0157, 0.0235, 0.0275,  ..., 0.0510, 0.0549, 0.0588],
         ...,
         [0.0431, 0.0235, 0.0118,  ..., 0.0588, 0.0745, 0.0941],
         [0.0392, 0.0235, 0.0118,  ..., 0.0510, 0.0627, 0.0902],
         [0.0510, 0.0353, 0.0196,  ..., 0.0471, 0.0549, 0.0902]],
        [[0.0039, 0.0078, 0.0078,  ..., 0.0510, 0.0627, 0.0549],
         [0.0078, 0.0157, 0.0196,  ..., 0.0706, 0.0863, 0.0824],
         [0.0157, 0.0235, 0.0275,  ..., 0.0510, 0.0549, 0.0588],
         ...,
         [0.0431, 0.0235, 0.0118,  ..., 0.0588, 0.0745, 0.0941],
         [0.0392, 0.0235, 0.0118,  ..., 0.0510, 0.0627, 0.0902],
         [0.0510, 0.0353, 0.0196,  ..., 0.0471, 0.0549, 0.0902]],
        [[0.0039, 0.0078, 0.0078,  ..., 0.0510, 0.0627, 0.0549],
         [0.0078, 0.0157, 0.0196,  ..., 0.0706, 0.0863, 0.0824],
         [0.0157, 0.0235, 0.0275,  ..., 0.0510, 0.0549, 0.0588],
         ...,
         [0.0431, 0.0235, 0.0118,  ..., 0.0588, 0.0745, 0.0941],
         [0.0392, 0.0235, 0.0118,  ..., 0.0510, 0.0627, 0.0902],
         [0.0510, 0.0353, 0.0196,  ..., 0.0471, 0.0549, 0.0902]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1451, 0.1255, 0.1216,  ..., 0.0039, 0.0039, 0.0157],
         [0.1333, 0.1294, 0.1529,  ..., 0.0039, 0.0078, 0.0157],
         [0.1451, 0.1412, 0.1451,  ..., 0.0078, 0.0078, 0.0157],
         ...,
         [0.2275, 0.3176, 0.4000,  ..., 0.0039, 0.0039, 0.0118],
         [0.2588, 0.3255, 0.4510,  ..., 0.0000, 0.0039, 0.0118],
         [0.3255, 0.3961, 0.5059,  ..., 0.0000, 0.0039, 0.0118]],
        [[0.1451, 0.1255, 0.1216,  ..., 0.0039, 0.0039, 0.0157],
         [0.1333, 0.1294, 0.1529,  ..., 0.0039, 0.0078, 0.0157],
         [0.1451, 0.1412, 0.1451,  ..., 0.0078, 0.0078, 0.0157],
         ...,
         [0.2275, 0.3176, 0.4000,  ..., 0.0039, 0.0039, 0.0118],
         [0.2588, 0.3255, 0.4510,  ..., 0.0000, 0.0039, 0.0118],
         [0.3255, 0.3961, 0.5059,  ..., 0.0000, 0.0039, 0.0118]],
        [[0.1451, 0.1255, 0.1216,  ..., 0.0039, 0.0039, 0.0157],
         [0.1333, 0.1294, 0.1529,  ..., 0.0039, 0.0078, 0.0157],
         [0.1451, 0.1412, 0.1451,  ..., 0.0078, 0.0078, 0.0157],
         ...,
         [0.2275, 0.3176, 0.4000,  ..., 0.0039, 0.0039, 0.0118],
         [0.2588, 0.3255, 0.4510,  ..., 0.0000, 0.0039, 0.0118],
         [0.3255, 0.3961, 0.5059,  ..., 0.0000, 0.0039, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
Epoch 7/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 7/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.91img/s, loss (batch)=1.03]
Epoch 8/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 8/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.45img/s, loss (batch)=1.18]
Epoch 9/1000:   0%|                                                                                                                                                                                         | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 9/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.14img/s, loss (batch)=0.978]
Epoch 10/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 10/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.93img/s, loss (batch)=1.09]
Epoch 11/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]
sample {'image': tensor([[[0.0078, 0.0078, 0.0078,  ..., 0.0157, 0.0157, 0.0157],
         [0.0118, 0.0157, 0.0157,  ..., 0.0275, 0.0314, 0.0275],
         [0.0157, 0.0118, 0.0118,  ..., 0.0431, 0.0471, 0.0353],
         ...,
         [0.4000, 0.3529, 0.2745,  ..., 0.1882, 0.2078, 0.3608],
         [0.3373, 0.2863, 0.2039,  ..., 0.1176, 0.2431, 0.6000],
         [0.2824, 0.2314, 0.1725,  ..., 0.1843, 0.3373, 0.6471]],
        [[0.0078, 0.0078, 0.0078,  ..., 0.0157, 0.0157, 0.0157],
         [0.0118, 0.0157, 0.0157,  ..., 0.0275, 0.0314, 0.0275],
         [0.0157, 0.0118, 0.0118,  ..., 0.0431, 0.0471, 0.0353],
         ...,
         [0.4000, 0.3529, 0.2745,  ..., 0.1882, 0.2078, 0.3608],
         [0.3373, 0.2863, 0.2039,  ..., 0.1176, 0.2431, 0.6000],
         [0.2824, 0.2314, 0.1725,  ..., 0.1843, 0.3373, 0.6471]],
        [[0.0078, 0.0078, 0.0078,  ..., 0.0157, 0.0157, 0.0157],
         [0.0118, 0.0157, 0.0157,  ..., 0.0275, 0.0314, 0.0275],
         [0.0157, 0.0118, 0.0118,  ..., 0.0431, 0.0471, 0.0353],
         ...,
         [0.4000, 0.3529, 0.2745,  ..., 0.1882, 0.2078, 0.3608],
         [0.3373, 0.2863, 0.2039,  ..., 0.1176, 0.2431, 0.6000],
         [0.2824, 0.2314, 0.1725,  ..., 0.1843, 0.3373, 0.6471]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0157, 0.0078, 0.0039,  ..., 0.2118, 0.1686, 0.1059],
         [0.0314, 0.0157, 0.0078,  ..., 0.1961, 0.1333, 0.1137],
         [0.0510, 0.0196, 0.0118,  ..., 0.1725, 0.1216, 0.0706]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0157, 0.0078, 0.0039,  ..., 0.2118, 0.1686, 0.1059],
         [0.0314, 0.0157, 0.0078,  ..., 0.1961, 0.1333, 0.1137],
         [0.0510, 0.0196, 0.0118,  ..., 0.1725, 0.1216, 0.0706]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0157, 0.0078, 0.0039,  ..., 0.2118, 0.1686, 0.1059],
         [0.0314, 0.0157, 0.0078,  ..., 0.1961, 0.1333, 0.1137],
         [0.0510, 0.0196, 0.0118,  ..., 0.1725, 0.1216, 0.0706]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1059, 0.0980, 0.1373,  ..., 0.0902, 0.1216, 0.1216],
         [0.1098, 0.1059, 0.1333,  ..., 0.0627, 0.1020, 0.1137],
         [0.1137, 0.0980, 0.1137,  ..., 0.0431, 0.0667, 0.0863],
         ...,
         [0.2745, 0.2824, 0.2941,  ..., 0.1020, 0.0902, 0.0902],
         [0.3961, 0.3686, 0.3373,  ..., 0.1333, 0.1176, 0.1059],
         [0.4000, 0.4392, 0.3569,  ..., 0.1569, 0.1294, 0.1216]],
        [[0.1059, 0.0980, 0.1373,  ..., 0.0902, 0.1216, 0.1216],
         [0.1098, 0.1059, 0.1333,  ..., 0.0627, 0.1020, 0.1137],
         [0.1137, 0.0980, 0.1137,  ..., 0.0431, 0.0667, 0.0863],
         ...,
         [0.2745, 0.2824, 0.2941,  ..., 0.1020, 0.0902, 0.0902],
         [0.3961, 0.3686, 0.3373,  ..., 0.1333, 0.1176, 0.1059],
         [0.4000, 0.4392, 0.3569,  ..., 0.1569, 0.1294, 0.1216]],
        [[0.1059, 0.0980, 0.1373,  ..., 0.0902, 0.1216, 0.1216],
         [0.1098, 0.1059, 0.1333,  ..., 0.0627, 0.1020, 0.1137],
         [0.1137, 0.0980, 0.1137,  ..., 0.0431, 0.0667, 0.0863],
         ...,
         [0.2745, 0.2824, 0.2941,  ..., 0.1020, 0.0902, 0.0902],
         [0.3961, 0.3686, 0.3373,  ..., 0.1333, 0.1176, 0.1059],
         [0.4000, 0.4392, 0.3569,  ..., 0.1569, 0.1294, 0.1216]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.2706, 0.2824, 0.2941,  ..., 0.0588, 0.0863, 0.1059],
         [0.1765, 0.1725, 0.1725,  ..., 0.0627, 0.0980, 0.1176],
         [0.1373, 0.0980, 0.0902,  ..., 0.0902, 0.1098, 0.1137],
         ...,
         [0.0353, 0.0275, 0.0196,  ..., 0.1020, 0.0588, 0.0275],
         [0.0549, 0.0353, 0.0275,  ..., 0.2196, 0.1333, 0.0745],
         [0.0588, 0.0392, 0.0353,  ..., 0.2471, 0.2275, 0.1529]],
        [[0.2706, 0.2824, 0.2941,  ..., 0.0588, 0.0863, 0.1059],
         [0.1765, 0.1725, 0.1725,  ..., 0.0627, 0.0980, 0.1176],
         [0.1373, 0.0980, 0.0902,  ..., 0.0902, 0.1098, 0.1137],
         ...,
         [0.0353, 0.0275, 0.0196,  ..., 0.1020, 0.0588, 0.0275],
         [0.0549, 0.0353, 0.0275,  ..., 0.2196, 0.1333, 0.0745],
         [0.0588, 0.0392, 0.0353,  ..., 0.2471, 0.2275, 0.1529]],
        [[0.2706, 0.2824, 0.2941,  ..., 0.0588, 0.0863, 0.1059],
         [0.1765, 0.1725, 0.1725,  ..., 0.0627, 0.0980, 0.1176],
         [0.1373, 0.0980, 0.0902,  ..., 0.0902, 0.1098, 0.1137],
         ...,
         [0.0353, 0.0275, 0.0196,  ..., 0.1020, 0.0588, 0.0275],
         [0.0549, 0.0353, 0.0275,  ..., 0.2196, 0.1333, 0.0745],
         [0.0588, 0.0392, 0.0353,  ..., 0.2471, 0.2275, 0.1529]]]), 'mask': tensor([[1., 1., 0.,  ..., 1., 1., 1.],
        [1., 1., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 1., 1.]])}
sample {'image': tensor([[[0.7647, 0.7608, 0.4980,  ..., 0.4588, 0.6235, 0.4824],
         [0.7569, 0.7569, 0.4196,  ..., 0.2980, 0.6078, 0.6235],
         [0.7608, 0.7647, 0.4471,  ..., 0.1647, 0.4078, 0.6353],
         ...,
         [0.0392, 0.0353, 0.0431,  ..., 0.3176, 0.3020, 0.1961],
         [0.0353, 0.0392, 0.0510,  ..., 0.3922, 0.3725, 0.2235],
         [0.0392, 0.0431, 0.0431,  ..., 0.3647, 0.3804, 0.2078]],
        [[0.7647, 0.7608, 0.4980,  ..., 0.4588, 0.6235, 0.4824],
         [0.7569, 0.7569, 0.4196,  ..., 0.2980, 0.6078, 0.6235],
         [0.7608, 0.7647, 0.4471,  ..., 0.1647, 0.4078, 0.6353],
         ...,
         [0.0392, 0.0353, 0.0431,  ..., 0.3176, 0.3020, 0.1961],
         [0.0353, 0.0392, 0.0510,  ..., 0.3922, 0.3725, 0.2235],
         [0.0392, 0.0431, 0.0431,  ..., 0.3647, 0.3804, 0.2078]],
        [[0.7647, 0.7608, 0.4980,  ..., 0.4588, 0.6235, 0.4824],
         [0.7569, 0.7569, 0.4196,  ..., 0.2980, 0.6078, 0.6235],
         [0.7608, 0.7647, 0.4471,  ..., 0.1647, 0.4078, 0.6353],
         ...,
         [0.0392, 0.0353, 0.0431,  ..., 0.3176, 0.3020, 0.1961],
         [0.0353, 0.0392, 0.0510,  ..., 0.3922, 0.3725, 0.2235],
         [0.0392, 0.0431, 0.0431,  ..., 0.3647, 0.3804, 0.2078]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 0., 1., 1.]])}
sample {'image': tensor([[[0.0588, 0.0627, 0.0941,  ..., 0.0667, 0.0431, 0.0235],
         [0.0980, 0.1137, 0.1490,  ..., 0.0863, 0.0510, 0.0275],
         [0.1922, 0.2118, 0.2078,  ..., 0.1137, 0.0667, 0.0392],
         ...,
         [0.2667, 0.4118, 0.2902,  ..., 0.0000, 0.0000, 0.0000],
         [0.2627, 0.3843, 0.3333,  ..., 0.0000, 0.0000, 0.0000],
         [0.3176, 0.3333, 0.2510,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0588, 0.0627, 0.0941,  ..., 0.0667, 0.0431, 0.0235],
         [0.0980, 0.1137, 0.1490,  ..., 0.0863, 0.0510, 0.0275],
         [0.1922, 0.2118, 0.2078,  ..., 0.1137, 0.0667, 0.0392],
         ...,
         [0.2667, 0.4118, 0.2902,  ..., 0.0000, 0.0000, 0.0000],
         [0.2627, 0.3843, 0.3333,  ..., 0.0000, 0.0000, 0.0000],
         [0.3176, 0.3333, 0.2510,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0588, 0.0627, 0.0941,  ..., 0.0667, 0.0431, 0.0235],
         [0.0980, 0.1137, 0.1490,  ..., 0.0863, 0.0510, 0.0275],
         [0.1922, 0.2118, 0.2078,  ..., 0.1137, 0.0667, 0.0392],
         ...,
         [0.2667, 0.4118, 0.2902,  ..., 0.0000, 0.0000, 0.0000],
         [0.2627, 0.3843, 0.3333,  ..., 0.0000, 0.0000, 0.0000],
         [0.3176, 0.3333, 0.2510,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [1., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1137, 0.1529],
         [0.0000, 0.0000, 0.0039,  ..., 0.1490, 0.1333, 0.1608],
         [0.0000, 0.0078, 0.0118,  ..., 0.2000, 0.1569, 0.1922],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1137, 0.1529],
         [0.0000, 0.0000, 0.0039,  ..., 0.1490, 0.1333, 0.1608],
         [0.0000, 0.0078, 0.0118,  ..., 0.2000, 0.1569, 0.1922],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1137, 0.1529],
         [0.0000, 0.0000, 0.0039,  ..., 0.1490, 0.1333, 0.1608],
         [0.0000, 0.0078, 0.0118,  ..., 0.2000, 0.1569, 0.1922],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0039, 0.0039],
         [0.0118, 0.0118, 0.0157,  ..., 0.0196, 0.0078, 0.0039],
         [0.0196, 0.0275, 0.0196,  ..., 0.0118, 0.0118, 0.0078],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0157, 0.0157],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0353, 0.0392],
         [0.0078, 0.0078, 0.0039,  ..., 0.0275, 0.0235, 0.0353]],
        [[0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0039, 0.0039],
         [0.0118, 0.0118, 0.0157,  ..., 0.0196, 0.0078, 0.0039],
         [0.0196, 0.0275, 0.0196,  ..., 0.0118, 0.0118, 0.0078],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0157, 0.0157],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0353, 0.0392],
         [0.0078, 0.0078, 0.0039,  ..., 0.0275, 0.0235, 0.0353]],
        [[0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0039, 0.0039],
         [0.0118, 0.0118, 0.0157,  ..., 0.0196, 0.0078, 0.0039],
         [0.0196, 0.0275, 0.0196,  ..., 0.0118, 0.0118, 0.0078],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0157, 0.0157],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0353, 0.0392],
         [0.0078, 0.0078, 0.0039,  ..., 0.0275, 0.0235, 0.0353]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1490, 0.1333, 0.1294,  ..., 0.1529, 0.1412, 0.1569],
         [0.1373, 0.1216, 0.0941,  ..., 0.1216, 0.1294, 0.1451],
         [0.1490, 0.1137, 0.0824,  ..., 0.1098, 0.1137, 0.1647],
         ...,
         [0.0196, 0.0078, 0.0078,  ..., 0.0039, 0.0078, 0.0118],
         [0.0275, 0.0118, 0.0078,  ..., 0.0000, 0.0039, 0.0078],
         [0.0275, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0039]],
        [[0.1490, 0.1333, 0.1294,  ..., 0.1529, 0.1412, 0.1569],
         [0.1373, 0.1216, 0.0941,  ..., 0.1216, 0.1294, 0.1451],
         [0.1490, 0.1137, 0.0824,  ..., 0.1098, 0.1137, 0.1647],
         ...,
         [0.0196, 0.0078, 0.0078,  ..., 0.0039, 0.0078, 0.0118],
         [0.0275, 0.0118, 0.0078,  ..., 0.0000, 0.0039, 0.0078],
         [0.0275, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0039]],
        [[0.1490, 0.1333, 0.1294,  ..., 0.1529, 0.1412, 0.1569],
         [0.1373, 0.1216, 0.0941,  ..., 0.1216, 0.1294, 0.1451],
         [0.1490, 0.1137, 0.0824,  ..., 0.1098, 0.1137, 0.1647],
         ...,
         [0.0196, 0.0078, 0.0078,  ..., 0.0039, 0.0078, 0.0118],
         [0.0275, 0.0118, 0.0078,  ..., 0.0000, 0.0039, 0.0078],
         [0.0275, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.2627, 0.1922, 0.1608,  ..., 0.6745, 0.4039, 0.1294],
         [0.1569, 0.1529, 0.1333,  ..., 0.6824, 0.3333, 0.0980],
         [0.1529, 0.0941, 0.1059,  ..., 0.5725, 0.3098, 0.1216],
         ...,
         [0.4745, 0.2706, 0.2078,  ..., 0.0431, 0.0235, 0.0196],
         [0.6353, 0.4863, 0.4039,  ..., 0.0510, 0.0314, 0.0235],
         [0.3608, 0.2196, 0.1569,  ..., 0.0510, 0.0392, 0.0314]],
        [[0.2627, 0.1922, 0.1608,  ..., 0.6745, 0.4039, 0.1294],
         [0.1569, 0.1529, 0.1333,  ..., 0.6824, 0.3333, 0.0980],
         [0.1529, 0.0941, 0.1059,  ..., 0.5725, 0.3098, 0.1216],
         ...,
         [0.4745, 0.2706, 0.2078,  ..., 0.0431, 0.0235, 0.0196],
         [0.6353, 0.4863, 0.4039,  ..., 0.0510, 0.0314, 0.0235],
         [0.3608, 0.2196, 0.1569,  ..., 0.0510, 0.0392, 0.0314]],
        [[0.2627, 0.1922, 0.1608,  ..., 0.6745, 0.4039, 0.1294],
         [0.1569, 0.1529, 0.1333,  ..., 0.6824, 0.3333, 0.0980],
         [0.1529, 0.0941, 0.1059,  ..., 0.5725, 0.3098, 0.1216],
         ...,
         [0.4745, 0.2706, 0.2078,  ..., 0.0431, 0.0235, 0.0196],
         [0.6353, 0.4863, 0.4039,  ..., 0.0510, 0.0314, 0.0235],
         [0.3608, 0.2196, 0.1569,  ..., 0.0510, 0.0392, 0.0314]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.3137, 0.3569, 0.3647,  ..., 0.0039, 0.0078, 0.0118],
         [0.2667, 0.3608, 0.4118,  ..., 0.0039, 0.0078, 0.0118],
         [0.1843, 0.2667, 0.3529,  ..., 0.0039, 0.0078, 0.0078],
         ...,
         [0.0549, 0.0588, 0.0275,  ..., 0.0000, 0.0000, 0.0000],
         [0.1216, 0.1412, 0.0863,  ..., 0.0196, 0.0078, 0.0039],
         [0.1922, 0.2235, 0.1765,  ..., 0.0392, 0.0235, 0.0118]],
        [[0.3137, 0.3569, 0.3647,  ..., 0.0039, 0.0078, 0.0118],
         [0.2667, 0.3608, 0.4118,  ..., 0.0039, 0.0078, 0.0118],
         [0.1843, 0.2667, 0.3529,  ..., 0.0039, 0.0078, 0.0078],
         ...,
         [0.0549, 0.0588, 0.0275,  ..., 0.0000, 0.0000, 0.0000],
         [0.1216, 0.1412, 0.0863,  ..., 0.0196, 0.0078, 0.0039],
         [0.1922, 0.2235, 0.1765,  ..., 0.0392, 0.0235, 0.0118]],
        [[0.3137, 0.3569, 0.3647,  ..., 0.0039, 0.0078, 0.0118],
         [0.2667, 0.3608, 0.4118,  ..., 0.0039, 0.0078, 0.0118],
         [0.1843, 0.2667, 0.3529,  ..., 0.0039, 0.0078, 0.0078],
         ...,
         [0.0549, 0.0588, 0.0275,  ..., 0.0000, 0.0000, 0.0000],
         [0.1216, 0.1412, 0.0863,  ..., 0.0196, 0.0078, 0.0039],
         [0.1922, 0.2235, 0.1765,  ..., 0.0392, 0.0235, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}sample {'image': tensor([[[0.1255, 0.1922, 0.2510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.1882, 0.2980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0980, 0.1922,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.0706, 0.0392,  ..., 0.0431, 0.0314, 0.0353],
         [0.0784, 0.0471, 0.0314,  ..., 0.0196, 0.0196, 0.0353],
         [0.0745, 0.0549, 0.0235,  ..., 0.0235, 0.0353, 0.0471]],
        [[0.1255, 0.1922, 0.2510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.1882, 0.2980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0980, 0.1922,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.0706, 0.0392,  ..., 0.0431, 0.0314, 0.0353],
         [0.0784, 0.0471, 0.0314,  ..., 0.0196, 0.0196, 0.0353],
         [0.0745, 0.0549, 0.0235,  ..., 0.0235, 0.0353, 0.0471]],
        [[0.1255, 0.1922, 0.2510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.1882, 0.2980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0980, 0.1922,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.0706, 0.0392,  ..., 0.0431, 0.0314, 0.0353],
         [0.0784, 0.0471, 0.0314,  ..., 0.0196, 0.0196, 0.0353],
         [0.0745, 0.0549, 0.0235,  ..., 0.0235, 0.0353, 0.0471]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 1., 1.],
        [1., 1., 1.,  ..., 0., 0., 1.],
        [0., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0549, 0.0667, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0784, 0.1020, 0.1529,  ..., 0.0000, 0.0000, 0.0000],
         [0.1098, 0.1333, 0.1843,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.2941, 0.3098, 0.3216],
         [0.0000, 0.0000, 0.0000,  ..., 0.2784, 0.2745, 0.2706],
         [0.0000, 0.0000, 0.0000,  ..., 0.2275, 0.2275, 0.2157]],
        [[0.0549, 0.0667, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0784, 0.1020, 0.1529,  ..., 0.0000, 0.0000, 0.0000],
         [0.1098, 0.1333, 0.1843,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.2941, 0.3098, 0.3216],
         [0.0000, 0.0000, 0.0000,  ..., 0.2784, 0.2745, 0.2706],
         [0.0000, 0.0000, 0.0000,  ..., 0.2275, 0.2275, 0.2157]],
        [[0.0549, 0.0667, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0784, 0.1020, 0.1529,  ..., 0.0000, 0.0000, 0.0000],
         [0.1098, 0.1333, 0.1843,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.2941, 0.3098, 0.3216],
         [0.0000, 0.0000, 0.0000,  ..., 0.2784, 0.2745, 0.2706],
         [0.0000, 0.0000, 0.0000,  ..., 0.2275, 0.2275, 0.2157]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0392, 0.0235, 0.0235,  ..., 0.0863, 0.1059, 0.1176],
         [0.0431, 0.0275, 0.0196,  ..., 0.0549, 0.0510, 0.0627],
         [0.0392, 0.0275, 0.0235,  ..., 0.0549, 0.0431, 0.0510],
         ...,
         [0.0000, 0.0078, 0.0078,  ..., 0.0078, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0392, 0.0235, 0.0235,  ..., 0.0863, 0.1059, 0.1176],
         [0.0431, 0.0275, 0.0196,  ..., 0.0549, 0.0510, 0.0627],
         [0.0392, 0.0275, 0.0235,  ..., 0.0549, 0.0431, 0.0510],
         ...,
         [0.0000, 0.0078, 0.0078,  ..., 0.0078, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0392, 0.0235, 0.0235,  ..., 0.0863, 0.1059, 0.1176],
         [0.0431, 0.0275, 0.0196,  ..., 0.0549, 0.0510, 0.0627],
         [0.0392, 0.0275, 0.0235,  ..., 0.0549, 0.0431, 0.0510],
         ...,
         [0.0000, 0.0078, 0.0078,  ..., 0.0078, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0941, 0.0863, 0.0784,  ..., 0.0196, 0.0196, 0.0275],
         [0.0431, 0.0471, 0.0431,  ..., 0.0235, 0.0196, 0.0235],
         [0.0275, 0.0314, 0.0275,  ..., 0.0314, 0.0235, 0.0235],
         ...,
         [0.0235, 0.0314, 0.0431,  ..., 0.2353, 0.1922, 0.1569],
         [0.0157, 0.0235, 0.0353,  ..., 0.2000, 0.1412, 0.1098],
         [0.0157, 0.0235, 0.0392,  ..., 0.2118, 0.1529, 0.1020]],
        [[0.0941, 0.0863, 0.0784,  ..., 0.0196, 0.0196, 0.0275],
         [0.0431, 0.0471, 0.0431,  ..., 0.0235, 0.0196, 0.0235],
         [0.0275, 0.0314, 0.0275,  ..., 0.0314, 0.0235, 0.0235],
         ...,
         [0.0235, 0.0314, 0.0431,  ..., 0.2353, 0.1922, 0.1569],
         [0.0157, 0.0235, 0.0353,  ..., 0.2000, 0.1412, 0.1098],
         [0.0157, 0.0235, 0.0392,  ..., 0.2118, 0.1529, 0.1020]],
        [[0.0941, 0.0863, 0.0784,  ..., 0.0196, 0.0196, 0.0275],
         [0.0431, 0.0471, 0.0431,  ..., 0.0235, 0.0196, 0.0235],
         [0.0275, 0.0314, 0.0275,  ..., 0.0314, 0.0235, 0.0235],
         ...,
         [0.0235, 0.0314, 0.0431,  ..., 0.2353, 0.1922, 0.1569],
         [0.0157, 0.0235, 0.0353,  ..., 0.2000, 0.1412, 0.1098],
         [0.0157, 0.0235, 0.0392,  ..., 0.2118, 0.1529, 0.1020]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0863, 0.1020, 0.1059,  ..., 0.2627, 0.2706, 0.2588],
         [0.0941, 0.0941, 0.0902,  ..., 0.2039, 0.1922, 0.2157],
         [0.1294, 0.1098, 0.0784,  ..., 0.0902, 0.0902, 0.1020],
         ...,
         [0.0353, 0.0549, 0.0902,  ..., 0.4706, 0.5333, 0.6039],
         [0.0314, 0.0510, 0.0863,  ..., 0.4627, 0.5255, 0.6431],
         [0.0353, 0.0510, 0.0627,  ..., 0.5490, 0.6039, 0.7294]],
        [[0.0863, 0.1020, 0.1059,  ..., 0.2627, 0.2706, 0.2588],
         [0.0941, 0.0941, 0.0902,  ..., 0.2039, 0.1922, 0.2157],
         [0.1294, 0.1098, 0.0784,  ..., 0.0902, 0.0902, 0.1020],
         ...,
         [0.0353, 0.0549, 0.0902,  ..., 0.4706, 0.5333, 0.6039],
         [0.0314, 0.0510, 0.0863,  ..., 0.4627, 0.5255, 0.6431],
         [0.0353, 0.0510, 0.0627,  ..., 0.5490, 0.6039, 0.7294]],
        [[0.0863, 0.1020, 0.1059,  ..., 0.2627, 0.2706, 0.2588],
         [0.0941, 0.0941, 0.0902,  ..., 0.2039, 0.1922, 0.2157],
         [0.1294, 0.1098, 0.0784,  ..., 0.0902, 0.0902, 0.1020],
         ...,
         [0.0353, 0.0549, 0.0902,  ..., 0.4706, 0.5333, 0.6039],
         [0.0314, 0.0510, 0.0863,  ..., 0.4627, 0.5255, 0.6431],
         [0.0353, 0.0510, 0.0627,  ..., 0.5490, 0.6039, 0.7294]]]), 'mask': tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0784, 0.0667, 0.0627,  ..., 0.1294, 0.1373, 0.1098],
         [0.0824, 0.0706, 0.0667,  ..., 0.1294, 0.1373, 0.0941],
         [0.1137, 0.0902, 0.0627,  ..., 0.1020, 0.1059, 0.0863],
         ...,
         [0.1333, 0.1451, 0.1647,  ..., 0.0000, 0.0000, 0.0078],
         [0.1647, 0.1608, 0.1216,  ..., 0.0000, 0.0000, 0.0039],
         [0.2667, 0.3020, 0.1333,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0784, 0.0667, 0.0627,  ..., 0.1294, 0.1373, 0.1098],
         [0.0824, 0.0706, 0.0667,  ..., 0.1294, 0.1373, 0.0941],
         [0.1137, 0.0902, 0.0627,  ..., 0.1020, 0.1059, 0.0863],
         ...,
         [0.1333, 0.1451, 0.1647,  ..., 0.0000, 0.0000, 0.0078],
         [0.1647, 0.1608, 0.1216,  ..., 0.0000, 0.0000, 0.0039],
         [0.2667, 0.3020, 0.1333,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0784, 0.0667, 0.0627,  ..., 0.1294, 0.1373, 0.1098],
         [0.0824, 0.0706, 0.0667,  ..., 0.1294, 0.1373, 0.0941],
         [0.1137, 0.0902, 0.0627,  ..., 0.1020, 0.1059, 0.0863],
         ...,
         [0.1333, 0.1451, 0.1647,  ..., 0.0000, 0.0000, 0.0078],
         [0.1647, 0.1608, 0.1216,  ..., 0.0000, 0.0000, 0.0039],
         [0.2667, 0.3020, 0.1333,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0980, 0.1176, 0.1529,  ..., 0.0431, 0.0431, 0.0627],
         [0.1020, 0.1255, 0.1451,  ..., 0.0196, 0.0235, 0.0275],
         [0.1059, 0.1216, 0.1373,  ..., 0.0118, 0.0157, 0.0157],
         ...,
         [0.0039, 0.0157, 0.0275,  ..., 0.2196, 0.2196, 0.2000],
         [0.0118, 0.0510, 0.0824,  ..., 0.2471, 0.2706, 0.2902],
         [0.0275, 0.0784, 0.1373,  ..., 0.2510, 0.2784, 0.3255]],
        [[0.0980, 0.1176, 0.1529,  ..., 0.0431, 0.0431, 0.0627],
         [0.1020, 0.1255, 0.1451,  ..., 0.0196, 0.0235, 0.0275],
         [0.1059, 0.1216, 0.1373,  ..., 0.0118, 0.0157, 0.0157],
         ...,
         [0.0039, 0.0157, 0.0275,  ..., 0.2196, 0.2196, 0.2000],
         [0.0118, 0.0510, 0.0824,  ..., 0.2471, 0.2706, 0.2902],
         [0.0275, 0.0784, 0.1373,  ..., 0.2510, 0.2784, 0.3255]],
        [[0.0980, 0.1176, 0.1529,  ..., 0.0431, 0.0431, 0.0627],
         [0.1020, 0.1255, 0.1451,  ..., 0.0196, 0.0235, 0.0275],
         [0.1059, 0.1216, 0.1373,  ..., 0.0118, 0.0157, 0.0157],
         ...,
         [0.0039, 0.0157, 0.0275,  ..., 0.2196, 0.2196, 0.2000],
         [0.0118, 0.0510, 0.0824,  ..., 0.2471, 0.2706, 0.2902],
         [0.0275, 0.0784, 0.1373,  ..., 0.2510, 0.2784, 0.3255]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
Epoch 11/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 11/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.31img/s, loss (batch)=1.05]
Epoch 12/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 12/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.33img/s, loss (batch)=1.04]
Epoch 13/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 13/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.12img/s, loss (batch)=0.965]
Epoch 14/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 14/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.24img/s, loss (batch)=1.22]
Epoch 15/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
sample {'image': tensor([[[0.0078, 0.0118, 0.0196,  ..., 0.0275, 0.0510, 0.1098],
         [0.0118, 0.0118, 0.0196,  ..., 0.0824, 0.1255, 0.1882],
         [0.0196, 0.0157, 0.0235,  ..., 0.2157, 0.2431, 0.2353],
         ...,
         [0.2902, 0.4118, 0.4667,  ..., 0.0000, 0.0000, 0.0000],
         [0.3373, 0.4157, 0.4627,  ..., 0.0000, 0.0000, 0.0000],
         [0.3216, 0.3765, 0.3490,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0078, 0.0118, 0.0196,  ..., 0.0275, 0.0510, 0.1098],
         [0.0118, 0.0118, 0.0196,  ..., 0.0824, 0.1255, 0.1882],
         [0.0196, 0.0157, 0.0235,  ..., 0.2157, 0.2431, 0.2353],
         ...,
         [0.2902, 0.4118, 0.4667,  ..., 0.0000, 0.0000, 0.0000],
         [0.3373, 0.4157, 0.4627,  ..., 0.0000, 0.0000, 0.0000],
         [0.3216, 0.3765, 0.3490,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0078, 0.0118, 0.0196,  ..., 0.0275, 0.0510, 0.1098],
         [0.0118, 0.0118, 0.0196,  ..., 0.0824, 0.1255, 0.1882],
         [0.0196, 0.0157, 0.0235,  ..., 0.2157, 0.2431, 0.2353],
         ...,
         [0.2902, 0.4118, 0.4667,  ..., 0.0000, 0.0000, 0.0000],
         [0.3373, 0.4157, 0.4627,  ..., 0.0000, 0.0000, 0.0000],
         [0.3216, 0.3765, 0.3490,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.0824, 0.0510],
         [0.0039, 0.0039, 0.0039,  ..., 0.2314, 0.1686, 0.0941],
         [0.0118, 0.0157, 0.0196,  ..., 0.2902, 0.2627, 0.1451],
         ...,
         [0.0078, 0.0235, 0.0510,  ..., 0.1255, 0.1804, 0.1922],
         [0.0078, 0.0235, 0.0627,  ..., 0.1765, 0.2392, 0.2667],
         [0.0078, 0.0275, 0.0784,  ..., 0.2627, 0.2941, 0.2824]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.0824, 0.0510],
         [0.0039, 0.0039, 0.0039,  ..., 0.2314, 0.1686, 0.0941],
         [0.0118, 0.0157, 0.0196,  ..., 0.2902, 0.2627, 0.1451],
         ...,
         [0.0078, 0.0235, 0.0510,  ..., 0.1255, 0.1804, 0.1922],
         [0.0078, 0.0235, 0.0627,  ..., 0.1765, 0.2392, 0.2667],
         [0.0078, 0.0275, 0.0784,  ..., 0.2627, 0.2941, 0.2824]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.0824, 0.0510],
         [0.0039, 0.0039, 0.0039,  ..., 0.2314, 0.1686, 0.0941],
         [0.0118, 0.0157, 0.0196,  ..., 0.2902, 0.2627, 0.1451],
         ...,
         [0.0078, 0.0235, 0.0510,  ..., 0.1255, 0.1804, 0.1922],
         [0.0078, 0.0235, 0.0627,  ..., 0.1765, 0.2392, 0.2667],
         [0.0078, 0.0275, 0.0784,  ..., 0.2627, 0.2941, 0.2824]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0118,  ..., 0.0196, 0.0471, 0.0784],
         [0.0039, 0.0039, 0.0118,  ..., 0.0275, 0.0588, 0.1020],
         [0.0039, 0.0078, 0.0118,  ..., 0.0275, 0.0588, 0.0863],
         ...,
         [0.0314, 0.0196, 0.0196,  ..., 0.1412, 0.1922, 0.1725],
         [0.0157, 0.0118, 0.0118,  ..., 0.1804, 0.2078, 0.1961],
         [0.0118, 0.0078, 0.0078,  ..., 0.2235, 0.2627, 0.2118]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.0196, 0.0471, 0.0784],
         [0.0039, 0.0039, 0.0118,  ..., 0.0275, 0.0588, 0.1020],
         [0.0039, 0.0078, 0.0118,  ..., 0.0275, 0.0588, 0.0863],
         ...,
         [0.0314, 0.0196, 0.0196,  ..., 0.1412, 0.1922, 0.1725],
         [0.0157, 0.0118, 0.0118,  ..., 0.1804, 0.2078, 0.1961],
         [0.0118, 0.0078, 0.0078,  ..., 0.2235, 0.2627, 0.2118]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.0196, 0.0471, 0.0784],
         [0.0039, 0.0039, 0.0118,  ..., 0.0275, 0.0588, 0.1020],
         [0.0039, 0.0078, 0.0118,  ..., 0.0275, 0.0588, 0.0863],
         ...,
         [0.0314, 0.0196, 0.0196,  ..., 0.1412, 0.1922, 0.1725],
         [0.0157, 0.0118, 0.0118,  ..., 0.1804, 0.2078, 0.1961],
         [0.0118, 0.0078, 0.0078,  ..., 0.2235, 0.2627, 0.2118]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.7294, 0.2353, 0.0353,  ..., 0.7059, 0.6824, 0.6000],
         [0.5412, 0.1373, 0.0235,  ..., 0.7608, 0.7412, 0.7490],
         [0.4471, 0.1020, 0.0157,  ..., 0.8353, 0.7765, 0.7490],
         ...,
         [0.0980, 0.0824, 0.0784,  ..., 0.2118, 0.2824, 0.3686],
         [0.0510, 0.0588, 0.0745,  ..., 0.3725, 0.4510, 0.4667],
         [0.0353, 0.0471, 0.0627,  ..., 0.7098, 0.7137, 0.4941]],
        [[0.7294, 0.2353, 0.0353,  ..., 0.7059, 0.6824, 0.6000],
         [0.5412, 0.1373, 0.0235,  ..., 0.7608, 0.7412, 0.7490],
         [0.4471, 0.1020, 0.0157,  ..., 0.8353, 0.7765, 0.7490],
         ...,
         [0.0980, 0.0824, 0.0784,  ..., 0.2118, 0.2824, 0.3686],
         [0.0510, 0.0588, 0.0745,  ..., 0.3725, 0.4510, 0.4667],
         [0.0353, 0.0471, 0.0627,  ..., 0.7098, 0.7137, 0.4941]],
        [[0.7294, 0.2353, 0.0353,  ..., 0.7059, 0.6824, 0.6000],
         [0.5412, 0.1373, 0.0235,  ..., 0.7608, 0.7412, 0.7490],
         [0.4471, 0.1020, 0.0157,  ..., 0.8353, 0.7765, 0.7490],
         ...,
         [0.0980, 0.0824, 0.0784,  ..., 0.2118, 0.2824, 0.3686],
         [0.0510, 0.0588, 0.0745,  ..., 0.3725, 0.4510, 0.4667],
         [0.0353, 0.0471, 0.0627,  ..., 0.7098, 0.7137, 0.4941]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0118, 0.0118, 0.0118,  ..., 0.0353, 0.1255, 0.2510],
         [0.0078, 0.0078, 0.0078,  ..., 0.0392, 0.1059, 0.1922],
         [0.0078, 0.0039, 0.0039,  ..., 0.0902, 0.1451, 0.2275],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0118, 0.0118, 0.0118,  ..., 0.0353, 0.1255, 0.2510],
         [0.0078, 0.0078, 0.0078,  ..., 0.0392, 0.1059, 0.1922],
         [0.0078, 0.0039, 0.0039,  ..., 0.0902, 0.1451, 0.2275],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0118, 0.0118, 0.0118,  ..., 0.0353, 0.1255, 0.2510],
         [0.0078, 0.0078, 0.0078,  ..., 0.0392, 0.1059, 0.1922],
         [0.0078, 0.0039, 0.0039,  ..., 0.0902, 0.1451, 0.2275],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0157, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0157, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0235, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0157, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0157, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0235, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0157, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0157, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0235, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0118, 0.0118, 0.0078,  ..., 0.1255, 0.1255, 0.1255],
         [0.0118, 0.0118, 0.0157,  ..., 0.1686, 0.1765, 0.1882],
         [0.0118, 0.0157, 0.0196,  ..., 0.2118, 0.2471, 0.2275],
         ...,
         [0.0471, 0.0549, 0.0745,  ..., 0.0353, 0.0275, 0.0235],
         [0.0980, 0.0863, 0.0745,  ..., 0.0431, 0.0275, 0.0275],
         [0.1412, 0.1098, 0.0549,  ..., 0.0431, 0.0314, 0.0275]],
        [[0.0118, 0.0118, 0.0078,  ..., 0.1255, 0.1255, 0.1255],
         [0.0118, 0.0118, 0.0157,  ..., 0.1686, 0.1765, 0.1882],
         [0.0118, 0.0157, 0.0196,  ..., 0.2118, 0.2471, 0.2275],
         ...,
         [0.0471, 0.0549, 0.0745,  ..., 0.0353, 0.0275, 0.0235],
         [0.0980, 0.0863, 0.0745,  ..., 0.0431, 0.0275, 0.0275],
         [0.1412, 0.1098, 0.0549,  ..., 0.0431, 0.0314, 0.0275]],
        [[0.0118, 0.0118, 0.0078,  ..., 0.1255, 0.1255, 0.1255],
         [0.0118, 0.0118, 0.0157,  ..., 0.1686, 0.1765, 0.1882],
         [0.0118, 0.0157, 0.0196,  ..., 0.2118, 0.2471, 0.2275],
         ...,
         [0.0471, 0.0549, 0.0745,  ..., 0.0353, 0.0275, 0.0235],
         [0.0980, 0.0863, 0.0745,  ..., 0.0431, 0.0275, 0.0275],
         [0.1412, 0.1098, 0.0549,  ..., 0.0431, 0.0314, 0.0275]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.2784, 0.0941, 0.0314,  ..., 0.0000, 0.0078, 0.0157],
         [0.2627, 0.1333, 0.0471,  ..., 0.0039, 0.0078, 0.0196],
         [0.2667, 0.2196, 0.0941,  ..., 0.0000, 0.0078, 0.0196],
         ...,
         [0.0863, 0.0275, 0.0157,  ..., 0.2706, 0.1686, 0.1451],
         [0.0471, 0.0196, 0.0196,  ..., 0.2196, 0.1451, 0.1098],
         [0.0353, 0.0118, 0.0157,  ..., 0.2196, 0.1412, 0.1059]],
        [[0.2784, 0.0941, 0.0314,  ..., 0.0000, 0.0078, 0.0157],
         [0.2627, 0.1333, 0.0471,  ..., 0.0039, 0.0078, 0.0196],
         [0.2667, 0.2196, 0.0941,  ..., 0.0000, 0.0078, 0.0196],
         ...,
         [0.0863, 0.0275, 0.0157,  ..., 0.2706, 0.1686, 0.1451],
         [0.0471, 0.0196, 0.0196,  ..., 0.2196, 0.1451, 0.1098],
         [0.0353, 0.0118, 0.0157,  ..., 0.2196, 0.1412, 0.1059]],
        [[0.2784, 0.0941, 0.0314,  ..., 0.0000, 0.0078, 0.0157],
         [0.2627, 0.1333, 0.0471,  ..., 0.0039, 0.0078, 0.0196],
         [0.2667, 0.2196, 0.0941,  ..., 0.0000, 0.0078, 0.0196],
         ...,
         [0.0863, 0.0275, 0.0157,  ..., 0.2706, 0.1686, 0.1451],
         [0.0471, 0.0196, 0.0196,  ..., 0.2196, 0.1451, 0.1098],
         [0.0353, 0.0118, 0.0157,  ..., 0.2196, 0.1412, 0.1059]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.]])}
sample {'image': tensor([[[0.2353, 0.3294, 0.2549,  ..., 0.1451, 0.1294, 0.1098],
         [0.3843, 0.3804, 0.2824,  ..., 0.1373, 0.1216, 0.1059],
         [0.3529, 0.3529, 0.2667,  ..., 0.1255, 0.1137, 0.1137],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.2353, 0.3294, 0.2549,  ..., 0.1451, 0.1294, 0.1098],
         [0.3843, 0.3804, 0.2824,  ..., 0.1373, 0.1216, 0.1059],
         [0.3529, 0.3529, 0.2667,  ..., 0.1255, 0.1137, 0.1137],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.2353, 0.3294, 0.2549,  ..., 0.1451, 0.1294, 0.1098],
         [0.3843, 0.3804, 0.2824,  ..., 0.1373, 0.1216, 0.1059],
         [0.3529, 0.3529, 0.2667,  ..., 0.1255, 0.1137, 0.1137],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1176, 0.0706, 0.0235,  ..., 0.1961, 0.1647, 0.1020],
         [0.1176, 0.1373, 0.0627,  ..., 0.2235, 0.1882, 0.0863],
         [0.0863, 0.1529, 0.1294,  ..., 0.0941, 0.0863, 0.0627],
         ...,
         [0.0157, 0.0196, 0.0196,  ..., 0.0627, 0.0314, 0.0118],
         [0.0353, 0.0431, 0.0275,  ..., 0.0471, 0.0235, 0.0118],
         [0.0353, 0.0627, 0.0392,  ..., 0.0510, 0.0235, 0.0157]],
        [[0.1176, 0.0706, 0.0235,  ..., 0.1961, 0.1647, 0.1020],
         [0.1176, 0.1373, 0.0627,  ..., 0.2235, 0.1882, 0.0863],
         [0.0863, 0.1529, 0.1294,  ..., 0.0941, 0.0863, 0.0627],
         ...,
         [0.0157, 0.0196, 0.0196,  ..., 0.0627, 0.0314, 0.0118],
         [0.0353, 0.0431, 0.0275,  ..., 0.0471, 0.0235, 0.0118],
         [0.0353, 0.0627, 0.0392,  ..., 0.0510, 0.0235, 0.0157]],
        [[0.1176, 0.0706, 0.0235,  ..., 0.1961, 0.1647, 0.1020],
         [0.1176, 0.1373, 0.0627,  ..., 0.2235, 0.1882, 0.0863],
         [0.0863, 0.1529, 0.1294,  ..., 0.0941, 0.0863, 0.0627],
         ...,
         [0.0157, 0.0196, 0.0196,  ..., 0.0627, 0.0314, 0.0118],
         [0.0353, 0.0431, 0.0275,  ..., 0.0471, 0.0235, 0.0118],
         [0.0353, 0.0627, 0.0392,  ..., 0.0510, 0.0235, 0.0157]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0078, 0.0118, 0.0157,  ..., 0.0196, 0.0078, 0.0078],
         [0.0118, 0.0235, 0.0235,  ..., 0.0196, 0.0118, 0.0078],
         [0.0196, 0.0314, 0.0549,  ..., 0.0510, 0.0353, 0.0157],
         ...,
         [0.0392, 0.0706, 0.0980,  ..., 0.0745, 0.0667, 0.0431],
         [0.1098, 0.1529, 0.1647,  ..., 0.0549, 0.0510, 0.0431],
         [0.1725, 0.1922, 0.2196,  ..., 0.0353, 0.0314, 0.0275]],
        [[0.0078, 0.0118, 0.0157,  ..., 0.0196, 0.0078, 0.0078],
         [0.0118, 0.0235, 0.0235,  ..., 0.0196, 0.0118, 0.0078],
         [0.0196, 0.0314, 0.0549,  ..., 0.0510, 0.0353, 0.0157],
         ...,
         [0.0392, 0.0706, 0.0980,  ..., 0.0745, 0.0667, 0.0431],
         [0.1098, 0.1529, 0.1647,  ..., 0.0549, 0.0510, 0.0431],
         [0.1725, 0.1922, 0.2196,  ..., 0.0353, 0.0314, 0.0275]],
        [[0.0078, 0.0118, 0.0157,  ..., 0.0196, 0.0078, 0.0078],
         [0.0118, 0.0235, 0.0235,  ..., 0.0196, 0.0118, 0.0078],
         [0.0196, 0.0314, 0.0549,  ..., 0.0510, 0.0353, 0.0157],
         ...,
         [0.0392, 0.0706, 0.0980,  ..., 0.0745, 0.0667, 0.0431],
         [0.1098, 0.1529, 0.1647,  ..., 0.0549, 0.0510, 0.0431],
         [0.1725, 0.1922, 0.2196,  ..., 0.0353, 0.0314, 0.0275]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0275, 0.0549, 0.0431,  ..., 0.1647, 0.1373, 0.1843],
         [0.0235, 0.0235, 0.0314,  ..., 0.1255, 0.1059, 0.1647],
         [0.0235, 0.0196, 0.0118,  ..., 0.0980, 0.0980, 0.1255]],
        [[0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0275, 0.0549, 0.0431,  ..., 0.1647, 0.1373, 0.1843],
         [0.0235, 0.0235, 0.0314,  ..., 0.1255, 0.1059, 0.1647],
         [0.0235, 0.0196, 0.0118,  ..., 0.0980, 0.0980, 0.1255]],
        [[0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0275, 0.0549, 0.0431,  ..., 0.1647, 0.1373, 0.1843],
         [0.0235, 0.0235, 0.0314,  ..., 0.1255, 0.1059, 0.1647],
         [0.0235, 0.0196, 0.0118,  ..., 0.0980, 0.0980, 0.1255]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0627, 0.0471, 0.0588,  ..., 0.3059, 0.2902, 0.2667],
         [0.0235, 0.0157, 0.0196,  ..., 0.3294, 0.3098, 0.2863],
         [0.0118, 0.0078, 0.0078,  ..., 0.3373, 0.3216, 0.3059],
         ...,
         [0.1255, 0.1765, 0.2196,  ..., 0.0784, 0.0902, 0.1490],
         [0.0667, 0.0824, 0.0941,  ..., 0.0431, 0.0588, 0.0784],
         [0.0510, 0.0588, 0.0941,  ..., 0.0314, 0.0510, 0.0863]],
        [[0.0627, 0.0471, 0.0588,  ..., 0.3059, 0.2902, 0.2667],
         [0.0235, 0.0157, 0.0196,  ..., 0.3294, 0.3098, 0.2863],
         [0.0118, 0.0078, 0.0078,  ..., 0.3373, 0.3216, 0.3059],
         ...,
         [0.1255, 0.1765, 0.2196,  ..., 0.0784, 0.0902, 0.1490],
         [0.0667, 0.0824, 0.0941,  ..., 0.0431, 0.0588, 0.0784],
         [0.0510, 0.0588, 0.0941,  ..., 0.0314, 0.0510, 0.0863]],
        [[0.0627, 0.0471, 0.0588,  ..., 0.3059, 0.2902, 0.2667],
         [0.0235, 0.0157, 0.0196,  ..., 0.3294, 0.3098, 0.2863],
         [0.0118, 0.0078, 0.0078,  ..., 0.3373, 0.3216, 0.3059],
         ...,
         [0.1255, 0.1765, 0.2196,  ..., 0.0784, 0.0902, 0.1490],
         [0.0667, 0.0824, 0.0941,  ..., 0.0431, 0.0588, 0.0784],
         [0.0510, 0.0588, 0.0941,  ..., 0.0314, 0.0510, 0.0863]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0118, 0.0118, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0118, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0157, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3529, 0.2902, 0.1804,  ..., 0.0667, 0.0745, 0.1059],
         [0.3255, 0.1843, 0.1137,  ..., 0.0863, 0.0549, 0.0471],
         [0.3412, 0.1569, 0.1490,  ..., 0.0980, 0.0588, 0.0392]],
        [[0.0118, 0.0118, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0118, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0157, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3529, 0.2902, 0.1804,  ..., 0.0667, 0.0745, 0.1059],
         [0.3255, 0.1843, 0.1137,  ..., 0.0863, 0.0549, 0.0471],
         [0.3412, 0.1569, 0.1490,  ..., 0.0980, 0.0588, 0.0392]],
        [[0.0118, 0.0118, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0118, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0157, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3529, 0.2902, 0.1804,  ..., 0.0667, 0.0745, 0.1059],
         [0.3255, 0.1843, 0.1137,  ..., 0.0863, 0.0549, 0.0471],
         [0.3412, 0.1569, 0.1490,  ..., 0.0980, 0.0588, 0.0392]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0980, 0.1216, 0.1098],
         [0.0000, 0.0000, 0.0000,  ..., 0.1098, 0.1137, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1020, 0.0902],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0039],
         [0.0078, 0.0118, 0.0157,  ..., 0.0000, 0.0039, 0.0078],
         [0.0235, 0.0353, 0.0471,  ..., 0.0039, 0.0039, 0.0118]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0980, 0.1216, 0.1098],
         [0.0000, 0.0000, 0.0000,  ..., 0.1098, 0.1137, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1020, 0.0902],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0039],
         [0.0078, 0.0118, 0.0157,  ..., 0.0000, 0.0039, 0.0078],
         [0.0235, 0.0353, 0.0471,  ..., 0.0039, 0.0039, 0.0118]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0980, 0.1216, 0.1098],
         [0.0000, 0.0000, 0.0000,  ..., 0.1098, 0.1137, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1020, 0.0902],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0039],
         [0.0078, 0.0118, 0.0157,  ..., 0.0000, 0.0039, 0.0078],
         [0.0235, 0.0353, 0.0471,  ..., 0.0039, 0.0039, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         ...,
         [0.0314, 0.0275, 0.0235,  ..., 0.0510, 0.0392, 0.0275],
         [0.0235, 0.0196, 0.0196,  ..., 0.0431, 0.0314, 0.0275],
         [0.0235, 0.0157, 0.0157,  ..., 0.0431, 0.0275, 0.0275]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         ...,
         [0.0314, 0.0275, 0.0235,  ..., 0.0510, 0.0392, 0.0275],
         [0.0235, 0.0196, 0.0196,  ..., 0.0431, 0.0314, 0.0275],
         [0.0235, 0.0157, 0.0157,  ..., 0.0431, 0.0275, 0.0275]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         ...,
         [0.0314, 0.0275, 0.0235,  ..., 0.0510, 0.0392, 0.0275],
         [0.0235, 0.0196, 0.0196,  ..., 0.0431, 0.0314, 0.0275],
         [0.0235, 0.0157, 0.0157,  ..., 0.0431, 0.0275, 0.0275]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0510, 0.0431, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0314, 0.0196,  ..., 0.0039, 0.0039, 0.0000],
         [0.0588, 0.0275, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.4196, 0.3020, 0.1961],
         [0.0000, 0.0000, 0.0000,  ..., 0.2275, 0.1804, 0.1294],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1098, 0.0902]],
        [[0.0510, 0.0431, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0314, 0.0196,  ..., 0.0039, 0.0039, 0.0000],
         [0.0588, 0.0275, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.4196, 0.3020, 0.1961],
         [0.0000, 0.0000, 0.0000,  ..., 0.2275, 0.1804, 0.1294],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1098, 0.0902]],
        [[0.0510, 0.0431, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0314, 0.0196,  ..., 0.0039, 0.0039, 0.0000],
         [0.0588, 0.0275, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.4196, 0.3020, 0.1961],
         [0.0000, 0.0000, 0.0000,  ..., 0.2275, 0.1804, 0.1294],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1098, 0.0902]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
Epoch 15/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.77img/s, loss (batch)=1.16]
Epoch 16/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 16/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.60img/s, loss (batch)=1.1]
Epoch 17/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 17/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.30img/s, loss (batch)=1.29]
Epoch 18/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 18/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.33img/s, loss (batch)=1.01]
Epoch 19/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 19/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.82img/s, loss (batch)=1.35]
Epoch 20/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]
         [0.0275, 0.0275, 0.0235,  ..., 0.0078, 0.0078, 0.0039],
         [0.0353, 0.0353, 0.0314,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0510, 0.0627, 0.0706,  ..., 0.0588, 0.0510, 0.0667],
         [0.0863, 0.0824, 0.1020,  ..., 0.0627, 0.0549, 0.0549],
         [0.0824, 0.0824, 0.1020,  ..., 0.0627, 0.0627, 0.0392]],
        [[0.0275, 0.0196, 0.0157,  ..., 0.0118, 0.0118, 0.0078],
         [0.0275, 0.0275, 0.0235,  ..., 0.0078, 0.0078, 0.0039],
         [0.0353, 0.0353, 0.0314,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0510, 0.0627, 0.0706,  ..., 0.0588, 0.0510, 0.0667],
         [0.0863, 0.0824, 0.1020,  ..., 0.0627, 0.0549, 0.0549],
         [0.0824, 0.0824, 0.1020,  ..., 0.0627, 0.0627, 0.0392]],
        [[0.0275, 0.0196, 0.0157,  ..., 0.0118, 0.0118, 0.0078],
         [0.0275, 0.0275, 0.0235,  ..., 0.0078, 0.0078, 0.0039],
         [0.0353, 0.0353, 0.0314,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0510, 0.0627, 0.0706,  ..., 0.0588, 0.0510, 0.0667],
         [0.0863, 0.0824, 0.1020,  ..., 0.0627, 0.0549, 0.0549],
         [0.0824, 0.0824, 0.1020,  ..., 0.0627, 0.0627, 0.0392]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0157, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0196, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0431, 0.1059,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0627, 0.0431, 0.0314,  ..., 0.0118, 0.0157, 0.0118],
         [0.0588, 0.0471, 0.0392,  ..., 0.0157, 0.0118, 0.0078],
         [0.0745, 0.0627, 0.0549,  ..., 0.0157, 0.0157, 0.0078]],
        [[0.0039, 0.0157, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0196, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0431, 0.1059,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0627, 0.0431, 0.0314,  ..., 0.0118, 0.0157, 0.0118],
         [0.0588, 0.0471, 0.0392,  ..., 0.0157, 0.0118, 0.0078],
         [0.0745, 0.0627, 0.0549,  ..., 0.0157, 0.0157, 0.0078]],
        [[0.0039, 0.0157, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0196, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0431, 0.1059,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0627, 0.0431, 0.0314,  ..., 0.0118, 0.0157, 0.0118],
         [0.0588, 0.0471, 0.0392,  ..., 0.0157, 0.0118, 0.0078],
         [0.0745, 0.0627, 0.0549,  ..., 0.0157, 0.0157, 0.0078]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.5882, 0.5569, 0.4471,  ..., 0.0392, 0.0588, 0.1137],
         [0.5922, 0.4196, 0.3961,  ..., 0.0314, 0.0510, 0.0863],
         [0.5490, 0.3804, 0.3529,  ..., 0.0157, 0.0431, 0.0784],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0510, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1020, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.1059, 0.1098, 0.1020]],
        [[0.5882, 0.5569, 0.4471,  ..., 0.0392, 0.0588, 0.1137],
         [0.5922, 0.4196, 0.3961,  ..., 0.0314, 0.0510, 0.0863],
         [0.5490, 0.3804, 0.3529,  ..., 0.0157, 0.0431, 0.0784],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0510, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1020, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.1059, 0.1098, 0.1020]],
        [[0.5882, 0.5569, 0.4471,  ..., 0.0392, 0.0588, 0.1137],
         [0.5922, 0.4196, 0.3961,  ..., 0.0314, 0.0510, 0.0863],
         [0.5490, 0.3804, 0.3529,  ..., 0.0157, 0.0431, 0.0784],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0510, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1020, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.1059, 0.1098, 0.1020]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0157,  ..., 0.2157, 0.1333, 0.0902],
         [0.0000, 0.0039, 0.0196,  ..., 0.1059, 0.0863, 0.0627],
         [0.0000, 0.0000, 0.0078,  ..., 0.0549, 0.0471, 0.0314],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0196, 0.0118, 0.0078],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0157,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0157,  ..., 0.2157, 0.1333, 0.0902],
         [0.0000, 0.0039, 0.0196,  ..., 0.1059, 0.0863, 0.0627],
         [0.0000, 0.0000, 0.0078,  ..., 0.0549, 0.0471, 0.0314],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0196, 0.0118, 0.0078],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0157,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0157,  ..., 0.2157, 0.1333, 0.0902],
         [0.0000, 0.0039, 0.0196,  ..., 0.1059, 0.0863, 0.0627],
         [0.0000, 0.0000, 0.0078,  ..., 0.0549, 0.0471, 0.0314],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0196, 0.0118, 0.0078],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0157,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1294, 0.1882, 0.2000,  ..., 0.0314, 0.0314, 0.0275],
         [0.1451, 0.2078, 0.2353,  ..., 0.0235, 0.0275, 0.0275],
         [0.1451, 0.1922, 0.2118,  ..., 0.0235, 0.0235, 0.0235],
         ...,
         [0.0392, 0.0431, 0.0392,  ..., 0.0627, 0.0745, 0.1137],
         [0.0392, 0.0392, 0.0392,  ..., 0.0824, 0.1373, 0.2118],
         [0.0314, 0.0353, 0.0314,  ..., 0.1137, 0.2039, 0.2667]],
        [[0.1294, 0.1882, 0.2000,  ..., 0.0314, 0.0314, 0.0275],
         [0.1451, 0.2078, 0.2353,  ..., 0.0235, 0.0275, 0.0275],
         [0.1451, 0.1922, 0.2118,  ..., 0.0235, 0.0235, 0.0235],
         ...,
         [0.0392, 0.0431, 0.0392,  ..., 0.0627, 0.0745, 0.1137],
         [0.0392, 0.0392, 0.0392,  ..., 0.0824, 0.1373, 0.2118],
         [0.0314, 0.0353, 0.0314,  ..., 0.1137, 0.2039, 0.2667]],
        [[0.1294, 0.1882, 0.2000,  ..., 0.0314, 0.0314, 0.0275],
         [0.1451, 0.2078, 0.2353,  ..., 0.0235, 0.0275, 0.0275],
         [0.1451, 0.1922, 0.2118,  ..., 0.0235, 0.0235, 0.0235],
         ...,
         [0.0392, 0.0431, 0.0392,  ..., 0.0627, 0.0745, 0.1137],
         [0.0392, 0.0392, 0.0392,  ..., 0.0824, 0.1373, 0.2118],
         [0.0314, 0.0353, 0.0314,  ..., 0.1137, 0.2039, 0.2667]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.1882, 0.2235],
         [0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1882, 0.1961],
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1647, 0.1647],
         ...,
         [0.0510, 0.0510, 0.0353,  ..., 0.1804, 0.1255, 0.0588],
         [0.0392, 0.0353, 0.0275,  ..., 0.1608, 0.0902, 0.0314],
         [0.0745, 0.0745, 0.0667,  ..., 0.0824, 0.0431, 0.0157]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.1882, 0.2235],
         [0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1882, 0.1961],
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1647, 0.1647],
         ...,
         [0.0510, 0.0510, 0.0353,  ..., 0.1804, 0.1255, 0.0588],
         [0.0392, 0.0353, 0.0275,  ..., 0.1608, 0.0902, 0.0314],
         [0.0745, 0.0745, 0.0667,  ..., 0.0824, 0.0431, 0.0157]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.1882, 0.2235],
         [0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1882, 0.1961],
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1647, 0.1647],
         ...,
         [0.0510, 0.0510, 0.0353,  ..., 0.1804, 0.1255, 0.0588],
         [0.0392, 0.0353, 0.0275,  ..., 0.1608, 0.0902, 0.0314],
         [0.0745, 0.0745, 0.0667,  ..., 0.0824, 0.0431, 0.0157]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0196, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0235, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0196, 0.0157],
         ...,
         [0.0196, 0.0196, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0314, 0.0235,  ..., 0.0000, 0.0000, 0.0039],
         [0.0588, 0.0392, 0.0235,  ..., 0.0000, 0.0000, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0196, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0235, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0196, 0.0157],
         ...,
         [0.0196, 0.0196, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0314, 0.0235,  ..., 0.0000, 0.0000, 0.0039],
         [0.0588, 0.0392, 0.0235,  ..., 0.0000, 0.0000, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0196, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0235, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0196, 0.0157],
         ...,
         [0.0196, 0.0196, 0.0196,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0314, 0.0235,  ..., 0.0000, 0.0000, 0.0039],
         [0.0588, 0.0392, 0.0235,  ..., 0.0000, 0.0000, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.2431, 0.1373, 0.0824,  ..., 0.0471, 0.0353, 0.0275],
         [0.1843, 0.1255, 0.0902,  ..., 0.0353, 0.0392, 0.0235],
         [0.1961, 0.1686, 0.1255,  ..., 0.0353, 0.0431, 0.0275],
         ...,
         [0.0196, 0.0275, 0.0353,  ..., 0.1569, 0.2431, 0.2588],
         [0.0157, 0.0314, 0.0392,  ..., 0.2039, 0.2392, 0.2549],
         [0.0157, 0.0196, 0.0353,  ..., 0.3882, 0.3451, 0.2314]],
        [[0.2431, 0.1373, 0.0824,  ..., 0.0471, 0.0353, 0.0275],
         [0.1843, 0.1255, 0.0902,  ..., 0.0353, 0.0392, 0.0235],
         [0.1961, 0.1686, 0.1255,  ..., 0.0353, 0.0431, 0.0275],
         ...,
         [0.0196, 0.0275, 0.0353,  ..., 0.1569, 0.2431, 0.2588],
         [0.0157, 0.0314, 0.0392,  ..., 0.2039, 0.2392, 0.2549],
         [0.0157, 0.0196, 0.0353,  ..., 0.3882, 0.3451, 0.2314]],
        [[0.2431, 0.1373, 0.0824,  ..., 0.0471, 0.0353, 0.0275],
         [0.1843, 0.1255, 0.0902,  ..., 0.0353, 0.0392, 0.0235],
         [0.1961, 0.1686, 0.1255,  ..., 0.0353, 0.0431, 0.0275],
         ...,
         [0.0196, 0.0275, 0.0353,  ..., 0.1569, 0.2431, 0.2588],
         [0.0157, 0.0314, 0.0392,  ..., 0.2039, 0.2392, 0.2549],
         [0.0157, 0.0196, 0.0353,  ..., 0.3882, 0.3451, 0.2314]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0078,  ..., 0.0157, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0314, 0.0157, 0.0118],
         ...,
         [0.0196, 0.0392, 0.0588,  ..., 0.0078, 0.0118, 0.0196],
         [0.0157, 0.0275, 0.0431,  ..., 0.0078, 0.0196, 0.0235],
         [0.0118, 0.0196, 0.0275,  ..., 0.0118, 0.0196, 0.0235]],
        [[0.0000, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0078,  ..., 0.0157, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0314, 0.0157, 0.0118],
         ...,
         [0.0196, 0.0392, 0.0588,  ..., 0.0078, 0.0118, 0.0196],
         [0.0157, 0.0275, 0.0431,  ..., 0.0078, 0.0196, 0.0235],
         [0.0118, 0.0196, 0.0275,  ..., 0.0118, 0.0196, 0.0235]],
        [[0.0000, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0078,  ..., 0.0157, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0314, 0.0157, 0.0118],
         ...,
         [0.0196, 0.0392, 0.0588,  ..., 0.0078, 0.0118, 0.0196],
         [0.0157, 0.0275, 0.0431,  ..., 0.0078, 0.0196, 0.0235],
         [0.0118, 0.0196, 0.0275,  ..., 0.0118, 0.0196, 0.0235]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1529, 0.1098, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.1098, 0.0980, 0.0627,  ..., 0.0000, 0.0000, 0.0078],
         [0.1137, 0.0824, 0.0588,  ..., 0.0000, 0.0000, 0.0157]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1529, 0.1098, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.1098, 0.0980, 0.0627,  ..., 0.0000, 0.0000, 0.0078],
         [0.1137, 0.0824, 0.0588,  ..., 0.0000, 0.0000, 0.0157]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1529, 0.1098, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.1098, 0.0980, 0.0627,  ..., 0.0000, 0.0000, 0.0078],
         [0.1137, 0.0824, 0.0588,  ..., 0.0000, 0.0000, 0.0157]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0471, 0.0588, 0.0824,  ..., 0.3059, 0.3216, 0.3529],
         [0.0980, 0.1216, 0.1451,  ..., 0.2510, 0.2941, 0.2863],
         [0.1804, 0.1961, 0.1569,  ..., 0.1765, 0.1608, 0.1412],
         ...,
         [0.1333, 0.1216, 0.1020,  ..., 0.0196, 0.0196, 0.0196],
         [0.0667, 0.0667, 0.0588,  ..., 0.0157, 0.0157, 0.0196],
         [0.0353, 0.0392, 0.0353,  ..., 0.0157, 0.0157, 0.0157]],
        [[0.0471, 0.0588, 0.0824,  ..., 0.3059, 0.3216, 0.3529],
         [0.0980, 0.1216, 0.1451,  ..., 0.2510, 0.2941, 0.2863],
         [0.1804, 0.1961, 0.1569,  ..., 0.1765, 0.1608, 0.1412],
         ...,
         [0.1333, 0.1216, 0.1020,  ..., 0.0196, 0.0196, 0.0196],
         [0.0667, 0.0667, 0.0588,  ..., 0.0157, 0.0157, 0.0196],
         [0.0353, 0.0392, 0.0353,  ..., 0.0157, 0.0157, 0.0157]],
        [[0.0471, 0.0588, 0.0824,  ..., 0.3059, 0.3216, 0.3529],
         [0.0980, 0.1216, 0.1451,  ..., 0.2510, 0.2941, 0.2863],
         [0.1804, 0.1961, 0.1569,  ..., 0.1765, 0.1608, 0.1412],
         ...,
         [0.1333, 0.1216, 0.1020,  ..., 0.0196, 0.0196, 0.0196],
         [0.0667, 0.0667, 0.0588,  ..., 0.0157, 0.0157, 0.0196],
         [0.0353, 0.0392, 0.0353,  ..., 0.0157, 0.0157, 0.0157]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0314, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0588, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1882, 0.1765],
         ...,
         [0.0196, 0.0157, 0.0157,  ..., 0.0235, 0.0196, 0.0157],
         [0.0118, 0.0118, 0.0157,  ..., 0.0235, 0.0471, 0.0275],
         [0.0078, 0.0118, 0.0118,  ..., 0.0275, 0.0353, 0.0196]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0314, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0588, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1882, 0.1765],
         ...,
         [0.0196, 0.0157, 0.0157,  ..., 0.0235, 0.0196, 0.0157],
         [0.0118, 0.0118, 0.0157,  ..., 0.0235, 0.0471, 0.0275],
         [0.0078, 0.0118, 0.0118,  ..., 0.0275, 0.0353, 0.0196]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0314, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0588, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1882, 0.1765],
         ...,
         [0.0196, 0.0157, 0.0157,  ..., 0.0235, 0.0196, 0.0157],
         [0.0118, 0.0118, 0.0157,  ..., 0.0235, 0.0471, 0.0275],
         [0.0078, 0.0118, 0.0118,  ..., 0.0275, 0.0353, 0.0196]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1765, 0.1765, 0.1451,  ..., 0.0706, 0.0784, 0.0980],
         [0.1922, 0.1686, 0.1137,  ..., 0.0235, 0.0275, 0.0275],
         [0.2196, 0.2157, 0.1098,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.2039, 0.1922, 0.1569,  ..., 0.0196, 0.0275, 0.0353],
         [0.1176, 0.1725, 0.2549,  ..., 0.0157, 0.0196, 0.0275],
         [0.0824, 0.1686, 0.2353,  ..., 0.0157, 0.0157, 0.0235]],
        [[0.1765, 0.1765, 0.1451,  ..., 0.0706, 0.0784, 0.0980],
         [0.1922, 0.1686, 0.1137,  ..., 0.0235, 0.0275, 0.0275],
         [0.2196, 0.2157, 0.1098,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.2039, 0.1922, 0.1569,  ..., 0.0196, 0.0275, 0.0353],
         [0.1176, 0.1725, 0.2549,  ..., 0.0157, 0.0196, 0.0275],
         [0.0824, 0.1686, 0.2353,  ..., 0.0157, 0.0157, 0.0235]],
        [[0.1765, 0.1765, 0.1451,  ..., 0.0706, 0.0784, 0.0980],
         [0.1922, 0.1686, 0.1137,  ..., 0.0235, 0.0275, 0.0275],
         [0.2196, 0.2157, 0.1098,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.2039, 0.1922, 0.1569,  ..., 0.0196, 0.0275, 0.0353],
         [0.1176, 0.1725, 0.2549,  ..., 0.0157, 0.0196, 0.0275],
         [0.0824, 0.1686, 0.2353,  ..., 0.0157, 0.0157, 0.0235]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1294, 0.1137, 0.1059,  ..., 0.0510, 0.0275, 0.0235],
         [0.1137, 0.1255, 0.1059,  ..., 0.0549, 0.0353, 0.0235],
         [0.0902, 0.0980, 0.1020,  ..., 0.0941, 0.0588, 0.0314],
         ...,
         [0.0627, 0.0353, 0.0235,  ..., 0.0118, 0.0275, 0.0431],
         [0.0706, 0.0314, 0.0157,  ..., 0.0078, 0.0157, 0.0275],
         [0.0863, 0.0353, 0.0157,  ..., 0.0078, 0.0078, 0.0157]],
        [[0.1294, 0.1137, 0.1059,  ..., 0.0510, 0.0275, 0.0235],
         [0.1137, 0.1255, 0.1059,  ..., 0.0549, 0.0353, 0.0235],
         [0.0902, 0.0980, 0.1020,  ..., 0.0941, 0.0588, 0.0314],
         ...,
         [0.0627, 0.0353, 0.0235,  ..., 0.0118, 0.0275, 0.0431],
         [0.0706, 0.0314, 0.0157,  ..., 0.0078, 0.0157, 0.0275],
         [0.0863, 0.0353, 0.0157,  ..., 0.0078, 0.0078, 0.0157]],
        [[0.1294, 0.1137, 0.1059,  ..., 0.0510, 0.0275, 0.0235],
         [0.1137, 0.1255, 0.1059,  ..., 0.0549, 0.0353, 0.0235],
         [0.0902, 0.0980, 0.1020,  ..., 0.0941, 0.0588, 0.0314],
         ...,
         [0.0627, 0.0353, 0.0235,  ..., 0.0118, 0.0275, 0.0431],
         [0.0706, 0.0314, 0.0157,  ..., 0.0078, 0.0157, 0.0275],
         [0.0863, 0.0353, 0.0157,  ..., 0.0078, 0.0078, 0.0157]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0235, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0196]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0235, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0196]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0235, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0196]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))                                                                                                                                             | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 20/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.03img/s, loss (batch)=1.06]
Epoch 21/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))                                                                                                                                             | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
Epoch 21/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.04img/s, loss (batch)=1.08]
Epoch 22/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 22/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.09img/s, loss (batch)=1.11]
Epoch 23/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 23/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.85img/s, loss (batch)=0.923]
Epoch 24/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
sample {'image': tensor([[[0.0196, 0.0275, 0.0353,  ..., 0.2667, 0.1059, 0.0549],
         [0.0314, 0.0353, 0.0353,  ..., 0.2275, 0.1216, 0.0431],
         [0.0431, 0.0588, 0.0706,  ..., 0.1216, 0.1255, 0.0784],
         ...,
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0039, 0.0118,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0196, 0.0275, 0.0353,  ..., 0.2667, 0.1059, 0.0549],
         [0.0314, 0.0353, 0.0353,  ..., 0.2275, 0.1216, 0.0431],
         [0.0431, 0.0588, 0.0706,  ..., 0.1216, 0.1255, 0.0784],
         ...,
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0039, 0.0118,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0196, 0.0275, 0.0353,  ..., 0.2667, 0.1059, 0.0549],
         [0.0314, 0.0353, 0.0353,  ..., 0.2275, 0.1216, 0.0431],
         [0.0431, 0.0588, 0.0706,  ..., 0.1216, 0.1255, 0.0784],
         ...,
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0039, 0.0118,  ..., 0.0039, 0.0039, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}sample {'image': tensor([[[0.0627, 0.0706, 0.0706,  ..., 0.0078, 0.0039, 0.0078],
         [0.0549, 0.0667, 0.0667,  ..., 0.0039, 0.0039, 0.0039],
         [0.0588, 0.0706, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.1608, 0.1373,  ..., 0.1373, 0.1529, 0.1294],
         [0.1059, 0.1412, 0.1294,  ..., 0.1137, 0.1451, 0.1373],
         [0.1216, 0.1216, 0.1137,  ..., 0.1059, 0.1333, 0.1373]],
        [[0.0627, 0.0706, 0.0706,  ..., 0.0078, 0.0039, 0.0078],
         [0.0549, 0.0667, 0.0667,  ..., 0.0039, 0.0039, 0.0039],
         [0.0588, 0.0706, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.1608, 0.1373,  ..., 0.1373, 0.1529, 0.1294],
         [0.1059, 0.1412, 0.1294,  ..., 0.1137, 0.1451, 0.1373],
         [0.1216, 0.1216, 0.1137,  ..., 0.1059, 0.1333, 0.1373]],
        [[0.0627, 0.0706, 0.0706,  ..., 0.0078, 0.0039, 0.0078],
         [0.0549, 0.0667, 0.0667,  ..., 0.0039, 0.0039, 0.0039],
         [0.0588, 0.0706, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.1608, 0.1373,  ..., 0.1373, 0.1529, 0.1294],
         [0.1059, 0.1412, 0.1294,  ..., 0.1137, 0.1451, 0.1373],
         [0.1216, 0.1216, 0.1137,  ..., 0.1059, 0.1333, 0.1373]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1216, 0.1647, 0.2039,  ..., 0.2627, 0.1765, 0.0706],
         [0.1373, 0.1961, 0.1804,  ..., 0.1765, 0.0941, 0.0392],
         [0.1608, 0.2078, 0.1098,  ..., 0.1137, 0.0471, 0.0235]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1216, 0.1647, 0.2039,  ..., 0.2627, 0.1765, 0.0706],
         [0.1373, 0.1961, 0.1804,  ..., 0.1765, 0.0941, 0.0392],
         [0.1608, 0.2078, 0.1098,  ..., 0.1137, 0.0471, 0.0235]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1216, 0.1647, 0.2039,  ..., 0.2627, 0.1765, 0.0706],
         [0.1373, 0.1961, 0.1804,  ..., 0.1765, 0.0941, 0.0392],
         [0.1608, 0.2078, 0.1098,  ..., 0.1137, 0.0471, 0.0235]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.4941, 0.4157, 0.2863,  ..., 0.0000, 0.0000, 0.0000],
         [0.8118, 0.5333, 0.3176,  ..., 0.0000, 0.0000, 0.0000],
         [0.7686, 0.5569, 0.4471,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0118,  ..., 0.0706, 0.1882, 0.3412],
         [0.0118, 0.0078, 0.0157,  ..., 0.0471, 0.1451, 0.2902],
         [0.0078, 0.0157, 0.0196,  ..., 0.0314, 0.0941, 0.1922]],
        [[0.4941, 0.4157, 0.2863,  ..., 0.0000, 0.0000, 0.0000],
         [0.8118, 0.5333, 0.3176,  ..., 0.0000, 0.0000, 0.0000],
         [0.7686, 0.5569, 0.4471,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0118,  ..., 0.0706, 0.1882, 0.3412],
         [0.0118, 0.0078, 0.0157,  ..., 0.0471, 0.1451, 0.2902],
         [0.0078, 0.0157, 0.0196,  ..., 0.0314, 0.0941, 0.1922]],
        [[0.4941, 0.4157, 0.2863,  ..., 0.0000, 0.0000, 0.0000],
         [0.8118, 0.5333, 0.3176,  ..., 0.0000, 0.0000, 0.0000],
         [0.7686, 0.5569, 0.4471,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0118,  ..., 0.0706, 0.1882, 0.3412],
         [0.0118, 0.0078, 0.0157,  ..., 0.0471, 0.1451, 0.2902],
         [0.0078, 0.0157, 0.0196,  ..., 0.0314, 0.0941, 0.1922]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1216, 0.0627, 0.0392,  ..., 0.0314, 0.0353, 0.0314],
         [0.0667, 0.0392, 0.0275,  ..., 0.0588, 0.0627, 0.0588],
         [0.0431, 0.0235, 0.0235,  ..., 0.1020, 0.1216, 0.1137],
         ...,
         [0.0118, 0.0078, 0.0039,  ..., 0.0314, 0.0275, 0.0235],
         [0.0078, 0.0078, 0.0039,  ..., 0.0314, 0.0353, 0.0314],
         [0.0039, 0.0039, 0.0000,  ..., 0.0471, 0.0431, 0.0353]],
        [[0.1216, 0.0627, 0.0392,  ..., 0.0314, 0.0353, 0.0314],
         [0.0667, 0.0392, 0.0275,  ..., 0.0588, 0.0627, 0.0588],
         [0.0431, 0.0235, 0.0235,  ..., 0.1020, 0.1216, 0.1137],
         ...,
         [0.0118, 0.0078, 0.0039,  ..., 0.0314, 0.0275, 0.0235],
         [0.0078, 0.0078, 0.0039,  ..., 0.0314, 0.0353, 0.0314],
         [0.0039, 0.0039, 0.0000,  ..., 0.0471, 0.0431, 0.0353]],
        [[0.1216, 0.0627, 0.0392,  ..., 0.0314, 0.0353, 0.0314],
         [0.0667, 0.0392, 0.0275,  ..., 0.0588, 0.0627, 0.0588],
         [0.0431, 0.0235, 0.0235,  ..., 0.1020, 0.1216, 0.1137],
         ...,
         [0.0118, 0.0078, 0.0039,  ..., 0.0314, 0.0275, 0.0235],
         [0.0078, 0.0078, 0.0039,  ..., 0.0314, 0.0353, 0.0314],
         [0.0039, 0.0039, 0.0000,  ..., 0.0471, 0.0431, 0.0353]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1490, 0.0314, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0157, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0157, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0745, 0.0902, 0.1137,  ..., 0.1765, 0.1373, 0.0902],
         [0.0863, 0.0784, 0.0941,  ..., 0.1725, 0.1059, 0.0627],
         [0.1373, 0.1059, 0.1059,  ..., 0.1647, 0.0824, 0.0431]],
        [[0.1490, 0.0314, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0157, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0157, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0745, 0.0902, 0.1137,  ..., 0.1765, 0.1373, 0.0902],
         [0.0863, 0.0784, 0.0941,  ..., 0.1725, 0.1059, 0.0627],
         [0.1373, 0.1059, 0.1059,  ..., 0.1647, 0.0824, 0.0431]],
        [[0.1490, 0.0314, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0157, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0157, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0745, 0.0902, 0.1137,  ..., 0.1765, 0.1373, 0.0902],
         [0.0863, 0.0784, 0.0941,  ..., 0.1725, 0.1059, 0.0627],
         [0.1373, 0.1059, 0.1059,  ..., 0.1647, 0.0824, 0.0431]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0078,  ..., 0.0353, 0.0235, 0.0235],
         [0.0039, 0.0039, 0.0118,  ..., 0.0980, 0.0706, 0.0510],
         [0.0039, 0.0078, 0.0118,  ..., 0.1882, 0.1490, 0.0784],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0392, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0275, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0235, 0.0235]],
        [[0.0000, 0.0039, 0.0078,  ..., 0.0353, 0.0235, 0.0235],
         [0.0039, 0.0039, 0.0118,  ..., 0.0980, 0.0706, 0.0510],
         [0.0039, 0.0078, 0.0118,  ..., 0.1882, 0.1490, 0.0784],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0392, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0275, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0235, 0.0235]],
        [[0.0000, 0.0039, 0.0078,  ..., 0.0353, 0.0235, 0.0235],
         [0.0039, 0.0039, 0.0118,  ..., 0.0980, 0.0706, 0.0510],
         [0.0039, 0.0078, 0.0118,  ..., 0.1882, 0.1490, 0.0784],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0392, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0275, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0235, 0.0235]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0314, 0.0157, 0.0039,  ..., 0.0275, 0.0118, 0.0039],
         [0.0392, 0.0275, 0.0078,  ..., 0.0118, 0.0039, 0.0000],
         [0.0745, 0.0431, 0.0157,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.3098, 0.2039, 0.1098,  ..., 0.2039, 0.2863, 0.4039],
         [0.2431, 0.1490, 0.1059,  ..., 0.0549, 0.0824, 0.1647],
         [0.2078, 0.1490, 0.1569,  ..., 0.0118, 0.0196, 0.0667]],
        [[0.0314, 0.0157, 0.0039,  ..., 0.0275, 0.0118, 0.0039],
         [0.0392, 0.0275, 0.0078,  ..., 0.0118, 0.0039, 0.0000],
         [0.0745, 0.0431, 0.0157,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.3098, 0.2039, 0.1098,  ..., 0.2039, 0.2863, 0.4039],
         [0.2431, 0.1490, 0.1059,  ..., 0.0549, 0.0824, 0.1647],
         [0.2078, 0.1490, 0.1569,  ..., 0.0118, 0.0196, 0.0667]],
        [[0.0314, 0.0157, 0.0039,  ..., 0.0275, 0.0118, 0.0039],
         [0.0392, 0.0275, 0.0078,  ..., 0.0118, 0.0039, 0.0000],
         [0.0745, 0.0431, 0.0157,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.3098, 0.2039, 0.1098,  ..., 0.2039, 0.2863, 0.4039],
         [0.2431, 0.1490, 0.1059,  ..., 0.0549, 0.0824, 0.1647],
         [0.2078, 0.1490, 0.1569,  ..., 0.0118, 0.0196, 0.0667]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1255, 0.2353, 0.3333,  ..., 0.0275, 0.0588, 0.0745],
         [0.0667, 0.1647, 0.4353,  ..., 0.0235, 0.0549, 0.0941],
         [0.0471, 0.0941, 0.2667,  ..., 0.0118, 0.0431, 0.0588],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0118, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0157, 0.0118]],
        [[0.1255, 0.2353, 0.3333,  ..., 0.0275, 0.0588, 0.0745],
         [0.0667, 0.1647, 0.4353,  ..., 0.0235, 0.0549, 0.0941],
         [0.0471, 0.0941, 0.2667,  ..., 0.0118, 0.0431, 0.0588],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0118, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0157, 0.0118]],
        [[0.1255, 0.2353, 0.3333,  ..., 0.0275, 0.0588, 0.0745],
         [0.0667, 0.1647, 0.4353,  ..., 0.0235, 0.0549, 0.0941],
         [0.0471, 0.0941, 0.2667,  ..., 0.0118, 0.0431, 0.0588],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0118, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0157, 0.0118]]]), 'mask': tensor([[1., 1., 0.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0471, 0.0314, 0.0235,  ..., 0.0902, 0.0784, 0.0667],
         [0.0627, 0.0392, 0.0275,  ..., 0.1176, 0.0980, 0.0667],
         [0.0784, 0.0510, 0.0275,  ..., 0.1647, 0.1333, 0.0706],
         ...,
         [0.0471, 0.0549, 0.0706,  ..., 0.0235, 0.0157, 0.0118],
         [0.0392, 0.0471, 0.0588,  ..., 0.0314, 0.0196, 0.0157],
         [0.0510, 0.0510, 0.0510,  ..., 0.0314, 0.0196, 0.0118]],
        [[0.0471, 0.0314, 0.0235,  ..., 0.0902, 0.0784, 0.0667],
         [0.0627, 0.0392, 0.0275,  ..., 0.1176, 0.0980, 0.0667],
         [0.0784, 0.0510, 0.0275,  ..., 0.1647, 0.1333, 0.0706],
         ...,
         [0.0471, 0.0549, 0.0706,  ..., 0.0235, 0.0157, 0.0118],
         [0.0392, 0.0471, 0.0588,  ..., 0.0314, 0.0196, 0.0157],
         [0.0510, 0.0510, 0.0510,  ..., 0.0314, 0.0196, 0.0118]],
        [[0.0471, 0.0314, 0.0235,  ..., 0.0902, 0.0784, 0.0667],
         [0.0627, 0.0392, 0.0275,  ..., 0.1176, 0.0980, 0.0667],
         [0.0784, 0.0510, 0.0275,  ..., 0.1647, 0.1333, 0.0706],
         ...,
         [0.0471, 0.0549, 0.0706,  ..., 0.0235, 0.0157, 0.0118],
         [0.0392, 0.0471, 0.0588,  ..., 0.0314, 0.0196, 0.0157],
         [0.0510, 0.0510, 0.0510,  ..., 0.0314, 0.0196, 0.0118]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.2118, 0.0745, 0.0392,  ..., 0.0196, 0.0196, 0.0118],
         [0.1255, 0.0471, 0.0314,  ..., 0.0196, 0.0235, 0.0118],
         [0.0510, 0.0157, 0.0078,  ..., 0.0157, 0.0275, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.2118, 0.0745, 0.0392,  ..., 0.0196, 0.0196, 0.0118],
         [0.1255, 0.0471, 0.0314,  ..., 0.0196, 0.0235, 0.0118],
         [0.0510, 0.0157, 0.0078,  ..., 0.0157, 0.0275, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.2118, 0.0745, 0.0392,  ..., 0.0196, 0.0196, 0.0118],
         [0.1255, 0.0471, 0.0314,  ..., 0.0196, 0.0235, 0.0118],
         [0.0510, 0.0157, 0.0078,  ..., 0.0157, 0.0275, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.0784, 0.0275],
         [0.0039, 0.0000, 0.0000,  ..., 0.0941, 0.0392, 0.0196],
         [0.0039, 0.0000, 0.0000,  ..., 0.0549, 0.0314, 0.0235],
         ...,
         [0.3216, 0.4078, 0.4431,  ..., 0.0392, 0.0706, 0.1020],
         [0.2314, 0.3059, 0.3804,  ..., 0.0353, 0.0627, 0.1059],
         [0.1882, 0.2549, 0.3176,  ..., 0.0235, 0.0392, 0.0549]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.0784, 0.0275],
         [0.0039, 0.0000, 0.0000,  ..., 0.0941, 0.0392, 0.0196],
         [0.0039, 0.0000, 0.0000,  ..., 0.0549, 0.0314, 0.0235],
         ...,
         [0.3216, 0.4078, 0.4431,  ..., 0.0392, 0.0706, 0.1020],
         [0.2314, 0.3059, 0.3804,  ..., 0.0353, 0.0627, 0.1059],
         [0.1882, 0.2549, 0.3176,  ..., 0.0235, 0.0392, 0.0549]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.0784, 0.0275],
         [0.0039, 0.0000, 0.0000,  ..., 0.0941, 0.0392, 0.0196],
         [0.0039, 0.0000, 0.0000,  ..., 0.0549, 0.0314, 0.0235],
         ...,
         [0.3216, 0.4078, 0.4431,  ..., 0.0392, 0.0706, 0.1020],
         [0.2314, 0.3059, 0.3804,  ..., 0.0353, 0.0627, 0.1059],
         [0.1882, 0.2549, 0.3176,  ..., 0.0235, 0.0392, 0.0549]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0275, 0.0392, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0392, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         [0.0235, 0.0353, 0.0627,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.2667, 0.2549, 0.2078,  ..., 0.1176, 0.1451, 0.1765],
         [0.2353, 0.2667, 0.1882,  ..., 0.1216, 0.1412, 0.1725],
         [0.1882, 0.1804, 0.1176,  ..., 0.1412, 0.1647, 0.1882]],
        [[0.0275, 0.0392, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0392, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         [0.0235, 0.0353, 0.0627,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.2667, 0.2549, 0.2078,  ..., 0.1176, 0.1451, 0.1765],
         [0.2353, 0.2667, 0.1882,  ..., 0.1216, 0.1412, 0.1725],
         [0.1882, 0.1804, 0.1176,  ..., 0.1412, 0.1647, 0.1882]],
        [[0.0275, 0.0392, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0392, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         [0.0235, 0.0353, 0.0627,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.2667, 0.2549, 0.2078,  ..., 0.1176, 0.1451, 0.1765],
         [0.2353, 0.2667, 0.1882,  ..., 0.1216, 0.1412, 0.1725],
         [0.1882, 0.1804, 0.1176,  ..., 0.1412, 0.1647, 0.1882]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.7686, 0.9098, 0.6588,  ..., 0.0000, 0.0000, 0.0000],
         [0.8941, 0.9686, 0.8431,  ..., 0.0039, 0.0000, 0.0000],
         [0.9020, 0.9725, 0.7451,  ..., 0.0039, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.0863, 0.0824, 0.0863],
         [0.0000, 0.0000, 0.0000,  ..., 0.0980, 0.1137, 0.1333],
         [0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.1922, 0.2314]],
        [[0.7686, 0.9098, 0.6588,  ..., 0.0000, 0.0000, 0.0000],
         [0.8941, 0.9686, 0.8431,  ..., 0.0039, 0.0000, 0.0000],
         [0.9020, 0.9725, 0.7451,  ..., 0.0039, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.0863, 0.0824, 0.0863],
         [0.0000, 0.0000, 0.0000,  ..., 0.0980, 0.1137, 0.1333],
         [0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.1922, 0.2314]],
        [[0.7686, 0.9098, 0.6588,  ..., 0.0000, 0.0000, 0.0000],
         [0.8941, 0.9686, 0.8431,  ..., 0.0039, 0.0000, 0.0000],
         [0.9020, 0.9725, 0.7451,  ..., 0.0039, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.0863, 0.0824, 0.0863],
         [0.0000, 0.0000, 0.0000,  ..., 0.0980, 0.1137, 0.1333],
         [0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.1922, 0.2314]]]), 'mask': tensor([[1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 0.],
        [0., 0., 0.,  ..., 1., 1., 0.]])}
sample {'image': tensor([[[0.0941, 0.1020, 0.1255,  ..., 0.0510, 0.0667, 0.0588],
         [0.0863, 0.1137, 0.1412,  ..., 0.0431, 0.0824, 0.1255],
         [0.0902, 0.1059, 0.1255,  ..., 0.0510, 0.0980, 0.2235],
         ...,
         [0.0196, 0.0235, 0.0157,  ..., 0.0353, 0.0392, 0.0392],
         [0.0275, 0.0275, 0.0235,  ..., 0.0627, 0.0627, 0.0627],
         [0.0314, 0.0314, 0.0275,  ..., 0.1255, 0.1294, 0.1216]],
        [[0.0941, 0.1020, 0.1255,  ..., 0.0510, 0.0667, 0.0588],
         [0.0863, 0.1137, 0.1412,  ..., 0.0431, 0.0824, 0.1255],
         [0.0902, 0.1059, 0.1255,  ..., 0.0510, 0.0980, 0.2235],
         ...,
         [0.0196, 0.0235, 0.0157,  ..., 0.0353, 0.0392, 0.0392],
         [0.0275, 0.0275, 0.0235,  ..., 0.0627, 0.0627, 0.0627],
         [0.0314, 0.0314, 0.0275,  ..., 0.1255, 0.1294, 0.1216]],
        [[0.0941, 0.1020, 0.1255,  ..., 0.0510, 0.0667, 0.0588],
         [0.0863, 0.1137, 0.1412,  ..., 0.0431, 0.0824, 0.1255],
         [0.0902, 0.1059, 0.1255,  ..., 0.0510, 0.0980, 0.2235],
         ...,
         [0.0196, 0.0235, 0.0157,  ..., 0.0353, 0.0392, 0.0392],
         [0.0275, 0.0275, 0.0235,  ..., 0.0627, 0.0627, 0.0627],
         [0.0314, 0.0314, 0.0275,  ..., 0.1255, 0.1294, 0.1216]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.6902, 0.5294, 0.4196],
         [0.0000, 0.0000, 0.0000,  ..., 0.5176, 0.4157, 0.4157],
         [0.0000, 0.0000, 0.0000,  ..., 0.4353, 0.3686, 0.3647],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.2863, 0.1255, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.7451, 0.3490, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.7608, 0.5137, 0.2000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.6902, 0.5294, 0.4196],
         [0.0000, 0.0000, 0.0000,  ..., 0.5176, 0.4157, 0.4157],
         [0.0000, 0.0000, 0.0000,  ..., 0.4353, 0.3686, 0.3647],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.2863, 0.1255, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.7451, 0.3490, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.7608, 0.5137, 0.2000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.6902, 0.5294, 0.4196],
         [0.0000, 0.0000, 0.0000,  ..., 0.5176, 0.4157, 0.4157],
         [0.0000, 0.0000, 0.0000,  ..., 0.4353, 0.3686, 0.3647],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.2863, 0.1255, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.7451, 0.3490, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.7608, 0.5137, 0.2000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0157, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0196],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0118, 0.0157],
         ...,
         [0.1490, 0.2667, 0.5451,  ..., 0.0118, 0.0078, 0.0275],
         [0.1137, 0.2078, 0.4275,  ..., 0.0863, 0.0745, 0.1843],
         [0.1216, 0.1725, 0.3294,  ..., 0.4471, 0.3098, 0.3882]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0157, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0196],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0118, 0.0157],
         ...,
         [0.1490, 0.2667, 0.5451,  ..., 0.0118, 0.0078, 0.0275],
         [0.1137, 0.2078, 0.4275,  ..., 0.0863, 0.0745, 0.1843],
         [0.1216, 0.1725, 0.3294,  ..., 0.4471, 0.3098, 0.3882]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0235, 0.0157, 0.0314],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0196],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0118, 0.0157],
         ...,
         [0.1490, 0.2667, 0.5451,  ..., 0.0118, 0.0078, 0.0275],
         [0.1137, 0.2078, 0.4275,  ..., 0.0863, 0.0745, 0.1843],
         [0.1216, 0.1725, 0.3294,  ..., 0.4471, 0.3098, 0.3882]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 0.,  ..., 1., 1., 1.],
        [1., 1., 0.,  ..., 1., 1., 1.],
        [1., 1., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0235, 0.0275, 0.0392,  ..., 0.0039, 0.0000, 0.0000],
         [0.0196, 0.0275, 0.0353,  ..., 0.0039, 0.0039, 0.0000],
         [0.0157, 0.0314, 0.0471,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0235, 0.0275, 0.0392,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0627, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0941, 0.1373, 0.2353,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0235, 0.0275, 0.0392,  ..., 0.0039, 0.0000, 0.0000],
         [0.0196, 0.0275, 0.0353,  ..., 0.0039, 0.0039, 0.0000],
         [0.0157, 0.0314, 0.0471,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0235, 0.0275, 0.0392,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0627, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0941, 0.1373, 0.2353,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0235, 0.0275, 0.0392,  ..., 0.0039, 0.0000, 0.0000],
         [0.0196, 0.0275, 0.0353,  ..., 0.0039, 0.0039, 0.0000],
         [0.0157, 0.0314, 0.0471,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0235, 0.0275, 0.0392,  ..., 0.0000, 0.0000, 0.0000],
         [0.0392, 0.0627, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0941, 0.1373, 0.2353,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0039,  ..., 0.1765, 0.2196, 0.2392],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1882, 0.2157],
         [0.0000, 0.0000, 0.0000,  ..., 0.2078, 0.2039, 0.2118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.1098, 0.1137],
         [0.0000, 0.0039, 0.0039,  ..., 0.0667, 0.0627, 0.0706],
         [0.0039, 0.0157, 0.0314,  ..., 0.0471, 0.0392, 0.0510]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.1765, 0.2196, 0.2392],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1882, 0.2157],
         [0.0000, 0.0000, 0.0000,  ..., 0.2078, 0.2039, 0.2118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.1098, 0.1137],
         [0.0000, 0.0039, 0.0039,  ..., 0.0667, 0.0627, 0.0706],
         [0.0039, 0.0157, 0.0314,  ..., 0.0471, 0.0392, 0.0510]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.1765, 0.2196, 0.2392],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1882, 0.2157],
         [0.0000, 0.0000, 0.0000,  ..., 0.2078, 0.2039, 0.2118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.1098, 0.1137],
         [0.0000, 0.0039, 0.0039,  ..., 0.0667, 0.0627, 0.0706],
         [0.0039, 0.0157, 0.0314,  ..., 0.0471, 0.0392, 0.0510]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
Epoch 24/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.62img/s, loss (batch)=0.977]
Epoch 25/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 25/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.49img/s, loss (batch)=1.22]
Epoch 26/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 26/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.51img/s, loss (batch)=1.05]
Epoch 27/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 27/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.39img/s, loss (batch)=1.01]
Epoch 28/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 28/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.19img/s, loss (batch)=0.997]
sample {'image': tensor([[[0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078],
         [0.0039, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078],
         [0.0039, 0.0078, 0.0118,  ..., 0.0078, 0.0078, 0.0039]],
        [[0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078],
         [0.0039, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078],
         [0.0039, 0.0078, 0.0118,  ..., 0.0078, 0.0078, 0.0039]],
        [[0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078],
         [0.0039, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078],
         [0.0039, 0.0078, 0.0118,  ..., 0.0078, 0.0078, 0.0039]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0902, 0.0627, 0.0510,  ..., 0.0431, 0.0431, 0.0392],
         [0.1059, 0.0902, 0.0784,  ..., 0.0510, 0.0471, 0.0510],
         [0.0980, 0.0902, 0.1098,  ..., 0.0157, 0.0157, 0.0235],
         ...,
         [0.0745, 0.0941, 0.1059,  ..., 0.0235, 0.0118, 0.0078],
         [0.0314, 0.0392, 0.0549,  ..., 0.0235, 0.0118, 0.0078],
         [0.0157, 0.0157, 0.0196,  ..., 0.0196, 0.0118, 0.0157]],
        [[0.0902, 0.0627, 0.0510,  ..., 0.0431, 0.0431, 0.0392],
         [0.1059, 0.0902, 0.0784,  ..., 0.0510, 0.0471, 0.0510],
         [0.0980, 0.0902, 0.1098,  ..., 0.0157, 0.0157, 0.0235],
         ...,
         [0.0745, 0.0941, 0.1059,  ..., 0.0235, 0.0118, 0.0078],
         [0.0314, 0.0392, 0.0549,  ..., 0.0235, 0.0118, 0.0078],
         [0.0157, 0.0157, 0.0196,  ..., 0.0196, 0.0118, 0.0157]],
        [[0.0902, 0.0627, 0.0510,  ..., 0.0431, 0.0431, 0.0392],
         [0.1059, 0.0902, 0.0784,  ..., 0.0510, 0.0471, 0.0510],
         [0.0980, 0.0902, 0.1098,  ..., 0.0157, 0.0157, 0.0235],
         ...,
         [0.0745, 0.0941, 0.1059,  ..., 0.0235, 0.0118, 0.0078],
         [0.0314, 0.0392, 0.0549,  ..., 0.0235, 0.0118, 0.0078],
         [0.0157, 0.0157, 0.0196,  ..., 0.0196, 0.0118, 0.0157]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0078, 0.0078,  ..., 0.0745, 0.1098, 0.1686],
         [0.0039, 0.0078, 0.0039,  ..., 0.1059, 0.1569, 0.2392],
         [0.0039, 0.0078, 0.0118,  ..., 0.1333, 0.2118, 0.2745],
         ...,
         [0.0510, 0.0745, 0.1412,  ..., 0.0078, 0.0000, 0.0000],
         [0.0627, 0.0980, 0.1804,  ..., 0.0078, 0.0000, 0.0000],
         [0.1412, 0.2588, 0.4510,  ..., 0.0118, 0.0039, 0.0000]],
        [[0.0039, 0.0078, 0.0078,  ..., 0.0745, 0.1098, 0.1686],
         [0.0039, 0.0078, 0.0039,  ..., 0.1059, 0.1569, 0.2392],
         [0.0039, 0.0078, 0.0118,  ..., 0.1333, 0.2118, 0.2745],
         ...,
         [0.0510, 0.0745, 0.1412,  ..., 0.0078, 0.0000, 0.0000],
         [0.0627, 0.0980, 0.1804,  ..., 0.0078, 0.0000, 0.0000],
         [0.1412, 0.2588, 0.4510,  ..., 0.0118, 0.0039, 0.0000]],
        [[0.0039, 0.0078, 0.0078,  ..., 0.0745, 0.1098, 0.1686],
         [0.0039, 0.0078, 0.0039,  ..., 0.1059, 0.1569, 0.2392],
         [0.0039, 0.0078, 0.0118,  ..., 0.1333, 0.2118, 0.2745],
         ...,
         [0.0510, 0.0745, 0.1412,  ..., 0.0078, 0.0000, 0.0000],
         [0.0627, 0.0980, 0.1804,  ..., 0.0078, 0.0000, 0.0000],
         [0.1412, 0.2588, 0.4510,  ..., 0.0118, 0.0039, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1882, 0.2118, 0.2235,  ..., 0.1569, 0.1020, 0.0745],
         [0.1529, 0.2039, 0.2549,  ..., 0.1373, 0.0902, 0.0549],
         [0.1569, 0.2588, 0.2588,  ..., 0.1098, 0.0667, 0.0510],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0667, 0.0941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0588, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.0471, 0.0784, 0.0588]],
        [[0.1882, 0.2118, 0.2235,  ..., 0.1569, 0.1020, 0.0745],
         [0.1529, 0.2039, 0.2549,  ..., 0.1373, 0.0902, 0.0549],
         [0.1569, 0.2588, 0.2588,  ..., 0.1098, 0.0667, 0.0510],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0667, 0.0941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0588, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.0471, 0.0784, 0.0588]],
        [[0.1882, 0.2118, 0.2235,  ..., 0.1569, 0.1020, 0.0745],
         [0.1529, 0.2039, 0.2549,  ..., 0.1373, 0.0902, 0.0549],
         [0.1569, 0.2588, 0.2588,  ..., 0.1098, 0.0667, 0.0510],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0667, 0.0941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0588, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.0471, 0.0784, 0.0588]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0902, 0.0588, 0.0314,  ..., 0.0196, 0.0157, 0.0118],
         [0.0784, 0.0471, 0.0235,  ..., 0.0157, 0.0118, 0.0078],
         [0.0549, 0.0314, 0.0118,  ..., 0.0118, 0.0078, 0.0039],
         ...,
         [0.0549, 0.0549, 0.0627,  ..., 0.0196, 0.0039, 0.0000],
         [0.0745, 0.0745, 0.0784,  ..., 0.0078, 0.0000, 0.0000],
         [0.0863, 0.1020, 0.1020,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0902, 0.0588, 0.0314,  ..., 0.0196, 0.0157, 0.0118],
         [0.0784, 0.0471, 0.0235,  ..., 0.0157, 0.0118, 0.0078],
         [0.0549, 0.0314, 0.0118,  ..., 0.0118, 0.0078, 0.0039],
         ...,
         [0.0549, 0.0549, 0.0627,  ..., 0.0196, 0.0039, 0.0000],
         [0.0745, 0.0745, 0.0784,  ..., 0.0078, 0.0000, 0.0000],
         [0.0863, 0.1020, 0.1020,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0902, 0.0588, 0.0314,  ..., 0.0196, 0.0157, 0.0118],
         [0.0784, 0.0471, 0.0235,  ..., 0.0157, 0.0118, 0.0078],
         [0.0549, 0.0314, 0.0118,  ..., 0.0118, 0.0078, 0.0039],
         ...,
         [0.0549, 0.0549, 0.0627,  ..., 0.0196, 0.0039, 0.0000],
         [0.0745, 0.0745, 0.0784,  ..., 0.0078, 0.0000, 0.0000],
         [0.0863, 0.1020, 0.1020,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.4235, 0.3608, 0.1765],
         [0.0000, 0.0000, 0.0000,  ..., 0.5059, 0.4784, 0.3608],
         [0.0000, 0.0000, 0.0039,  ..., 0.6745, 0.7451, 0.7294],
         ...,
         [0.0314, 0.0196, 0.0157,  ..., 0.0392, 0.0471, 0.0392],
         [0.0471, 0.0235, 0.0157,  ..., 0.0588, 0.0588, 0.0510],
         [0.0667, 0.0314, 0.0196,  ..., 0.0549, 0.0549, 0.0667]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.4235, 0.3608, 0.1765],
         [0.0000, 0.0000, 0.0000,  ..., 0.5059, 0.4784, 0.3608],
         [0.0000, 0.0000, 0.0039,  ..., 0.6745, 0.7451, 0.7294],
         ...,
         [0.0314, 0.0196, 0.0157,  ..., 0.0392, 0.0471, 0.0392],
         [0.0471, 0.0235, 0.0157,  ..., 0.0588, 0.0588, 0.0510],
         [0.0667, 0.0314, 0.0196,  ..., 0.0549, 0.0549, 0.0667]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.4235, 0.3608, 0.1765],
         [0.0000, 0.0000, 0.0000,  ..., 0.5059, 0.4784, 0.3608],
         [0.0000, 0.0000, 0.0039,  ..., 0.6745, 0.7451, 0.7294],
         ...,
         [0.0314, 0.0196, 0.0157,  ..., 0.0392, 0.0471, 0.0392],
         [0.0471, 0.0235, 0.0157,  ..., 0.0588, 0.0588, 0.0510],
         [0.0667, 0.0314, 0.0196,  ..., 0.0549, 0.0549, 0.0667]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0118, 0.0118, 0.0118,  ..., 0.2000, 0.2000, 0.1412],
         [0.0078, 0.0078, 0.0078,  ..., 0.3412, 0.1686, 0.0588],
         [0.0078, 0.0078, 0.0039,  ..., 0.1373, 0.0706, 0.0196],
         ...,
         [0.1725, 0.0824, 0.0510,  ..., 0.3137, 0.4196, 0.3490],
         [0.1451, 0.0667, 0.0392,  ..., 0.3137, 0.3333, 0.2353],
         [0.1216, 0.0588, 0.0392,  ..., 0.2471, 0.2588, 0.1725]],
        [[0.0118, 0.0118, 0.0118,  ..., 0.2000, 0.2000, 0.1412],
         [0.0078, 0.0078, 0.0078,  ..., 0.3412, 0.1686, 0.0588],
         [0.0078, 0.0078, 0.0039,  ..., 0.1373, 0.0706, 0.0196],
         ...,
         [0.1725, 0.0824, 0.0510,  ..., 0.3137, 0.4196, 0.3490],
         [0.1451, 0.0667, 0.0392,  ..., 0.3137, 0.3333, 0.2353],
         [0.1216, 0.0588, 0.0392,  ..., 0.2471, 0.2588, 0.1725]],
        [[0.0118, 0.0118, 0.0118,  ..., 0.2000, 0.2000, 0.1412],
         [0.0078, 0.0078, 0.0078,  ..., 0.3412, 0.1686, 0.0588],
         [0.0078, 0.0078, 0.0039,  ..., 0.1373, 0.0706, 0.0196],
         ...,
         [0.1725, 0.0824, 0.0510,  ..., 0.3137, 0.4196, 0.3490],
         [0.1451, 0.0667, 0.0392,  ..., 0.3137, 0.3333, 0.2353],
         [0.1216, 0.0588, 0.0392,  ..., 0.2471, 0.2588, 0.1725]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.]])}
sample {'image': tensor([[[0.0431, 0.0314, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0314, 0.0275, 0.0235,  ..., 0.0039, 0.0039, 0.0078],
         [0.0235, 0.0235, 0.0235,  ..., 0.0078, 0.0118, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1137, 0.1686],
         [0.0000, 0.0000, 0.0000,  ..., 0.1098, 0.1529, 0.1686],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1569, 0.1804]],
        [[0.0431, 0.0314, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0314, 0.0275, 0.0235,  ..., 0.0039, 0.0039, 0.0078],
         [0.0235, 0.0235, 0.0235,  ..., 0.0078, 0.0118, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1137, 0.1686],
         [0.0000, 0.0000, 0.0000,  ..., 0.1098, 0.1529, 0.1686],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1569, 0.1804]],
        [[0.0431, 0.0314, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0314, 0.0275, 0.0235,  ..., 0.0039, 0.0039, 0.0078],
         [0.0235, 0.0235, 0.0235,  ..., 0.0078, 0.0118, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.1137, 0.1686],
         [0.0000, 0.0000, 0.0000,  ..., 0.1098, 0.1529, 0.1686],
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1569, 0.1804]]]), 'mask': tensor([[0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.6471, 0.7647, 0.7412,  ..., 0.1647, 0.2275, 0.2235],
         [0.4471, 0.7412, 0.7490,  ..., 0.2980, 0.2392, 0.1961],
         [0.2314, 0.4667, 0.6824,  ..., 0.5608, 0.2863, 0.2039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0196, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0078]],
        [[0.6471, 0.7647, 0.7412,  ..., 0.1647, 0.2275, 0.2235],
         [0.4471, 0.7412, 0.7490,  ..., 0.2980, 0.2392, 0.1961],
         [0.2314, 0.4667, 0.6824,  ..., 0.5608, 0.2863, 0.2039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0196, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0078]],
        [[0.6471, 0.7647, 0.7412,  ..., 0.1647, 0.2275, 0.2235],
         [0.4471, 0.7412, 0.7490,  ..., 0.2980, 0.2392, 0.1961],
         [0.2314, 0.4667, 0.6824,  ..., 0.5608, 0.2863, 0.2039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0196, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0118, 0.0078]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}sample {'image': tensor([[[0.1294, 0.0941, 0.0902,  ..., 0.0745, 0.0824, 0.1020],
         [0.1569, 0.1176, 0.0863,  ..., 0.0471, 0.0627, 0.0706],
         [0.1922, 0.1255, 0.0824,  ..., 0.0392, 0.0471, 0.0510],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0706, 0.0588, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0863, 0.0627, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.0784, 0.0706]],
        [[0.1294, 0.0941, 0.0902,  ..., 0.0745, 0.0824, 0.1020],
         [0.1569, 0.1176, 0.0863,  ..., 0.0471, 0.0627, 0.0706],
         [0.1922, 0.1255, 0.0824,  ..., 0.0392, 0.0471, 0.0510],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0706, 0.0588, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0863, 0.0627, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.0784, 0.0706]],
        [[0.1294, 0.0941, 0.0902,  ..., 0.0745, 0.0824, 0.1020],
         [0.1569, 0.1176, 0.0863,  ..., 0.0471, 0.0627, 0.0706],
         [0.1922, 0.1255, 0.0824,  ..., 0.0392, 0.0471, 0.0510],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0706, 0.0588, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0863, 0.0627, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.0784, 0.0706]]]), 'mask': tensor([[0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0118, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0431, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0902, 0.1804, 0.2706],
         ...,
         [0.3216, 0.3333, 0.3569,  ..., 0.0000, 0.0196, 0.0549],
         [0.1451, 0.1608, 0.1765,  ..., 0.0118, 0.0510, 0.1059],
         [0.0902, 0.0980, 0.1098,  ..., 0.0353, 0.1176, 0.2314]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0118, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0431, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0902, 0.1804, 0.2706],
         ...,
         [0.3216, 0.3333, 0.3569,  ..., 0.0000, 0.0196, 0.0549],
         [0.1451, 0.1608, 0.1765,  ..., 0.0118, 0.0510, 0.1059],
         [0.0902, 0.0980, 0.1098,  ..., 0.0353, 0.1176, 0.2314]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0118, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0431, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0902, 0.1804, 0.2706],
         ...,
         [0.3216, 0.3333, 0.3569,  ..., 0.0000, 0.0196, 0.0549],
         [0.1451, 0.1608, 0.1765,  ..., 0.0118, 0.0510, 0.1059],
         [0.0902, 0.0980, 0.1098,  ..., 0.0353, 0.1176, 0.2314]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.3059, 0.1529, 0.1020,  ..., 0.3882, 0.7137, 0.7098],
         [0.1961, 0.0980, 0.0706,  ..., 0.3647, 0.3725, 0.3059],
         [0.1020, 0.0627, 0.0588,  ..., 0.3882, 0.2667, 0.2000],
         ...,
         [0.0314, 0.0314, 0.0471,  ..., 0.0667, 0.0706, 0.0941],
         [0.0863, 0.0902, 0.1490,  ..., 0.0745, 0.0863, 0.1059],
         [0.2431, 0.3608, 0.5255,  ..., 0.0863, 0.1098, 0.1059]],
        [[0.3059, 0.1529, 0.1020,  ..., 0.3882, 0.7137, 0.7098],
         [0.1961, 0.0980, 0.0706,  ..., 0.3647, 0.3725, 0.3059],
         [0.1020, 0.0627, 0.0588,  ..., 0.3882, 0.2667, 0.2000],
         ...,
         [0.0314, 0.0314, 0.0471,  ..., 0.0667, 0.0706, 0.0941],
         [0.0863, 0.0902, 0.1490,  ..., 0.0745, 0.0863, 0.1059],
         [0.2431, 0.3608, 0.5255,  ..., 0.0863, 0.1098, 0.1059]],
        [[0.3059, 0.1529, 0.1020,  ..., 0.3882, 0.7137, 0.7098],
         [0.1961, 0.0980, 0.0706,  ..., 0.3647, 0.3725, 0.3059],
         [0.1020, 0.0627, 0.0588,  ..., 0.3882, 0.2667, 0.2000],
         ...,
         [0.0314, 0.0314, 0.0471,  ..., 0.0667, 0.0706, 0.0941],
         [0.0863, 0.0902, 0.1490,  ..., 0.0745, 0.0863, 0.1059],
         [0.2431, 0.3608, 0.5255,  ..., 0.0863, 0.1098, 0.1059]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1294, 0.1255, 0.1098,  ..., 0.0196, 0.0667, 0.2824],
         [0.0941, 0.0824, 0.0745,  ..., 0.0275, 0.0941, 0.3373],
         [0.0588, 0.0471, 0.0510,  ..., 0.0392, 0.1333, 0.3882],
         ...,
         [0.0824, 0.0824, 0.0980,  ..., 0.0549, 0.0667, 0.0745],
         [0.1176, 0.1294, 0.1647,  ..., 0.0706, 0.0588, 0.0627],
         [0.2000, 0.2039, 0.2549,  ..., 0.0549, 0.0588, 0.0706]],
        [[0.1294, 0.1255, 0.1098,  ..., 0.0196, 0.0667, 0.2824],
         [0.0941, 0.0824, 0.0745,  ..., 0.0275, 0.0941, 0.3373],
         [0.0588, 0.0471, 0.0510,  ..., 0.0392, 0.1333, 0.3882],
         ...,
         [0.0824, 0.0824, 0.0980,  ..., 0.0549, 0.0667, 0.0745],
         [0.1176, 0.1294, 0.1647,  ..., 0.0706, 0.0588, 0.0627],
         [0.2000, 0.2039, 0.2549,  ..., 0.0549, 0.0588, 0.0706]],
        [[0.1294, 0.1255, 0.1098,  ..., 0.0196, 0.0667, 0.2824],
         [0.0941, 0.0824, 0.0745,  ..., 0.0275, 0.0941, 0.3373],
         [0.0588, 0.0471, 0.0510,  ..., 0.0392, 0.1333, 0.3882],
         ...,
         [0.0824, 0.0824, 0.0980,  ..., 0.0549, 0.0667, 0.0745],
         [0.1176, 0.1294, 0.1647,  ..., 0.0706, 0.0588, 0.0627],
         [0.2000, 0.2039, 0.2549,  ..., 0.0549, 0.0588, 0.0706]]]), 'mask': tensor([[0., 1., 1.,  ..., 1., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0392, 0.0275, 0.0235,  ..., 0.0118, 0.0157, 0.0235],
         [0.0706, 0.0431, 0.0314,  ..., 0.0314, 0.0353, 0.0471],
         [0.1373, 0.0667, 0.0353,  ..., 0.0549, 0.0706, 0.1020],
         ...,
         [0.0667, 0.0392, 0.0157,  ..., 0.0667, 0.0392, 0.0275],
         [0.0235, 0.0078, 0.0039,  ..., 0.0706, 0.0471, 0.0275],
         [0.0039, 0.0000, 0.0000,  ..., 0.0784, 0.0471, 0.0353]],
        [[0.0392, 0.0275, 0.0235,  ..., 0.0118, 0.0157, 0.0235],
         [0.0706, 0.0431, 0.0314,  ..., 0.0314, 0.0353, 0.0471],
         [0.1373, 0.0667, 0.0353,  ..., 0.0549, 0.0706, 0.1020],
         ...,
         [0.0667, 0.0392, 0.0157,  ..., 0.0667, 0.0392, 0.0275],
         [0.0235, 0.0078, 0.0039,  ..., 0.0706, 0.0471, 0.0275],
         [0.0039, 0.0000, 0.0000,  ..., 0.0784, 0.0471, 0.0353]],
        [[0.0392, 0.0275, 0.0235,  ..., 0.0118, 0.0157, 0.0235],
         [0.0706, 0.0431, 0.0314,  ..., 0.0314, 0.0353, 0.0471],
         [0.1373, 0.0667, 0.0353,  ..., 0.0549, 0.0706, 0.1020],
         ...,
         [0.0667, 0.0392, 0.0157,  ..., 0.0667, 0.0392, 0.0275],
         [0.0235, 0.0078, 0.0039,  ..., 0.0706, 0.0471, 0.0275],
         [0.0039, 0.0000, 0.0000,  ..., 0.0784, 0.0471, 0.0353]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.2588, 0.2039, 0.2118,  ..., 0.0588, 0.0706, 0.1020],
         [0.2078, 0.1333, 0.0863,  ..., 0.0863, 0.0902, 0.1059],
         [0.2078, 0.1216, 0.0510,  ..., 0.1255, 0.1451, 0.1451],
         ...,
         [0.0196, 0.0275, 0.0275,  ..., 0.0863, 0.0902, 0.1020],
         [0.0314, 0.0314, 0.0392,  ..., 0.0980, 0.1059, 0.0941],
         [0.0314, 0.0353, 0.0392,  ..., 0.1529, 0.1686, 0.1216]],
        [[0.2588, 0.2039, 0.2118,  ..., 0.0588, 0.0706, 0.1020],
         [0.2078, 0.1333, 0.0863,  ..., 0.0863, 0.0902, 0.1059],
         [0.2078, 0.1216, 0.0510,  ..., 0.1255, 0.1451, 0.1451],
         ...,
         [0.0196, 0.0275, 0.0275,  ..., 0.0863, 0.0902, 0.1020],
         [0.0314, 0.0314, 0.0392,  ..., 0.0980, 0.1059, 0.0941],
         [0.0314, 0.0353, 0.0392,  ..., 0.1529, 0.1686, 0.1216]],
        [[0.2588, 0.2039, 0.2118,  ..., 0.0588, 0.0706, 0.1020],
         [0.2078, 0.1333, 0.0863,  ..., 0.0863, 0.0902, 0.1059],
         [0.2078, 0.1216, 0.0510,  ..., 0.1255, 0.1451, 0.1451],
         ...,
         [0.0196, 0.0275, 0.0275,  ..., 0.0863, 0.0902, 0.1020],
         [0.0314, 0.0314, 0.0392,  ..., 0.0980, 0.1059, 0.0941],
         [0.0314, 0.0353, 0.0392,  ..., 0.1529, 0.1686, 0.1216]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.0863, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.2039, 0.1255, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.2314, 0.1373, 0.0745],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0196, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0588, 0.0902, 0.0980]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.0863, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.2039, 0.1255, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.2314, 0.1373, 0.0745],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0196, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0588, 0.0902, 0.0980]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.0863, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.2039, 0.1255, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.2314, 0.1373, 0.0745],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0196, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0588, 0.0902, 0.0980]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 0.]])}
sample {'image': tensor([[[0.0392, 0.0235, 0.0078,  ..., 0.0980, 0.0902, 0.0667],
         [0.0196, 0.0078, 0.0039,  ..., 0.1216, 0.0863, 0.0549],
         [0.0118, 0.0039, 0.0039,  ..., 0.0745, 0.0549, 0.0392],
         ...,
         [0.2431, 0.1412, 0.0824,  ..., 0.2627, 0.1608, 0.1294],
         [0.1294, 0.0667, 0.0353,  ..., 0.5020, 0.2784, 0.1882],
         [0.0627, 0.0353, 0.0118,  ..., 0.4980, 0.4235, 0.2863]],
        [[0.0392, 0.0235, 0.0078,  ..., 0.0980, 0.0902, 0.0667],
         [0.0196, 0.0078, 0.0039,  ..., 0.1216, 0.0863, 0.0549],
         [0.0118, 0.0039, 0.0039,  ..., 0.0745, 0.0549, 0.0392],
         ...,
         [0.2431, 0.1412, 0.0824,  ..., 0.2627, 0.1608, 0.1294],
         [0.1294, 0.0667, 0.0353,  ..., 0.5020, 0.2784, 0.1882],
         [0.0627, 0.0353, 0.0118,  ..., 0.4980, 0.4235, 0.2863]],
        [[0.0392, 0.0235, 0.0078,  ..., 0.0980, 0.0902, 0.0667],
         [0.0196, 0.0078, 0.0039,  ..., 0.1216, 0.0863, 0.0549],
         [0.0118, 0.0039, 0.0039,  ..., 0.0745, 0.0549, 0.0392],
         ...,
         [0.2431, 0.1412, 0.0824,  ..., 0.2627, 0.1608, 0.1294],
         [0.1294, 0.0667, 0.0353,  ..., 0.5020, 0.2784, 0.1882],
         [0.0627, 0.0353, 0.0118,  ..., 0.4980, 0.4235, 0.2863]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0196, 0.0078, 0.0000,  ..., 0.1333, 0.1255, 0.1137],
         [0.0275, 0.0078, 0.0039,  ..., 0.1294, 0.1373, 0.1216],
         [0.0275, 0.0118, 0.0078,  ..., 0.1137, 0.0980, 0.0980],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1608, 0.1176, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.1137, 0.0745],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1098, 0.0510]],
        [[0.0196, 0.0078, 0.0000,  ..., 0.1333, 0.1255, 0.1137],
         [0.0275, 0.0078, 0.0039,  ..., 0.1294, 0.1373, 0.1216],
         [0.0275, 0.0118, 0.0078,  ..., 0.1137, 0.0980, 0.0980],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1608, 0.1176, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.1137, 0.0745],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1098, 0.0510]],
        [[0.0196, 0.0078, 0.0000,  ..., 0.1333, 0.1255, 0.1137],
         [0.0275, 0.0078, 0.0039,  ..., 0.1294, 0.1373, 0.1216],
         [0.0275, 0.0118, 0.0078,  ..., 0.1137, 0.0980, 0.0980],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1608, 0.1176, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.1137, 0.0745],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1098, 0.0510]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.2000, 0.3098, 0.4941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.1294, 0.2627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0549, 0.1059],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0510, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0588, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0627, 0.0549]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.2000, 0.3098, 0.4941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.1294, 0.2627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0549, 0.1059],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0510, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0588, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0627, 0.0549]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.2000, 0.3098, 0.4941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.1294, 0.2627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0549, 0.1059],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0510, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0588, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0627, 0.0549]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
Epoch 28/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.25img/s, loss (batch)=0.997]
Epoch 29/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 29/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.42img/s, loss (batch)=0.98]
Epoch 30/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 30/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.39img/s, loss (batch)=0.933]
Epoch 31/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 31/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.16img/s, loss (batch)=1.01]
Epoch 32/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 32/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.51img/s, loss (batch)=0.923]
Epoch 33/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0118, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0549, 0.0235, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0392, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0314]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0118, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0549, 0.0235, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0392, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0314]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0118, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0549, 0.0235, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0392, 0.0627],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0196, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0314]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0196, 0.0275, 0.0275,  ..., 0.0510, 0.0588, 0.0667],
         [0.0196, 0.0235, 0.0235,  ..., 0.0667, 0.0627, 0.0588],
         [0.0235, 0.0275, 0.0196,  ..., 0.0863, 0.0784, 0.0667],
         ...,
         [0.0275, 0.0157, 0.0118,  ..., 0.0667, 0.0784, 0.0706],
         [0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0353, 0.0275],
         [0.0157, 0.0078, 0.0039,  ..., 0.0196, 0.0157, 0.0078]],
        [[0.0196, 0.0275, 0.0275,  ..., 0.0510, 0.0588, 0.0667],
         [0.0196, 0.0235, 0.0235,  ..., 0.0667, 0.0627, 0.0588],
         [0.0235, 0.0275, 0.0196,  ..., 0.0863, 0.0784, 0.0667],
         ...,
         [0.0275, 0.0157, 0.0118,  ..., 0.0667, 0.0784, 0.0706],
         [0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0353, 0.0275],
         [0.0157, 0.0078, 0.0039,  ..., 0.0196, 0.0157, 0.0078]],
        [[0.0196, 0.0275, 0.0275,  ..., 0.0510, 0.0588, 0.0667],
         [0.0196, 0.0235, 0.0235,  ..., 0.0667, 0.0627, 0.0588],
         [0.0235, 0.0275, 0.0196,  ..., 0.0863, 0.0784, 0.0667],
         ...,
         [0.0275, 0.0157, 0.0118,  ..., 0.0667, 0.0784, 0.0706],
         [0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0353, 0.0275],
         [0.0157, 0.0078, 0.0039,  ..., 0.0196, 0.0157, 0.0078]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0627, 0.0667, 0.0745,  ..., 0.0157, 0.0314, 0.0549],
         [0.0627, 0.0588, 0.0627,  ..., 0.0118, 0.0353, 0.0627],
         [0.0510, 0.0471, 0.0471,  ..., 0.0118, 0.0431, 0.0667],
         ...,
         [0.1216, 0.0824, 0.0706,  ..., 0.0471, 0.0353, 0.0118],
         [0.0902, 0.0745, 0.0667,  ..., 0.0314, 0.0275, 0.0157],
         [0.0824, 0.0745, 0.0667,  ..., 0.0392, 0.0353, 0.0235]],
        [[0.0627, 0.0667, 0.0745,  ..., 0.0157, 0.0314, 0.0549],
         [0.0627, 0.0588, 0.0627,  ..., 0.0118, 0.0353, 0.0627],
         [0.0510, 0.0471, 0.0471,  ..., 0.0118, 0.0431, 0.0667],
         ...,
         [0.1216, 0.0824, 0.0706,  ..., 0.0471, 0.0353, 0.0118],
         [0.0902, 0.0745, 0.0667,  ..., 0.0314, 0.0275, 0.0157],
         [0.0824, 0.0745, 0.0667,  ..., 0.0392, 0.0353, 0.0235]],
        [[0.0627, 0.0667, 0.0745,  ..., 0.0157, 0.0314, 0.0549],
         [0.0627, 0.0588, 0.0627,  ..., 0.0118, 0.0353, 0.0627],
         [0.0510, 0.0471, 0.0471,  ..., 0.0118, 0.0431, 0.0667],
         ...,
         [0.1216, 0.0824, 0.0706,  ..., 0.0471, 0.0353, 0.0118],
         [0.0902, 0.0745, 0.0667,  ..., 0.0314, 0.0275, 0.0157],
         [0.0824, 0.0745, 0.0667,  ..., 0.0392, 0.0353, 0.0235]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0314, 0.0431, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0627, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0667, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0314, 0.0431, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0627, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0667, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0314, 0.0431, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0627, 0.0706,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0667, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0275, 0.0392, 0.0431,  ..., 0.0078, 0.0118, 0.0118],
         [0.0392, 0.0431, 0.0392,  ..., 0.0039, 0.0039, 0.0078],
         [0.0314, 0.0392, 0.0431,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0392, 0.0392],
         [0.0157, 0.0078, 0.0039,  ..., 0.0667, 0.0745, 0.0667],
         [0.0078, 0.0039, 0.0039,  ..., 0.1059, 0.1412, 0.1373]],
        [[0.0275, 0.0392, 0.0431,  ..., 0.0078, 0.0118, 0.0118],
         [0.0392, 0.0431, 0.0392,  ..., 0.0039, 0.0039, 0.0078],
         [0.0314, 0.0392, 0.0431,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0392, 0.0392],
         [0.0157, 0.0078, 0.0039,  ..., 0.0667, 0.0745, 0.0667],
         [0.0078, 0.0039, 0.0039,  ..., 0.1059, 0.1412, 0.1373]],
        [[0.0275, 0.0392, 0.0431,  ..., 0.0078, 0.0118, 0.0118],
         [0.0392, 0.0431, 0.0392,  ..., 0.0039, 0.0039, 0.0078],
         [0.0314, 0.0392, 0.0431,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0392, 0.0392],
         [0.0157, 0.0078, 0.0039,  ..., 0.0667, 0.0745, 0.0667],
         [0.0078, 0.0039, 0.0039,  ..., 0.1059, 0.1412, 0.1373]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0157, 0.0118, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0000,  ..., 0.0745, 0.0824, 0.0902],
         [0.0078, 0.0039, 0.0000,  ..., 0.0784, 0.0980, 0.1020],
         [0.0118, 0.0039, 0.0000,  ..., 0.0627, 0.0980, 0.1255]],
        [[0.0157, 0.0118, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0000,  ..., 0.0745, 0.0824, 0.0902],
         [0.0078, 0.0039, 0.0000,  ..., 0.0784, 0.0980, 0.1020],
         [0.0118, 0.0039, 0.0000,  ..., 0.0627, 0.0980, 0.1255]],
        [[0.0157, 0.0118, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0078, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0000,  ..., 0.0745, 0.0824, 0.0902],
         [0.0078, 0.0039, 0.0000,  ..., 0.0784, 0.0980, 0.1020],
         [0.0118, 0.0039, 0.0000,  ..., 0.0627, 0.0980, 0.1255]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1412, 0.2039, 0.3216,  ..., 0.1765, 0.1725, 0.1451],
         [0.1843, 0.1882, 0.2078,  ..., 0.1059, 0.1529, 0.1373],
         [0.1765, 0.1686, 0.1098,  ..., 0.0549, 0.0863, 0.1255],
         ...,
         [0.3333, 0.2353, 0.1882,  ..., 0.0353, 0.0196, 0.0157],
         [0.3294, 0.3882, 0.3961,  ..., 0.0549, 0.0275, 0.0275],
         [0.5843, 0.7922, 0.8000,  ..., 0.0392, 0.0314, 0.0275]],
        [[0.1412, 0.2039, 0.3216,  ..., 0.1765, 0.1725, 0.1451],
         [0.1843, 0.1882, 0.2078,  ..., 0.1059, 0.1529, 0.1373],
         [0.1765, 0.1686, 0.1098,  ..., 0.0549, 0.0863, 0.1255],
         ...,
         [0.3333, 0.2353, 0.1882,  ..., 0.0353, 0.0196, 0.0157],
         [0.3294, 0.3882, 0.3961,  ..., 0.0549, 0.0275, 0.0275],
         [0.5843, 0.7922, 0.8000,  ..., 0.0392, 0.0314, 0.0275]],
        [[0.1412, 0.2039, 0.3216,  ..., 0.1765, 0.1725, 0.1451],
         [0.1843, 0.1882, 0.2078,  ..., 0.1059, 0.1529, 0.1373],
         [0.1765, 0.1686, 0.1098,  ..., 0.0549, 0.0863, 0.1255],
         ...,
         [0.3333, 0.2353, 0.1882,  ..., 0.0353, 0.0196, 0.0157],
         [0.3294, 0.3882, 0.3961,  ..., 0.0549, 0.0275, 0.0275],
         [0.5843, 0.7922, 0.8000,  ..., 0.0392, 0.0314, 0.0275]]]), 'mask': tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.3176, 0.3804, 0.3490,  ..., 0.0000, 0.0000, 0.0039],
         [0.4039, 0.4314, 0.3686,  ..., 0.0000, 0.0039, 0.0078],
         [0.4745, 0.5176, 0.4118,  ..., 0.0039, 0.0118, 0.0235],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.3176, 0.3804, 0.3490,  ..., 0.0000, 0.0000, 0.0039],
         [0.4039, 0.4314, 0.3686,  ..., 0.0000, 0.0039, 0.0078],
         [0.4745, 0.5176, 0.4118,  ..., 0.0039, 0.0118, 0.0235],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.3176, 0.3804, 0.3490,  ..., 0.0000, 0.0000, 0.0039],
         [0.4039, 0.4314, 0.3686,  ..., 0.0000, 0.0039, 0.0078],
         [0.4745, 0.5176, 0.4118,  ..., 0.0039, 0.0118, 0.0235],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.4000, 0.4549, 0.4431,  ..., 0.0784, 0.0588, 0.0510],
         [0.3882, 0.3882, 0.3765,  ..., 0.0745, 0.0667, 0.0510],
         [0.3020, 0.2863, 0.3020,  ..., 0.0627, 0.0706, 0.0431],
         ...,
         [0.2863, 0.2627, 0.2078,  ..., 0.0431, 0.0431, 0.0392],
         [0.2510, 0.2627, 0.1882,  ..., 0.0392, 0.0353, 0.0353],
         [0.2353, 0.2510, 0.2157,  ..., 0.0314, 0.0275, 0.0314]],
        [[0.4000, 0.4549, 0.4431,  ..., 0.0784, 0.0588, 0.0510],
         [0.3882, 0.3882, 0.3765,  ..., 0.0745, 0.0667, 0.0510],
         [0.3020, 0.2863, 0.3020,  ..., 0.0627, 0.0706, 0.0431],
         ...,
         [0.2863, 0.2627, 0.2078,  ..., 0.0431, 0.0431, 0.0392],
         [0.2510, 0.2627, 0.1882,  ..., 0.0392, 0.0353, 0.0353],
         [0.2353, 0.2510, 0.2157,  ..., 0.0314, 0.0275, 0.0314]],
        [[0.4000, 0.4549, 0.4431,  ..., 0.0784, 0.0588, 0.0510],
         [0.3882, 0.3882, 0.3765,  ..., 0.0745, 0.0667, 0.0510],
         [0.3020, 0.2863, 0.3020,  ..., 0.0627, 0.0706, 0.0431],
         ...,
         [0.2863, 0.2627, 0.2078,  ..., 0.0431, 0.0431, 0.0392],
         [0.2510, 0.2627, 0.1882,  ..., 0.0392, 0.0353, 0.0353],
         [0.2353, 0.2510, 0.2157,  ..., 0.0314, 0.0275, 0.0314]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0078, 0.0118, 0.0118,  ..., 0.1020, 0.1373, 0.1451],
         [0.0078, 0.0078, 0.0157,  ..., 0.1333, 0.1490, 0.1725],
         [0.0118, 0.0118, 0.0196,  ..., 0.2118, 0.1451, 0.1647],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.1686, 0.2392, 0.3059],
         [0.0000, 0.0039, 0.0039,  ..., 0.1451, 0.2980, 0.4745],
         [0.0000, 0.0000, 0.0039,  ..., 0.1608, 0.2314, 0.3137]],
        [[0.0078, 0.0118, 0.0118,  ..., 0.1020, 0.1373, 0.1451],
         [0.0078, 0.0078, 0.0157,  ..., 0.1333, 0.1490, 0.1725],
         [0.0118, 0.0118, 0.0196,  ..., 0.2118, 0.1451, 0.1647],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.1686, 0.2392, 0.3059],
         [0.0000, 0.0039, 0.0039,  ..., 0.1451, 0.2980, 0.4745],
         [0.0000, 0.0000, 0.0039,  ..., 0.1608, 0.2314, 0.3137]],
        [[0.0078, 0.0118, 0.0118,  ..., 0.1020, 0.1373, 0.1451],
         [0.0078, 0.0078, 0.0157,  ..., 0.1333, 0.1490, 0.1725],
         [0.0118, 0.0118, 0.0196,  ..., 0.2118, 0.1451, 0.1647],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.1686, 0.2392, 0.3059],
         [0.0000, 0.0039, 0.0039,  ..., 0.1451, 0.2980, 0.4745],
         [0.0000, 0.0000, 0.0039,  ..., 0.1608, 0.2314, 0.3137]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0078, 0.0235,  ..., 0.1765, 0.1686, 0.1333],
         [0.0039, 0.0039, 0.0157,  ..., 0.2275, 0.1804, 0.1176],
         [0.0039, 0.0039, 0.0157,  ..., 0.2118, 0.1686, 0.1255],
         ...,
         [0.0824, 0.0980, 0.1333,  ..., 0.1098, 0.1294, 0.1373],
         [0.0980, 0.1176, 0.1294,  ..., 0.1255, 0.1451, 0.1529],
         [0.1333, 0.1569, 0.1569,  ..., 0.1333, 0.1529, 0.1490]],
        [[0.0039, 0.0078, 0.0235,  ..., 0.1765, 0.1686, 0.1333],
         [0.0039, 0.0039, 0.0157,  ..., 0.2275, 0.1804, 0.1176],
         [0.0039, 0.0039, 0.0157,  ..., 0.2118, 0.1686, 0.1255],
         ...,
         [0.0824, 0.0980, 0.1333,  ..., 0.1098, 0.1294, 0.1373],
         [0.0980, 0.1176, 0.1294,  ..., 0.1255, 0.1451, 0.1529],
         [0.1333, 0.1569, 0.1569,  ..., 0.1333, 0.1529, 0.1490]],
        [[0.0039, 0.0078, 0.0235,  ..., 0.1765, 0.1686, 0.1333],
         [0.0039, 0.0039, 0.0157,  ..., 0.2275, 0.1804, 0.1176],
         [0.0039, 0.0039, 0.0157,  ..., 0.2118, 0.1686, 0.1255],
         ...,
         [0.0824, 0.0980, 0.1333,  ..., 0.1098, 0.1294, 0.1373],
         [0.0980, 0.1176, 0.1294,  ..., 0.1255, 0.1451, 0.1529],
         [0.1333, 0.1569, 0.1569,  ..., 0.1333, 0.1529, 0.1490]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.4196, 0.3098, 0.2314,  ..., 0.0314, 0.0627, 0.1529],
         [0.3608, 0.2706, 0.1882,  ..., 0.0118, 0.0235, 0.0706],
         [0.3686, 0.2627, 0.1961,  ..., 0.0039, 0.0118, 0.0353],
         ...,
         [0.0000, 0.0039, 0.0157,  ..., 0.0157, 0.0196, 0.0196],
         [0.0000, 0.0039, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0118,  ..., 0.0078, 0.0078, 0.0078]],
        [[0.4196, 0.3098, 0.2314,  ..., 0.0314, 0.0627, 0.1529],
         [0.3608, 0.2706, 0.1882,  ..., 0.0118, 0.0235, 0.0706],
         [0.3686, 0.2627, 0.1961,  ..., 0.0039, 0.0118, 0.0353],
         ...,
         [0.0000, 0.0039, 0.0157,  ..., 0.0157, 0.0196, 0.0196],
         [0.0000, 0.0039, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0118,  ..., 0.0078, 0.0078, 0.0078]],
        [[0.4196, 0.3098, 0.2314,  ..., 0.0314, 0.0627, 0.1529],
         [0.3608, 0.2706, 0.1882,  ..., 0.0118, 0.0235, 0.0706],
         [0.3686, 0.2627, 0.1961,  ..., 0.0039, 0.0118, 0.0353],
         ...,
         [0.0000, 0.0039, 0.0157,  ..., 0.0157, 0.0196, 0.0196],
         [0.0000, 0.0039, 0.0118,  ..., 0.0118, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0118,  ..., 0.0078, 0.0078, 0.0078]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
Epoch 33/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 33/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.66img/s, loss (batch)=1.07]
Epoch 34/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 34/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.07img/s, loss (batch)=0.854]
Epoch 35/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 35/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.14img/s, loss (batch)=0.908]
Epoch 36/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         ...,
         [0.0471, 0.0431, 0.0510,  ..., 0.0039, 0.0039, 0.0039],
         [0.0549, 0.0510, 0.0549,  ..., 0.0039, 0.0000, 0.0000],
         [0.0510, 0.0471, 0.0510,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         ...,
         [0.0471, 0.0431, 0.0510,  ..., 0.0039, 0.0039, 0.0039],
         [0.0549, 0.0510, 0.0549,  ..., 0.0039, 0.0000, 0.0000],
         [0.0510, 0.0471, 0.0510,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         ...,
         [0.0471, 0.0431, 0.0510,  ..., 0.0039, 0.0039, 0.0039],
         [0.0549, 0.0510, 0.0549,  ..., 0.0039, 0.0000, 0.0000],
         [0.0510, 0.0471, 0.0510,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.2314, 0.1882, 0.1725,  ..., 0.0235, 0.0118, 0.0078],
         [0.2784, 0.2157, 0.1843,  ..., 0.0510, 0.0353, 0.0235],
         [0.2706, 0.2118, 0.1725,  ..., 0.1647, 0.1529, 0.0824]],
        [[0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.2314, 0.1882, 0.1725,  ..., 0.0235, 0.0118, 0.0078],
         [0.2784, 0.2157, 0.1843,  ..., 0.0510, 0.0353, 0.0235],
         [0.2706, 0.2118, 0.1725,  ..., 0.1647, 0.1529, 0.0824]],
        [[0.0039, 0.0039, 0.0078,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.2314, 0.1882, 0.1725,  ..., 0.0235, 0.0118, 0.0078],
         [0.2784, 0.2157, 0.1843,  ..., 0.0510, 0.0353, 0.0235],
         [0.2706, 0.2118, 0.1725,  ..., 0.1647, 0.1529, 0.0824]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.2157, 0.3529, 0.6314,  ..., 0.2392, 0.2745, 0.2275],
         [0.2196, 0.4275, 0.7882,  ..., 0.2824, 0.3647, 0.2902],
         [0.2588, 0.4980, 0.8078,  ..., 0.4196, 0.5804, 0.4745],
         ...,
         [0.0157, 0.0000, 0.0000,  ..., 0.2118, 0.1961, 0.2078],
         [0.0118, 0.0000, 0.0000,  ..., 0.2078, 0.2314, 0.2706],
         [0.0039, 0.0000, 0.0000,  ..., 0.2627, 0.2745, 0.3294]],
        [[0.2157, 0.3529, 0.6314,  ..., 0.2392, 0.2745, 0.2275],
         [0.2196, 0.4275, 0.7882,  ..., 0.2824, 0.3647, 0.2902],
         [0.2588, 0.4980, 0.8078,  ..., 0.4196, 0.5804, 0.4745],
         ...,
         [0.0157, 0.0000, 0.0000,  ..., 0.2118, 0.1961, 0.2078],
         [0.0118, 0.0000, 0.0000,  ..., 0.2078, 0.2314, 0.2706],
         [0.0039, 0.0000, 0.0000,  ..., 0.2627, 0.2745, 0.3294]],
        [[0.2157, 0.3529, 0.6314,  ..., 0.2392, 0.2745, 0.2275],
         [0.2196, 0.4275, 0.7882,  ..., 0.2824, 0.3647, 0.2902],
         [0.2588, 0.4980, 0.8078,  ..., 0.4196, 0.5804, 0.4745],
         ...,
         [0.0157, 0.0000, 0.0000,  ..., 0.2118, 0.1961, 0.2078],
         [0.0118, 0.0000, 0.0000,  ..., 0.2078, 0.2314, 0.2706],
         [0.0039, 0.0000, 0.0000,  ..., 0.2627, 0.2745, 0.3294]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1647, 0.0941, 0.0863,  ..., 0.1020, 0.1059, 0.1255],
         [0.2627, 0.1569, 0.1098,  ..., 0.1059, 0.1059, 0.1529],
         [0.2431, 0.1843, 0.1176,  ..., 0.1451, 0.1804, 0.2706],
         ...,
         [0.0235, 0.0118, 0.0039,  ..., 0.2000, 0.1569, 0.1098],
         [0.0275, 0.0157, 0.0078,  ..., 0.1451, 0.1098, 0.0824],
         [0.0353, 0.0275, 0.0157,  ..., 0.1098, 0.0706, 0.0549]],
        [[0.1647, 0.0941, 0.0863,  ..., 0.1020, 0.1059, 0.1255],
         [0.2627, 0.1569, 0.1098,  ..., 0.1059, 0.1059, 0.1529],
         [0.2431, 0.1843, 0.1176,  ..., 0.1451, 0.1804, 0.2706],
         ...,
         [0.0235, 0.0118, 0.0039,  ..., 0.2000, 0.1569, 0.1098],
         [0.0275, 0.0157, 0.0078,  ..., 0.1451, 0.1098, 0.0824],
         [0.0353, 0.0275, 0.0157,  ..., 0.1098, 0.0706, 0.0549]],
        [[0.1647, 0.0941, 0.0863,  ..., 0.1020, 0.1059, 0.1255],
         [0.2627, 0.1569, 0.1098,  ..., 0.1059, 0.1059, 0.1529],
         [0.2431, 0.1843, 0.1176,  ..., 0.1451, 0.1804, 0.2706],
         ...,
         [0.0235, 0.0118, 0.0039,  ..., 0.2000, 0.1569, 0.1098],
         [0.0275, 0.0157, 0.0078,  ..., 0.1451, 0.1098, 0.0824],
         [0.0353, 0.0275, 0.0157,  ..., 0.1098, 0.0706, 0.0549]]]), 'mask': tensor([[0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3176, 0.2275, 0.1294,  ..., 0.0000, 0.0000, 0.0000],
         [0.3137, 0.2510, 0.1804,  ..., 0.0000, 0.0000, 0.0000],
         [0.3490, 0.3412, 0.2627,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3176, 0.2275, 0.1294,  ..., 0.0000, 0.0000, 0.0000],
         [0.3137, 0.2510, 0.1804,  ..., 0.0000, 0.0000, 0.0000],
         [0.3490, 0.3412, 0.2627,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3176, 0.2275, 0.1294,  ..., 0.0000, 0.0000, 0.0000],
         [0.3137, 0.2510, 0.1804,  ..., 0.0000, 0.0000, 0.0000],
         [0.3490, 0.3412, 0.2627,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1451, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.3137, 0.2118, 0.1255],
         [0.0000, 0.0000, 0.0000,  ..., 0.3843, 0.2431, 0.1294],
         ...,
         [0.1059, 0.0588, 0.0078,  ..., 0.0706, 0.0784, 0.1020],
         [0.0549, 0.0510, 0.0157,  ..., 0.0627, 0.0863, 0.0941],
         [0.0157, 0.0157, 0.0157,  ..., 0.0549, 0.0627, 0.0824]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1451, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.3137, 0.2118, 0.1255],
         [0.0000, 0.0000, 0.0000,  ..., 0.3843, 0.2431, 0.1294],
         ...,
         [0.1059, 0.0588, 0.0078,  ..., 0.0706, 0.0784, 0.1020],
         [0.0549, 0.0510, 0.0157,  ..., 0.0627, 0.0863, 0.0941],
         [0.0157, 0.0157, 0.0157,  ..., 0.0549, 0.0627, 0.0824]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1451, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.3137, 0.2118, 0.1255],
         [0.0000, 0.0000, 0.0000,  ..., 0.3843, 0.2431, 0.1294],
         ...,
         [0.1059, 0.0588, 0.0078,  ..., 0.0706, 0.0784, 0.1020],
         [0.0549, 0.0510, 0.0157,  ..., 0.0627, 0.0863, 0.0941],
         [0.0157, 0.0157, 0.0157,  ..., 0.0549, 0.0627, 0.0824]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0118, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0471, 0.0118, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.2667, 0.2863, 0.2118,  ..., 0.0980, 0.0824, 0.0824],
         [0.1725, 0.2667, 0.2471,  ..., 0.1176, 0.1176, 0.1176],
         [0.1647, 0.2314, 0.2314,  ..., 0.1569, 0.1569, 0.1373]],
        [[0.0118, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0471, 0.0118, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.2667, 0.2863, 0.2118,  ..., 0.0980, 0.0824, 0.0824],
         [0.1725, 0.2667, 0.2471,  ..., 0.1176, 0.1176, 0.1176],
         [0.1647, 0.2314, 0.2314,  ..., 0.1569, 0.1569, 0.1373]],
        [[0.0118, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0471, 0.0118, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.2667, 0.2863, 0.2118,  ..., 0.0980, 0.0824, 0.0824],
         [0.1725, 0.2667, 0.2471,  ..., 0.1176, 0.1176, 0.1176],
         [0.1647, 0.2314, 0.2314,  ..., 0.1569, 0.1569, 0.1373]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1961, 0.2157, 0.1725,  ..., 0.0000, 0.0000, 0.0039],
         [0.2196, 0.3098, 0.2510,  ..., 0.0000, 0.0000, 0.0000],
         [0.2471, 0.3255, 0.2745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1373, 0.1255, 0.1059,  ..., 0.0235, 0.0157, 0.0078],
         [0.1412, 0.1373, 0.1373,  ..., 0.0275, 0.0196, 0.0118],
         [0.1059, 0.1294, 0.1490,  ..., 0.0196, 0.0235, 0.0196]],
        [[0.1961, 0.2157, 0.1725,  ..., 0.0000, 0.0000, 0.0039],
         [0.2196, 0.3098, 0.2510,  ..., 0.0000, 0.0000, 0.0000],
         [0.2471, 0.3255, 0.2745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1373, 0.1255, 0.1059,  ..., 0.0235, 0.0157, 0.0078],
         [0.1412, 0.1373, 0.1373,  ..., 0.0275, 0.0196, 0.0118],
         [0.1059, 0.1294, 0.1490,  ..., 0.0196, 0.0235, 0.0196]],
        [[0.1961, 0.2157, 0.1725,  ..., 0.0000, 0.0000, 0.0039],
         [0.2196, 0.3098, 0.2510,  ..., 0.0000, 0.0000, 0.0000],
         [0.2471, 0.3255, 0.2745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1373, 0.1255, 0.1059,  ..., 0.0235, 0.0157, 0.0078],
         [0.1412, 0.1373, 0.1373,  ..., 0.0275, 0.0196, 0.0118],
         [0.1059, 0.1294, 0.1490,  ..., 0.0196, 0.0235, 0.0196]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0118, 0.0078, 0.0118,  ..., 0.0039, 0.0078, 0.0078],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0118, 0.0118],
         [0.0157, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0157],
         ...,
         [0.0196, 0.0196, 0.0235,  ..., 0.2196, 0.2353, 0.1569],
         [0.0196, 0.0196, 0.0275,  ..., 0.1647, 0.1882, 0.1294],
         [0.0275, 0.0314, 0.0314,  ..., 0.1176, 0.1255, 0.0980]],
        [[0.0118, 0.0078, 0.0118,  ..., 0.0039, 0.0078, 0.0078],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0118, 0.0118],
         [0.0157, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0157],
         ...,
         [0.0196, 0.0196, 0.0235,  ..., 0.2196, 0.2353, 0.1569],
         [0.0196, 0.0196, 0.0275,  ..., 0.1647, 0.1882, 0.1294],
         [0.0275, 0.0314, 0.0314,  ..., 0.1176, 0.1255, 0.0980]],
        [[0.0118, 0.0078, 0.0118,  ..., 0.0039, 0.0078, 0.0078],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0118, 0.0118],
         [0.0157, 0.0118, 0.0118,  ..., 0.0118, 0.0118, 0.0157],
         ...,
         [0.0196, 0.0196, 0.0235,  ..., 0.2196, 0.2353, 0.1569],
         [0.0196, 0.0196, 0.0275,  ..., 0.1647, 0.1882, 0.1294],
         [0.0275, 0.0314, 0.0314,  ..., 0.1176, 0.1255, 0.0980]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0275, 0.0314, 0.0431,  ..., 0.0235, 0.0353, 0.0549],
         [0.0314, 0.0471, 0.0627,  ..., 0.0353, 0.0431, 0.0745],
         [0.0353, 0.0510, 0.0745,  ..., 0.0392, 0.0588, 0.0980],
         ...,
         [0.0157, 0.0039, 0.0000,  ..., 0.0392, 0.0392, 0.0431],
         [0.0275, 0.0039, 0.0000,  ..., 0.0588, 0.0745, 0.0745],
         [0.0353, 0.0078, 0.0000,  ..., 0.0824, 0.1059, 0.1176]],
        [[0.0275, 0.0314, 0.0431,  ..., 0.0235, 0.0353, 0.0549],
         [0.0314, 0.0471, 0.0627,  ..., 0.0353, 0.0431, 0.0745],
         [0.0353, 0.0510, 0.0745,  ..., 0.0392, 0.0588, 0.0980],
         ...,
         [0.0157, 0.0039, 0.0000,  ..., 0.0392, 0.0392, 0.0431],
         [0.0275, 0.0039, 0.0000,  ..., 0.0588, 0.0745, 0.0745],
         [0.0353, 0.0078, 0.0000,  ..., 0.0824, 0.1059, 0.1176]],
        [[0.0275, 0.0314, 0.0431,  ..., 0.0235, 0.0353, 0.0549],
         [0.0314, 0.0471, 0.0627,  ..., 0.0353, 0.0431, 0.0745],
         [0.0353, 0.0510, 0.0745,  ..., 0.0392, 0.0588, 0.0980],
         ...,
         [0.0157, 0.0039, 0.0000,  ..., 0.0392, 0.0392, 0.0431],
         [0.0275, 0.0039, 0.0000,  ..., 0.0588, 0.0745, 0.0745],
         [0.0353, 0.0078, 0.0000,  ..., 0.0824, 0.1059, 0.1176]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0549, 0.0510, 0.0471],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0392, 0.0392],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0235, 0.0314],
         ...,
         [0.1373, 0.2235, 0.2510,  ..., 0.0078, 0.0039, 0.0039],
         [0.1137, 0.1333, 0.1882,  ..., 0.0039, 0.0000, 0.0039],
         [0.0824, 0.0863, 0.1020,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0549, 0.0510, 0.0471],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0392, 0.0392],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0235, 0.0314],
         ...,
         [0.1373, 0.2235, 0.2510,  ..., 0.0078, 0.0039, 0.0039],
         [0.1137, 0.1333, 0.1882,  ..., 0.0039, 0.0000, 0.0039],
         [0.0824, 0.0863, 0.1020,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0549, 0.0510, 0.0471],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0392, 0.0392],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0235, 0.0314],
         ...,
         [0.1373, 0.2235, 0.2510,  ..., 0.0078, 0.0039, 0.0039],
         [0.1137, 0.1333, 0.1882,  ..., 0.0039, 0.0000, 0.0039],
         [0.0824, 0.0863, 0.1020,  ..., 0.0039, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.3137, 0.3059, 0.2627,  ..., 0.0078, 0.0078, 0.0078],
         [0.2706, 0.3216, 0.3451,  ..., 0.0078, 0.0078, 0.0078],
         [0.2471, 0.3451, 0.4863,  ..., 0.0118, 0.0039, 0.0078],
         ...,
         [0.0980, 0.0784, 0.1020,  ..., 0.0157, 0.0588, 0.1137],
         [0.0784, 0.0745, 0.0980,  ..., 0.0078, 0.0196, 0.0588],
         [0.0627, 0.0706, 0.0902,  ..., 0.0039, 0.0118, 0.0157]],
        [[0.3137, 0.3059, 0.2627,  ..., 0.0078, 0.0078, 0.0078],
         [0.2706, 0.3216, 0.3451,  ..., 0.0078, 0.0078, 0.0078],
         [0.2471, 0.3451, 0.4863,  ..., 0.0118, 0.0039, 0.0078],
         ...,
         [0.0980, 0.0784, 0.1020,  ..., 0.0157, 0.0588, 0.1137],
         [0.0784, 0.0745, 0.0980,  ..., 0.0078, 0.0196, 0.0588],
         [0.0627, 0.0706, 0.0902,  ..., 0.0039, 0.0118, 0.0157]],
        [[0.3137, 0.3059, 0.2627,  ..., 0.0078, 0.0078, 0.0078],
         [0.2706, 0.3216, 0.3451,  ..., 0.0078, 0.0078, 0.0078],
         [0.2471, 0.3451, 0.4863,  ..., 0.0118, 0.0039, 0.0078],
         ...,
         [0.0980, 0.0784, 0.1020,  ..., 0.0157, 0.0588, 0.1137],
         [0.0784, 0.0745, 0.0980,  ..., 0.0078, 0.0196, 0.0588],
         [0.0627, 0.0706, 0.0902,  ..., 0.0039, 0.0118, 0.0157]]]), 'mask': tensor([[1., 1., 0.,  ..., 0., 0., 0.],
        [1., 1., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0196, 0.0078, 0.0000,  ..., 0.2431, 0.1333, 0.0902],
         [0.0118, 0.0039, 0.0000,  ..., 0.2078, 0.1137, 0.0784],
         [0.0118, 0.0039, 0.0000,  ..., 0.1529, 0.1098, 0.1020],
         ...,
         [0.0118, 0.0118, 0.0235,  ..., 0.0157, 0.0392, 0.1176],
         [0.0078, 0.0118, 0.0196,  ..., 0.0353, 0.0745, 0.1686],
         [0.0078, 0.0118, 0.0196,  ..., 0.0667, 0.1294, 0.2941]],
        [[0.0196, 0.0078, 0.0000,  ..., 0.2431, 0.1333, 0.0902],
         [0.0118, 0.0039, 0.0000,  ..., 0.2078, 0.1137, 0.0784],
         [0.0118, 0.0039, 0.0000,  ..., 0.1529, 0.1098, 0.1020],
         ...,
         [0.0118, 0.0118, 0.0235,  ..., 0.0157, 0.0392, 0.1176],
         [0.0078, 0.0118, 0.0196,  ..., 0.0353, 0.0745, 0.1686],
         [0.0078, 0.0118, 0.0196,  ..., 0.0667, 0.1294, 0.2941]],
        [[0.0196, 0.0078, 0.0000,  ..., 0.2431, 0.1333, 0.0902],
         [0.0118, 0.0039, 0.0000,  ..., 0.2078, 0.1137, 0.0784],
         [0.0118, 0.0039, 0.0000,  ..., 0.1529, 0.1098, 0.1020],
         ...,
         [0.0118, 0.0118, 0.0235,  ..., 0.0157, 0.0392, 0.1176],
         [0.0078, 0.0118, 0.0196,  ..., 0.0353, 0.0745, 0.1686],
         [0.0078, 0.0118, 0.0196,  ..., 0.0667, 0.1294, 0.2941]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0784, 0.0431, 0.0196,  ..., 0.0353, 0.0196, 0.0157],
         [0.0627, 0.0314, 0.0118,  ..., 0.0235, 0.0157, 0.0118],
         [0.0627, 0.0275, 0.0118,  ..., 0.0353, 0.0235, 0.0118],
         ...,
         [0.0549, 0.0627, 0.0588,  ..., 0.0196, 0.0157, 0.0118],
         [0.0431, 0.0510, 0.0431,  ..., 0.0235, 0.0196, 0.0118],
         [0.0275, 0.0353, 0.0353,  ..., 0.0235, 0.0275, 0.0157]],
        [[0.0784, 0.0431, 0.0196,  ..., 0.0353, 0.0196, 0.0157],
         [0.0627, 0.0314, 0.0118,  ..., 0.0235, 0.0157, 0.0118],
         [0.0627, 0.0275, 0.0118,  ..., 0.0353, 0.0235, 0.0118],
         ...,
         [0.0549, 0.0627, 0.0588,  ..., 0.0196, 0.0157, 0.0118],
         [0.0431, 0.0510, 0.0431,  ..., 0.0235, 0.0196, 0.0118],
         [0.0275, 0.0353, 0.0353,  ..., 0.0235, 0.0275, 0.0157]],
        [[0.0784, 0.0431, 0.0196,  ..., 0.0353, 0.0196, 0.0157],
         [0.0627, 0.0314, 0.0118,  ..., 0.0235, 0.0157, 0.0118],
         [0.0627, 0.0275, 0.0118,  ..., 0.0353, 0.0235, 0.0118],
         ...,
         [0.0549, 0.0627, 0.0588,  ..., 0.0196, 0.0157, 0.0118],
         [0.0431, 0.0510, 0.0431,  ..., 0.0235, 0.0196, 0.0118],
         [0.0275, 0.0353, 0.0353,  ..., 0.0235, 0.0275, 0.0157]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.3569, 0.4353, 0.5176,  ..., 0.0000, 0.0000, 0.0000],
         [0.3647, 0.4588, 0.5020,  ..., 0.0000, 0.0000, 0.0000],
         [0.4902, 0.7059, 0.6549,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0431, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.0392, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.1412, 0.0627, 0.0353]],
        [[0.3569, 0.4353, 0.5176,  ..., 0.0000, 0.0000, 0.0000],
         [0.3647, 0.4588, 0.5020,  ..., 0.0000, 0.0000, 0.0000],
         [0.4902, 0.7059, 0.6549,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0431, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.0392, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.1412, 0.0627, 0.0353]],
        [[0.3569, 0.4353, 0.5176,  ..., 0.0000, 0.0000, 0.0000],
         [0.3647, 0.4588, 0.5020,  ..., 0.0000, 0.0000, 0.0000],
         [0.4902, 0.7059, 0.6549,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0431, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0941, 0.0392, 0.0235],
         [0.0000, 0.0000, 0.0000,  ..., 0.1412, 0.0627, 0.0353]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1490, 0.0588, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.0353, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0196, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0275, 0.1412, 0.2824,  ..., 0.0039, 0.0039, 0.0078],
         [0.0471, 0.1451, 0.1765,  ..., 0.0039, 0.0078, 0.0078],
         [0.0902, 0.2000, 0.1882,  ..., 0.0039, 0.0039, 0.0078]],
        [[0.1490, 0.0588, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.0353, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0196, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0275, 0.1412, 0.2824,  ..., 0.0039, 0.0039, 0.0078],
         [0.0471, 0.1451, 0.1765,  ..., 0.0039, 0.0078, 0.0078],
         [0.0902, 0.2000, 0.1882,  ..., 0.0039, 0.0039, 0.0078]],
        [[0.1490, 0.0588, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.0353, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0196, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0275, 0.1412, 0.2824,  ..., 0.0039, 0.0039, 0.0078],
         [0.0471, 0.1451, 0.1765,  ..., 0.0039, 0.0078, 0.0078],
         [0.0902, 0.2000, 0.1882,  ..., 0.0039, 0.0039, 0.0078]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
Epoch 36/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.49img/s, loss (batch)=1.04]
Epoch 37/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 37/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.61img/s, loss (batch)=0.778]
Epoch 38/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 38/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.99img/s, loss (batch)=0.818]
Epoch 39/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 39/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.65img/s, loss (batch)=1.16]
Epoch 40/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 40/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.76img/s, loss (batch)=0.897]
sample {'image': tensor([[[0.2000, 0.2000, 0.2000,  ..., 0.0000, 0.0000, 0.0039],
         [0.1333, 0.1490, 0.1569,  ..., 0.0118, 0.0275, 0.0314],
         [0.0784, 0.0941, 0.1176,  ..., 0.0275, 0.0745, 0.0941],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0078, 0.0431],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0275, 0.0863],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0667, 0.1216]],
        [[0.2000, 0.2000, 0.2000,  ..., 0.0000, 0.0000, 0.0039],
         [0.1333, 0.1490, 0.1569,  ..., 0.0118, 0.0275, 0.0314],
         [0.0784, 0.0941, 0.1176,  ..., 0.0275, 0.0745, 0.0941],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0078, 0.0431],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0275, 0.0863],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0667, 0.1216]],
        [[0.2000, 0.2000, 0.2000,  ..., 0.0000, 0.0000, 0.0039],
         [0.1333, 0.1490, 0.1569,  ..., 0.0118, 0.0275, 0.0314],
         [0.0784, 0.0941, 0.1176,  ..., 0.0275, 0.0745, 0.0941],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0078, 0.0431],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0275, 0.0863],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0667, 0.1216]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1686, 0.1843, 0.1608,  ..., 0.0235, 0.0157, 0.0157],
         [0.1098, 0.1137, 0.1255,  ..., 0.0235, 0.0157, 0.0157],
         [0.0745, 0.0745, 0.0706,  ..., 0.0118, 0.0078, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.0745, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.0549, 0.0392, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0196]],
        [[0.1686, 0.1843, 0.1608,  ..., 0.0235, 0.0157, 0.0157],
         [0.1098, 0.1137, 0.1255,  ..., 0.0235, 0.0157, 0.0157],
         [0.0745, 0.0745, 0.0706,  ..., 0.0118, 0.0078, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.0745, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.0549, 0.0392, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0196]],
        [[0.1686, 0.1843, 0.1608,  ..., 0.0235, 0.0157, 0.0157],
         [0.1098, 0.1137, 0.1255,  ..., 0.0235, 0.0157, 0.0157],
         [0.0745, 0.0745, 0.0706,  ..., 0.0118, 0.0078, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.0745, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.0549, 0.0392, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0196]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0078, 0.0275,  ..., 0.0118, 0.0078, 0.0078],
         [0.0039, 0.0118, 0.0275,  ..., 0.0118, 0.0118, 0.0118],
         [0.0039, 0.0078, 0.0157,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0980, 0.0941, 0.0784,  ..., 0.0118, 0.0275, 0.1294],
         [0.1294, 0.1294, 0.1529,  ..., 0.0157, 0.0588, 0.1686],
         [0.1843, 0.1804, 0.2196,  ..., 0.0314, 0.1020, 0.1647]],
        [[0.0039, 0.0078, 0.0275,  ..., 0.0118, 0.0078, 0.0078],
         [0.0039, 0.0118, 0.0275,  ..., 0.0118, 0.0118, 0.0118],
         [0.0039, 0.0078, 0.0157,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0980, 0.0941, 0.0784,  ..., 0.0118, 0.0275, 0.1294],
         [0.1294, 0.1294, 0.1529,  ..., 0.0157, 0.0588, 0.1686],
         [0.1843, 0.1804, 0.2196,  ..., 0.0314, 0.1020, 0.1647]],
        [[0.0039, 0.0078, 0.0275,  ..., 0.0118, 0.0078, 0.0078],
         [0.0039, 0.0118, 0.0275,  ..., 0.0118, 0.0118, 0.0118],
         [0.0039, 0.0078, 0.0157,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0980, 0.0941, 0.0784,  ..., 0.0118, 0.0275, 0.1294],
         [0.1294, 0.1294, 0.1529,  ..., 0.0157, 0.0588, 0.1686],
         [0.1843, 0.1804, 0.2196,  ..., 0.0314, 0.1020, 0.1647]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.5647, 0.8431, 0.5529,  ..., 0.2196, 0.0941, 0.0353],
         [0.6588, 0.7804, 0.5725,  ..., 0.2941, 0.1608, 0.0824],
         [0.9098, 0.8588, 0.5216,  ..., 0.3333, 0.2549, 0.2196]],
        [[0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.5647, 0.8431, 0.5529,  ..., 0.2196, 0.0941, 0.0353],
         [0.6588, 0.7804, 0.5725,  ..., 0.2941, 0.1608, 0.0824],
         [0.9098, 0.8588, 0.5216,  ..., 0.3333, 0.2549, 0.2196]],
        [[0.0039, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.5647, 0.8431, 0.5529,  ..., 0.2196, 0.0941, 0.0353],
         [0.6588, 0.7804, 0.5725,  ..., 0.2941, 0.1608, 0.0824],
         [0.9098, 0.8588, 0.5216,  ..., 0.3333, 0.2549, 0.2196]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.3922, 0.5569, 0.6314,  ..., 0.0039, 0.0039, 0.0078],
         [0.2863, 0.4431, 0.4157,  ..., 0.0078, 0.0078, 0.0118],
         [0.1686, 0.2471, 0.2549,  ..., 0.0314, 0.0314, 0.0275],
         ...,
         [0.1176, 0.1882, 0.2549,  ..., 0.0039, 0.0078, 0.0118],
         [0.0902, 0.1333, 0.1686,  ..., 0.0078, 0.0196, 0.0353],
         [0.0980, 0.1098, 0.1412,  ..., 0.0196, 0.0392, 0.0627]],
        [[0.3922, 0.5569, 0.6314,  ..., 0.0039, 0.0039, 0.0078],
         [0.2863, 0.4431, 0.4157,  ..., 0.0078, 0.0078, 0.0118],
         [0.1686, 0.2471, 0.2549,  ..., 0.0314, 0.0314, 0.0275],
         ...,
         [0.1176, 0.1882, 0.2549,  ..., 0.0039, 0.0078, 0.0118],
         [0.0902, 0.1333, 0.1686,  ..., 0.0078, 0.0196, 0.0353],
         [0.0980, 0.1098, 0.1412,  ..., 0.0196, 0.0392, 0.0627]],
        [[0.3922, 0.5569, 0.6314,  ..., 0.0039, 0.0039, 0.0078],
         [0.2863, 0.4431, 0.4157,  ..., 0.0078, 0.0078, 0.0118],
         [0.1686, 0.2471, 0.2549,  ..., 0.0314, 0.0314, 0.0275],
         ...,
         [0.1176, 0.1882, 0.2549,  ..., 0.0039, 0.0078, 0.0118],
         [0.0902, 0.1333, 0.1686,  ..., 0.0078, 0.0196, 0.0353],
         [0.0980, 0.1098, 0.1412,  ..., 0.0196, 0.0392, 0.0627]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0392, 0.0353, 0.0353,  ..., 0.0627, 0.0706, 0.0980],
         [0.0275, 0.0275, 0.0235,  ..., 0.0275, 0.0275, 0.0314],
         [0.0235, 0.0196, 0.0196,  ..., 0.0196, 0.0196, 0.0157],
         ...,
         [0.1137, 0.1137, 0.1412,  ..., 0.0627, 0.0314, 0.0275],
         [0.1098, 0.1176, 0.1529,  ..., 0.0353, 0.0196, 0.0235],
         [0.0706, 0.0863, 0.1725,  ..., 0.0235, 0.0196, 0.0196]],
        [[0.0392, 0.0353, 0.0353,  ..., 0.0627, 0.0706, 0.0980],
         [0.0275, 0.0275, 0.0235,  ..., 0.0275, 0.0275, 0.0314],
         [0.0235, 0.0196, 0.0196,  ..., 0.0196, 0.0196, 0.0157],
         ...,
         [0.1137, 0.1137, 0.1412,  ..., 0.0627, 0.0314, 0.0275],
         [0.1098, 0.1176, 0.1529,  ..., 0.0353, 0.0196, 0.0235],
         [0.0706, 0.0863, 0.1725,  ..., 0.0235, 0.0196, 0.0196]],
        [[0.0392, 0.0353, 0.0353,  ..., 0.0627, 0.0706, 0.0980],
         [0.0275, 0.0275, 0.0235,  ..., 0.0275, 0.0275, 0.0314],
         [0.0235, 0.0196, 0.0196,  ..., 0.0196, 0.0196, 0.0157],
         ...,
         [0.1137, 0.1137, 0.1412,  ..., 0.0627, 0.0314, 0.0275],
         [0.1098, 0.1176, 0.1529,  ..., 0.0353, 0.0196, 0.0235],
         [0.0706, 0.0863, 0.1725,  ..., 0.0235, 0.0196, 0.0196]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0118, 0.0078, 0.0039,  ..., 0.1961, 0.2549, 0.3529],
         [0.0078, 0.0039, 0.0039,  ..., 0.1843, 0.2431, 0.3098],
         [0.0078, 0.0039, 0.0039,  ..., 0.1882, 0.2471, 0.3294],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0314, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.1020, 0.0941, 0.0627,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0118, 0.0078, 0.0039,  ..., 0.1961, 0.2549, 0.3529],
         [0.0078, 0.0039, 0.0039,  ..., 0.1843, 0.2431, 0.3098],
         [0.0078, 0.0039, 0.0039,  ..., 0.1882, 0.2471, 0.3294],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0314, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.1020, 0.0941, 0.0627,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0118, 0.0078, 0.0039,  ..., 0.1961, 0.2549, 0.3529],
         [0.0078, 0.0039, 0.0039,  ..., 0.1843, 0.2431, 0.3098],
         [0.0078, 0.0039, 0.0039,  ..., 0.1882, 0.2471, 0.3294],
         ...,
         [0.0078, 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0314, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.1020, 0.0941, 0.0627,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0118,  ..., 0.1882, 0.3020, 0.4196],
         [0.0000, 0.0039, 0.0078,  ..., 0.2431, 0.4000, 0.5176],
         [0.0000, 0.0039, 0.0118,  ..., 0.2314, 0.4078, 0.5216],
         ...,
         [0.1098, 0.0471, 0.0235,  ..., 0.0000, 0.0078, 0.0118],
         [0.0157, 0.0275, 0.0157,  ..., 0.0000, 0.0118, 0.0157],
         [0.0196, 0.0196, 0.0078,  ..., 0.0039, 0.0157, 0.0275]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.1882, 0.3020, 0.4196],
         [0.0000, 0.0039, 0.0078,  ..., 0.2431, 0.4000, 0.5176],
         [0.0000, 0.0039, 0.0118,  ..., 0.2314, 0.4078, 0.5216],
         ...,
         [0.1098, 0.0471, 0.0235,  ..., 0.0000, 0.0078, 0.0118],
         [0.0157, 0.0275, 0.0157,  ..., 0.0000, 0.0118, 0.0157],
         [0.0196, 0.0196, 0.0078,  ..., 0.0039, 0.0157, 0.0275]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.1882, 0.3020, 0.4196],
         [0.0000, 0.0039, 0.0078,  ..., 0.2431, 0.4000, 0.5176],
         [0.0000, 0.0039, 0.0118,  ..., 0.2314, 0.4078, 0.5216],
         ...,
         [0.1098, 0.0471, 0.0235,  ..., 0.0000, 0.0078, 0.0118],
         [0.0157, 0.0275, 0.0157,  ..., 0.0000, 0.0118, 0.0157],
         [0.0196, 0.0196, 0.0078,  ..., 0.0039, 0.0157, 0.0275]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.2706, 0.2235, 0.1804,  ..., 0.0980, 0.2118, 0.2549],
         [0.2196, 0.1765, 0.1529,  ..., 0.0706, 0.1451, 0.1882],
         [0.1882, 0.1647, 0.1569,  ..., 0.0549, 0.1176, 0.1176],
         ...,
         [0.1098, 0.0706, 0.0549,  ..., 0.0000, 0.0000, 0.0039],
         [0.0863, 0.0667, 0.0745,  ..., 0.0000, 0.0000, 0.0039],
         [0.0824, 0.0627, 0.0706,  ..., 0.0039, 0.0039, 0.0078]],
        [[0.2706, 0.2235, 0.1804,  ..., 0.0980, 0.2118, 0.2549],
         [0.2196, 0.1765, 0.1529,  ..., 0.0706, 0.1451, 0.1882],
         [0.1882, 0.1647, 0.1569,  ..., 0.0549, 0.1176, 0.1176],
         ...,
         [0.1098, 0.0706, 0.0549,  ..., 0.0000, 0.0000, 0.0039],
         [0.0863, 0.0667, 0.0745,  ..., 0.0000, 0.0000, 0.0039],
         [0.0824, 0.0627, 0.0706,  ..., 0.0039, 0.0039, 0.0078]],
        [[0.2706, 0.2235, 0.1804,  ..., 0.0980, 0.2118, 0.2549],
         [0.2196, 0.1765, 0.1529,  ..., 0.0706, 0.1451, 0.1882],
         [0.1882, 0.1647, 0.1569,  ..., 0.0549, 0.1176, 0.1176],
         ...,
         [0.1098, 0.0706, 0.0549,  ..., 0.0000, 0.0000, 0.0039],
         [0.0863, 0.0667, 0.0745,  ..., 0.0000, 0.0000, 0.0039],
         [0.0824, 0.0627, 0.0706,  ..., 0.0039, 0.0039, 0.0078]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0667, 0.0275, 0.0235,  ..., 0.0039, 0.0078, 0.0078],
         [0.0314, 0.0157, 0.0157,  ..., 0.0039, 0.0078, 0.0078],
         [0.0196, 0.0118, 0.0157,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0667, 0.0275, 0.0235,  ..., 0.0039, 0.0078, 0.0078],
         [0.0314, 0.0157, 0.0157,  ..., 0.0039, 0.0078, 0.0078],
         [0.0196, 0.0118, 0.0157,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0667, 0.0275, 0.0235,  ..., 0.0039, 0.0078, 0.0078],
         [0.0314, 0.0157, 0.0157,  ..., 0.0039, 0.0078, 0.0078],
         [0.0196, 0.0118, 0.0157,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039]]]), 'mask': tensor([[0., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0078,  ..., 0.7882, 0.5333, 0.1451],
         [0.0039, 0.0078, 0.0078,  ..., 0.7843, 0.8078, 0.4039],
         [0.0039, 0.0078, 0.0118,  ..., 0.5529, 0.8000, 0.7765],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0039,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0039, 0.0039, 0.0078,  ..., 0.7882, 0.5333, 0.1451],
         [0.0039, 0.0078, 0.0078,  ..., 0.7843, 0.8078, 0.4039],
         [0.0039, 0.0078, 0.0118,  ..., 0.5529, 0.8000, 0.7765],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0039,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0039, 0.0039, 0.0078,  ..., 0.7882, 0.5333, 0.1451],
         [0.0039, 0.0078, 0.0078,  ..., 0.7843, 0.8078, 0.4039],
         [0.0039, 0.0078, 0.0118,  ..., 0.5529, 0.8000, 0.7765],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0039,  ..., 0.0039, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 1., 0., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0118, 0.0118, 0.0078,  ..., 0.0314, 0.0118, 0.0078],
         [0.0157, 0.0118, 0.0118,  ..., 0.0353, 0.0118, 0.0039],
         [0.0157, 0.0118, 0.0118,  ..., 0.0314, 0.0157, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0078,  ..., 0.0235, 0.0118, 0.0078],
         [0.0039, 0.0039, 0.0078,  ..., 0.0118, 0.0078, 0.0039],
         [0.0078, 0.0078, 0.0000,  ..., 0.0078, 0.0039, 0.0039]],
        [[0.0118, 0.0118, 0.0078,  ..., 0.0314, 0.0118, 0.0078],
         [0.0157, 0.0118, 0.0118,  ..., 0.0353, 0.0118, 0.0039],
         [0.0157, 0.0118, 0.0118,  ..., 0.0314, 0.0157, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0078,  ..., 0.0235, 0.0118, 0.0078],
         [0.0039, 0.0039, 0.0078,  ..., 0.0118, 0.0078, 0.0039],
         [0.0078, 0.0078, 0.0000,  ..., 0.0078, 0.0039, 0.0039]],
        [[0.0118, 0.0118, 0.0078,  ..., 0.0314, 0.0118, 0.0078],
         [0.0157, 0.0118, 0.0118,  ..., 0.0353, 0.0118, 0.0039],
         [0.0157, 0.0118, 0.0118,  ..., 0.0314, 0.0157, 0.0039],
         ...,
         [0.0039, 0.0039, 0.0078,  ..., 0.0235, 0.0118, 0.0078],
         [0.0039, 0.0039, 0.0078,  ..., 0.0118, 0.0078, 0.0039],
         [0.0078, 0.0078, 0.0000,  ..., 0.0078, 0.0039, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.5373, 0.4902, 0.3529,  ..., 0.3176, 0.1451, 0.0667],
         [0.4000, 0.3137, 0.2314,  ..., 0.1569, 0.0627, 0.0314],
         [0.1765, 0.1647, 0.1529,  ..., 0.0627, 0.0314, 0.0235],
         ...,
         [0.4510, 0.2824, 0.1333,  ..., 0.0353, 0.0275, 0.0314],
         [0.6353, 0.3373, 0.1333,  ..., 0.0549, 0.0392, 0.0431],
         [0.6667, 0.3490, 0.1451,  ..., 0.0980, 0.0824, 0.0863]],
        [[0.5373, 0.4902, 0.3529,  ..., 0.3176, 0.1451, 0.0667],
         [0.4000, 0.3137, 0.2314,  ..., 0.1569, 0.0627, 0.0314],
         [0.1765, 0.1647, 0.1529,  ..., 0.0627, 0.0314, 0.0235],
         ...,
         [0.4510, 0.2824, 0.1333,  ..., 0.0353, 0.0275, 0.0314],
         [0.6353, 0.3373, 0.1333,  ..., 0.0549, 0.0392, 0.0431],
         [0.6667, 0.3490, 0.1451,  ..., 0.0980, 0.0824, 0.0863]],
        [[0.5373, 0.4902, 0.3529,  ..., 0.3176, 0.1451, 0.0667],
         [0.4000, 0.3137, 0.2314,  ..., 0.1569, 0.0627, 0.0314],
         [0.1765, 0.1647, 0.1529,  ..., 0.0627, 0.0314, 0.0235],
         ...,
         [0.4510, 0.2824, 0.1333,  ..., 0.0353, 0.0275, 0.0314],
         [0.6353, 0.3373, 0.1333,  ..., 0.0549, 0.0392, 0.0431],
         [0.6667, 0.3490, 0.1451,  ..., 0.0980, 0.0824, 0.0863]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0078, 0.0078,  ..., 0.2196, 0.2353, 0.3098],
         [0.0039, 0.0078, 0.0039,  ..., 0.3412, 0.3255, 0.3137],
         [0.0078, 0.0078, 0.0078,  ..., 0.6275, 0.5255, 0.3137],
         ...,
         [0.0549, 0.0471, 0.0392,  ..., 0.0353, 0.0549, 0.0784],
         [0.0784, 0.0667, 0.0549,  ..., 0.0275, 0.0549, 0.0863],
         [0.1294, 0.0980, 0.0667,  ..., 0.0118, 0.0549, 0.0902]],
        [[0.0039, 0.0078, 0.0078,  ..., 0.2196, 0.2353, 0.3098],
         [0.0039, 0.0078, 0.0039,  ..., 0.3412, 0.3255, 0.3137],
         [0.0078, 0.0078, 0.0078,  ..., 0.6275, 0.5255, 0.3137],
         ...,
         [0.0549, 0.0471, 0.0392,  ..., 0.0353, 0.0549, 0.0784],
         [0.0784, 0.0667, 0.0549,  ..., 0.0275, 0.0549, 0.0863],
         [0.1294, 0.0980, 0.0667,  ..., 0.0118, 0.0549, 0.0902]],
        [[0.0039, 0.0078, 0.0078,  ..., 0.2196, 0.2353, 0.3098],
         [0.0039, 0.0078, 0.0039,  ..., 0.3412, 0.3255, 0.3137],
         [0.0078, 0.0078, 0.0078,  ..., 0.6275, 0.5255, 0.3137],
         ...,
         [0.0549, 0.0471, 0.0392,  ..., 0.0353, 0.0549, 0.0784],
         [0.0784, 0.0667, 0.0549,  ..., 0.0275, 0.0549, 0.0863],
         [0.1294, 0.0980, 0.0667,  ..., 0.0118, 0.0549, 0.0902]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0510, 0.0392, 0.0275],
         [0.0039, 0.0039, 0.0000,  ..., 0.0784, 0.0510, 0.0314],
         [0.0039, 0.0000, 0.0000,  ..., 0.0863, 0.0510, 0.0314],
         ...,
         [0.0118, 0.0118, 0.0118,  ..., 0.1412, 0.1294, 0.1373],
         [0.0078, 0.0078, 0.0078,  ..., 0.1216, 0.1255, 0.1294],
         [0.0078, 0.0078, 0.0078,  ..., 0.1020, 0.1098, 0.1098]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0510, 0.0392, 0.0275],
         [0.0039, 0.0039, 0.0000,  ..., 0.0784, 0.0510, 0.0314],
         [0.0039, 0.0000, 0.0000,  ..., 0.0863, 0.0510, 0.0314],
         ...,
         [0.0118, 0.0118, 0.0118,  ..., 0.1412, 0.1294, 0.1373],
         [0.0078, 0.0078, 0.0078,  ..., 0.1216, 0.1255, 0.1294],
         [0.0078, 0.0078, 0.0078,  ..., 0.1020, 0.1098, 0.1098]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0510, 0.0392, 0.0275],
         [0.0039, 0.0039, 0.0000,  ..., 0.0784, 0.0510, 0.0314],
         [0.0039, 0.0000, 0.0000,  ..., 0.0863, 0.0510, 0.0314],
         ...,
         [0.0118, 0.0118, 0.0118,  ..., 0.1412, 0.1294, 0.1373],
         [0.0078, 0.0078, 0.0078,  ..., 0.1216, 0.1255, 0.1294],
         [0.0078, 0.0078, 0.0078,  ..., 0.1020, 0.1098, 0.1098]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1176, 0.1137, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0941, 0.1137, 0.1333,  ..., 0.0000, 0.0000, 0.0039],
         [0.0784, 0.1529, 0.2549,  ..., 0.0000, 0.0078, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.3216, 0.1412, 0.0980],
         [0.0000, 0.0039, 0.0078,  ..., 0.4980, 0.1961, 0.1216],
         [0.0039, 0.0078, 0.0118,  ..., 0.4078, 0.2118, 0.1333]],
        [[0.1176, 0.1137, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0941, 0.1137, 0.1333,  ..., 0.0000, 0.0000, 0.0039],
         [0.0784, 0.1529, 0.2549,  ..., 0.0000, 0.0078, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.3216, 0.1412, 0.0980],
         [0.0000, 0.0039, 0.0078,  ..., 0.4980, 0.1961, 0.1216],
         [0.0039, 0.0078, 0.0118,  ..., 0.4078, 0.2118, 0.1333]],
        [[0.1176, 0.1137, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0941, 0.1137, 0.1333,  ..., 0.0000, 0.0000, 0.0039],
         [0.0784, 0.1529, 0.2549,  ..., 0.0000, 0.0078, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.3216, 0.1412, 0.0980],
         [0.0000, 0.0039, 0.0078,  ..., 0.4980, 0.1961, 0.1216],
         [0.0039, 0.0078, 0.0118,  ..., 0.4078, 0.2118, 0.1333]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1020, 0.0980, 0.1020,  ..., 0.0157, 0.0275, 0.0549],
         [0.1020, 0.0863, 0.0627,  ..., 0.0314, 0.0510, 0.0588],
         [0.1098, 0.0706, 0.0353,  ..., 0.0471, 0.0627, 0.0667],
         ...,
         [0.0549, 0.0510, 0.0510,  ..., 0.0039, 0.0039, 0.0039],
         [0.1137, 0.1137, 0.1020,  ..., 0.0000, 0.0000, 0.0039],
         [0.1961, 0.1843, 0.1882,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1020, 0.0980, 0.1020,  ..., 0.0157, 0.0275, 0.0549],
         [0.1020, 0.0863, 0.0627,  ..., 0.0314, 0.0510, 0.0588],
         [0.1098, 0.0706, 0.0353,  ..., 0.0471, 0.0627, 0.0667],
         ...,
         [0.0549, 0.0510, 0.0510,  ..., 0.0039, 0.0039, 0.0039],
         [0.1137, 0.1137, 0.1020,  ..., 0.0000, 0.0000, 0.0039],
         [0.1961, 0.1843, 0.1882,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1020, 0.0980, 0.1020,  ..., 0.0157, 0.0275, 0.0549],
         [0.1020, 0.0863, 0.0627,  ..., 0.0314, 0.0510, 0.0588],
         [0.1098, 0.0706, 0.0353,  ..., 0.0471, 0.0627, 0.0667],
         ...,
         [0.0549, 0.0510, 0.0510,  ..., 0.0039, 0.0039, 0.0039],
         [0.1137, 0.1137, 0.1020,  ..., 0.0000, 0.0000, 0.0039],
         [0.1961, 0.1843, 0.1882,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0118, 0.0353,  ..., 0.0039, 0.0078, 0.0078],
         [0.0039, 0.0118, 0.0275,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0118, 0.0196,  ..., 0.0078, 0.0118, 0.0196],
         ...,
         [0.0471, 0.1137, 0.3137,  ..., 0.0039, 0.0157, 0.0235],
         [0.0902, 0.1451, 0.3333,  ..., 0.0039, 0.0078, 0.0157],
         [0.1255, 0.1294, 0.2118,  ..., 0.0000, 0.0078, 0.0235]],
        [[0.0039, 0.0118, 0.0353,  ..., 0.0039, 0.0078, 0.0078],
         [0.0039, 0.0118, 0.0275,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0118, 0.0196,  ..., 0.0078, 0.0118, 0.0196],
         ...,
         [0.0471, 0.1137, 0.3137,  ..., 0.0039, 0.0157, 0.0235],
         [0.0902, 0.1451, 0.3333,  ..., 0.0039, 0.0078, 0.0157],
         [0.1255, 0.1294, 0.2118,  ..., 0.0000, 0.0078, 0.0235]],
        [[0.0039, 0.0118, 0.0353,  ..., 0.0039, 0.0078, 0.0078],
         [0.0039, 0.0118, 0.0275,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0118, 0.0196,  ..., 0.0078, 0.0118, 0.0196],
         ...,
         [0.0471, 0.1137, 0.3137,  ..., 0.0039, 0.0157, 0.0235],
         [0.0902, 0.1451, 0.3333,  ..., 0.0039, 0.0078, 0.0157],
         [0.1255, 0.1294, 0.2118,  ..., 0.0000, 0.0078, 0.0235]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.3255, 0.2196, 0.1765,  ..., 0.4118, 0.3608, 0.2314],
         [0.6667, 0.3882, 0.2667,  ..., 0.2118, 0.1725, 0.1255],
         [0.7451, 0.6549, 0.4353,  ..., 0.1529, 0.1216, 0.0941],
         ...,
         [0.4588, 0.4039, 0.3686,  ..., 0.6157, 0.3961, 0.2392],
         [0.3333, 0.3098, 0.3216,  ..., 0.3804, 0.2431, 0.1922],
         [0.2667, 0.2980, 0.3608,  ..., 0.2235, 0.2078, 0.2118]],
        [[0.3255, 0.2196, 0.1765,  ..., 0.4118, 0.3608, 0.2314],
         [0.6667, 0.3882, 0.2667,  ..., 0.2118, 0.1725, 0.1255],
         [0.7451, 0.6549, 0.4353,  ..., 0.1529, 0.1216, 0.0941],
         ...,
         [0.4588, 0.4039, 0.3686,  ..., 0.6157, 0.3961, 0.2392],
         [0.3333, 0.3098, 0.3216,  ..., 0.3804, 0.2431, 0.1922],
         [0.2667, 0.2980, 0.3608,  ..., 0.2235, 0.2078, 0.2118]],
        [[0.3255, 0.2196, 0.1765,  ..., 0.4118, 0.3608, 0.2314],
         [0.6667, 0.3882, 0.2667,  ..., 0.2118, 0.1725, 0.1255],
         [0.7451, 0.6549, 0.4353,  ..., 0.1529, 0.1216, 0.0941],
         ...,
         [0.4588, 0.4039, 0.3686,  ..., 0.6157, 0.3961, 0.2392],
         [0.3333, 0.3098, 0.3216,  ..., 0.3804, 0.2431, 0.1922],
         [0.2667, 0.2980, 0.3608,  ..., 0.2235, 0.2078, 0.2118]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0157, 0.0078, 0.0078,  ..., 0.0392, 0.1020, 0.2431],
         [0.0118, 0.0078, 0.0078,  ..., 0.0353, 0.0745, 0.1647],
         [0.0078, 0.0078, 0.0078,  ..., 0.0353, 0.0745, 0.1373],
         ...,
         [0.0157, 0.0196, 0.0157,  ..., 0.0118, 0.0078, 0.0039],
         [0.0235, 0.0157, 0.0157,  ..., 0.0118, 0.0078, 0.0039],
         [0.0314, 0.0235, 0.0157,  ..., 0.0157, 0.0118, 0.0078]],
        [[0.0157, 0.0078, 0.0078,  ..., 0.0392, 0.1020, 0.2431],
         [0.0118, 0.0078, 0.0078,  ..., 0.0353, 0.0745, 0.1647],
         [0.0078, 0.0078, 0.0078,  ..., 0.0353, 0.0745, 0.1373],
         ...,
         [0.0157, 0.0196, 0.0157,  ..., 0.0118, 0.0078, 0.0039],
         [0.0235, 0.0157, 0.0157,  ..., 0.0118, 0.0078, 0.0039],
         [0.0314, 0.0235, 0.0157,  ..., 0.0157, 0.0118, 0.0078]],
        [[0.0157, 0.0078, 0.0078,  ..., 0.0392, 0.1020, 0.2431],
         [0.0118, 0.0078, 0.0078,  ..., 0.0353, 0.0745, 0.1647],
         [0.0078, 0.0078, 0.0078,  ..., 0.0353, 0.0745, 0.1373],
         ...,
         [0.0157, 0.0196, 0.0157,  ..., 0.0118, 0.0078, 0.0039],
         [0.0235, 0.0157, 0.0157,  ..., 0.0118, 0.0078, 0.0039],
         [0.0314, 0.0235, 0.0157,  ..., 0.0157, 0.0118, 0.0078]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
Epoch 40/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.11img/s, loss (batch)=0.897]
Epoch 41/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 41/1000: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.93img/s, loss (batch)=1.1]
Epoch 42/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 42/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.16img/s, loss (batch)=0.983]
Epoch 43/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 43/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.86img/s, loss (batch)=0.929]
Epoch 44/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 44/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.64img/s, loss (batch)=1.18]
Epoch 45/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
sample {'image': tensor([[[0.0392, 0.0549, 0.0863,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0392, 0.0549,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0275, 0.0431,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.4196, 0.4706, 0.3843,  ..., 0.0471, 0.0510, 0.0549],
         [0.4314, 0.4314, 0.3922,  ..., 0.0471, 0.0667, 0.0745],
         [0.3373, 0.3608, 0.3490,  ..., 0.0627, 0.0941, 0.1216]],
        [[0.0392, 0.0549, 0.0863,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0392, 0.0549,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0275, 0.0431,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.4196, 0.4706, 0.3843,  ..., 0.0471, 0.0510, 0.0549],
         [0.4314, 0.4314, 0.3922,  ..., 0.0471, 0.0667, 0.0745],
         [0.3373, 0.3608, 0.3490,  ..., 0.0627, 0.0941, 0.1216]],
        [[0.0392, 0.0549, 0.0863,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0392, 0.0549,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0275, 0.0431,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.4196, 0.4706, 0.3843,  ..., 0.0471, 0.0510, 0.0549],
         [0.4314, 0.4314, 0.3922,  ..., 0.0471, 0.0667, 0.0745],
         [0.3373, 0.3608, 0.3490,  ..., 0.0627, 0.0941, 0.1216]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0078, 0.0157,  ..., 0.0118, 0.0196, 0.0118],
         [0.0000, 0.0039, 0.0196,  ..., 0.0118, 0.0157, 0.0078],
         [0.0000, 0.0039, 0.0196,  ..., 0.0157, 0.0118, 0.0078],
         ...,
         [0.0549, 0.3255, 0.3255,  ..., 0.1020, 0.0863, 0.0941],
         [0.1412, 0.3725, 0.7059,  ..., 0.0941, 0.0980, 0.0902],
         [0.2392, 0.4588, 0.8510,  ..., 0.1529, 0.1765, 0.1843]],
        [[0.0039, 0.0078, 0.0157,  ..., 0.0118, 0.0196, 0.0118],
         [0.0000, 0.0039, 0.0196,  ..., 0.0118, 0.0157, 0.0078],
         [0.0000, 0.0039, 0.0196,  ..., 0.0157, 0.0118, 0.0078],
         ...,
         [0.0549, 0.3255, 0.3255,  ..., 0.1020, 0.0863, 0.0941],
         [0.1412, 0.3725, 0.7059,  ..., 0.0941, 0.0980, 0.0902],
         [0.2392, 0.4588, 0.8510,  ..., 0.1529, 0.1765, 0.1843]],
        [[0.0039, 0.0078, 0.0157,  ..., 0.0118, 0.0196, 0.0118],
         [0.0000, 0.0039, 0.0196,  ..., 0.0118, 0.0157, 0.0078],
         [0.0000, 0.0039, 0.0196,  ..., 0.0157, 0.0118, 0.0078],
         ...,
         [0.0549, 0.3255, 0.3255,  ..., 0.1020, 0.0863, 0.0941],
         [0.1412, 0.3725, 0.7059,  ..., 0.0941, 0.0980, 0.0902],
         [0.2392, 0.4588, 0.8510,  ..., 0.1529, 0.1765, 0.1843]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.0314, 0.0235, 0.0235,  ..., 0.1647, 0.1176, 0.0980],
         [0.0118, 0.0118, 0.0118,  ..., 0.2196, 0.1490, 0.1137],
         [0.0039, 0.0039, 0.0078,  ..., 0.1843, 0.1647, 0.1216]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.0314, 0.0235, 0.0235,  ..., 0.1647, 0.1176, 0.0980],
         [0.0118, 0.0118, 0.0118,  ..., 0.2196, 0.1490, 0.1137],
         [0.0039, 0.0039, 0.0078,  ..., 0.1843, 0.1647, 0.1216]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.0314, 0.0235, 0.0235,  ..., 0.1647, 0.1176, 0.0980],
         [0.0118, 0.0118, 0.0118,  ..., 0.2196, 0.1490, 0.1137],
         [0.0039, 0.0039, 0.0078,  ..., 0.1843, 0.1647, 0.1216]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1882, 0.1922, 0.1765,  ..., 0.0039, 0.0039, 0.0039],
         [0.2196, 0.1961, 0.2078,  ..., 0.0078, 0.0078, 0.0039],
         [0.2353, 0.2196, 0.2157,  ..., 0.0157, 0.0118, 0.0118],
         ...,
         [0.0039, 0.0235, 0.1373,  ..., 0.0157, 0.0196, 0.0235],
         [0.0039, 0.0275, 0.1529,  ..., 0.0235, 0.0314, 0.0314],
         [0.0078, 0.0353, 0.1255,  ..., 0.0392, 0.0392, 0.0471]],
        [[0.1882, 0.1922, 0.1765,  ..., 0.0039, 0.0039, 0.0039],
         [0.2196, 0.1961, 0.2078,  ..., 0.0078, 0.0078, 0.0039],
         [0.2353, 0.2196, 0.2157,  ..., 0.0157, 0.0118, 0.0118],
         ...,
         [0.0039, 0.0235, 0.1373,  ..., 0.0157, 0.0196, 0.0235],
         [0.0039, 0.0275, 0.1529,  ..., 0.0235, 0.0314, 0.0314],
         [0.0078, 0.0353, 0.1255,  ..., 0.0392, 0.0392, 0.0471]],
        [[0.1882, 0.1922, 0.1765,  ..., 0.0039, 0.0039, 0.0039],
         [0.2196, 0.1961, 0.2078,  ..., 0.0078, 0.0078, 0.0039],
         [0.2353, 0.2196, 0.2157,  ..., 0.0157, 0.0118, 0.0118],
         ...,
         [0.0039, 0.0235, 0.1373,  ..., 0.0157, 0.0196, 0.0235],
         [0.0039, 0.0275, 0.1529,  ..., 0.0235, 0.0314, 0.0314],
         [0.0078, 0.0353, 0.1255,  ..., 0.0392, 0.0392, 0.0471]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0039,  ..., 0.4549, 0.3255, 0.1882],
         [0.0000, 0.0039, 0.0039,  ..., 0.4745, 0.4157, 0.2667],
         [0.0039, 0.0039, 0.0039,  ..., 0.4549, 0.5333, 0.3961],
         ...,
         [0.3176, 0.2980, 0.2588,  ..., 0.0000, 0.0000, 0.0000],
         [0.2039, 0.3059, 0.2549,  ..., 0.0039, 0.0039, 0.0039],
         [0.0941, 0.1961, 0.2471,  ..., 0.0078, 0.0078, 0.0118]],
        [[0.0000, 0.0039, 0.0039,  ..., 0.4549, 0.3255, 0.1882],
         [0.0000, 0.0039, 0.0039,  ..., 0.4745, 0.4157, 0.2667],
         [0.0039, 0.0039, 0.0039,  ..., 0.4549, 0.5333, 0.3961],
         ...,
         [0.3176, 0.2980, 0.2588,  ..., 0.0000, 0.0000, 0.0000],
         [0.2039, 0.3059, 0.2549,  ..., 0.0039, 0.0039, 0.0039],
         [0.0941, 0.1961, 0.2471,  ..., 0.0078, 0.0078, 0.0118]],
        [[0.0000, 0.0039, 0.0039,  ..., 0.4549, 0.3255, 0.1882],
         [0.0000, 0.0039, 0.0039,  ..., 0.4745, 0.4157, 0.2667],
         [0.0039, 0.0039, 0.0039,  ..., 0.4549, 0.5333, 0.3961],
         ...,
         [0.3176, 0.2980, 0.2588,  ..., 0.0000, 0.0000, 0.0000],
         [0.2039, 0.3059, 0.2549,  ..., 0.0039, 0.0039, 0.0039],
         [0.0941, 0.1961, 0.2471,  ..., 0.0078, 0.0078, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.1412, 0.1176, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.1333, 0.0863, 0.0902],
         [0.0000, 0.0039, 0.0118,  ..., 0.2196, 0.1412, 0.1255],
         ...,
         [0.1373, 0.0980, 0.0784,  ..., 0.0275, 0.0314, 0.0392],
         [0.1294, 0.0941, 0.0784,  ..., 0.0196, 0.0235, 0.0431],
         [0.1255, 0.0902, 0.0745,  ..., 0.0118, 0.0235, 0.0471]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1412, 0.1176, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.1333, 0.0863, 0.0902],
         [0.0000, 0.0039, 0.0118,  ..., 0.2196, 0.1412, 0.1255],
         ...,
         [0.1373, 0.0980, 0.0784,  ..., 0.0275, 0.0314, 0.0392],
         [0.1294, 0.0941, 0.0784,  ..., 0.0196, 0.0235, 0.0431],
         [0.1255, 0.0902, 0.0745,  ..., 0.0118, 0.0235, 0.0471]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.1412, 0.1176, 0.1020],
         [0.0000, 0.0000, 0.0000,  ..., 0.1333, 0.0863, 0.0902],
         [0.0000, 0.0039, 0.0118,  ..., 0.2196, 0.1412, 0.1255],
         ...,
         [0.1373, 0.0980, 0.0784,  ..., 0.0275, 0.0314, 0.0392],
         [0.1294, 0.0941, 0.0784,  ..., 0.0196, 0.0235, 0.0431],
         [0.1255, 0.0902, 0.0745,  ..., 0.0118, 0.0235, 0.0471]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039],
         ...,
         [0.1765, 0.3961, 0.6980,  ..., 0.1529, 0.1137, 0.1412],
         [0.1451, 0.2824, 0.6392,  ..., 0.1922, 0.1608, 0.1843],
         [0.1451, 0.2784, 0.4824,  ..., 0.2588, 0.2471, 0.2196]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039],
         ...,
         [0.1765, 0.3961, 0.6980,  ..., 0.1529, 0.1137, 0.1412],
         [0.1451, 0.2824, 0.6392,  ..., 0.1922, 0.1608, 0.1843],
         [0.1451, 0.2784, 0.4824,  ..., 0.2588, 0.2471, 0.2196]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039],
         ...,
         [0.1765, 0.3961, 0.6980,  ..., 0.1529, 0.1137, 0.1412],
         [0.1451, 0.2824, 0.6392,  ..., 0.1922, 0.1608, 0.1843],
         [0.1451, 0.2784, 0.4824,  ..., 0.2588, 0.2471, 0.2196]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0078, 0.0235, 0.0392,  ..., 0.0431, 0.0314, 0.0275],
         [0.0078, 0.0314, 0.0549,  ..., 0.0510, 0.0353, 0.0275],
         [0.0078, 0.0275, 0.0471,  ..., 0.0627, 0.0471, 0.0353],
         ...,
         [0.0510, 0.0314, 0.0196,  ..., 0.0039, 0.0118, 0.0235],
         [0.0471, 0.0314, 0.0235,  ..., 0.0039, 0.0078, 0.0157],
         [0.0471, 0.0314, 0.0196,  ..., 0.0039, 0.0078, 0.0118]],
        [[0.0078, 0.0235, 0.0392,  ..., 0.0431, 0.0314, 0.0275],
         [0.0078, 0.0314, 0.0549,  ..., 0.0510, 0.0353, 0.0275],
         [0.0078, 0.0275, 0.0471,  ..., 0.0627, 0.0471, 0.0353],
         ...,
         [0.0510, 0.0314, 0.0196,  ..., 0.0039, 0.0118, 0.0235],
         [0.0471, 0.0314, 0.0235,  ..., 0.0039, 0.0078, 0.0157],
         [0.0471, 0.0314, 0.0196,  ..., 0.0039, 0.0078, 0.0118]],
        [[0.0078, 0.0235, 0.0392,  ..., 0.0431, 0.0314, 0.0275],
         [0.0078, 0.0314, 0.0549,  ..., 0.0510, 0.0353, 0.0275],
         [0.0078, 0.0275, 0.0471,  ..., 0.0627, 0.0471, 0.0353],
         ...,
         [0.0510, 0.0314, 0.0196,  ..., 0.0039, 0.0118, 0.0235],
         [0.0471, 0.0314, 0.0235,  ..., 0.0039, 0.0078, 0.0157],
         [0.0471, 0.0314, 0.0196,  ..., 0.0039, 0.0078, 0.0118]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0118, 0.0196, 0.0314,  ..., 0.0745, 0.0471, 0.0235],
         [0.0196, 0.0275, 0.0510,  ..., 0.0431, 0.0235, 0.0118],
         [0.0431, 0.0667, 0.1059,  ..., 0.0235, 0.0157, 0.0078],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0157, 0.0157,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0118, 0.0196, 0.0314,  ..., 0.0745, 0.0471, 0.0235],
         [0.0196, 0.0275, 0.0510,  ..., 0.0431, 0.0235, 0.0118],
         [0.0431, 0.0667, 0.1059,  ..., 0.0235, 0.0157, 0.0078],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0157, 0.0157,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0118, 0.0196, 0.0314,  ..., 0.0745, 0.0471, 0.0235],
         [0.0196, 0.0275, 0.0510,  ..., 0.0431, 0.0235, 0.0118],
         [0.0431, 0.0667, 0.1059,  ..., 0.0235, 0.0157, 0.0078],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0157, 0.0157,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0118,  ..., 0.0549, 0.0588, 0.0784],
         [0.0039, 0.0118, 0.0235,  ..., 0.0588, 0.0549, 0.0745],
         [0.0196, 0.0314, 0.0588,  ..., 0.1020, 0.0706, 0.0745],
         ...,
         [0.0706, 0.0667, 0.0627,  ..., 0.0353, 0.0431, 0.0745],
         [0.0667, 0.0667, 0.0706,  ..., 0.0627, 0.0627, 0.0784],
         [0.0784, 0.0784, 0.0824,  ..., 0.0824, 0.0902, 0.0863]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.0549, 0.0588, 0.0784],
         [0.0039, 0.0118, 0.0235,  ..., 0.0588, 0.0549, 0.0745],
         [0.0196, 0.0314, 0.0588,  ..., 0.1020, 0.0706, 0.0745],
         ...,
         [0.0706, 0.0667, 0.0627,  ..., 0.0353, 0.0431, 0.0745],
         [0.0667, 0.0667, 0.0706,  ..., 0.0627, 0.0627, 0.0784],
         [0.0784, 0.0784, 0.0824,  ..., 0.0824, 0.0902, 0.0863]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.0549, 0.0588, 0.0784],
         [0.0039, 0.0118, 0.0235,  ..., 0.0588, 0.0549, 0.0745],
         [0.0196, 0.0314, 0.0588,  ..., 0.1020, 0.0706, 0.0745],
         ...,
         [0.0706, 0.0667, 0.0627,  ..., 0.0353, 0.0431, 0.0745],
         [0.0667, 0.0667, 0.0706,  ..., 0.0627, 0.0627, 0.0784],
         [0.0784, 0.0784, 0.0824,  ..., 0.0824, 0.0902, 0.0863]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 0.],
        [1., 1., 1.,  ..., 1., 1., 0.],
        [1., 1., 1.,  ..., 1., 1., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.5216, 0.7216, 0.7373,  ..., 0.0745, 0.0471, 0.0235],
         [0.6824, 0.6941, 0.7216,  ..., 0.0588, 0.0314, 0.0157],
         [0.4235, 0.4510, 0.4431,  ..., 0.0471, 0.0314, 0.0157],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0039]],
        [[0.5216, 0.7216, 0.7373,  ..., 0.0745, 0.0471, 0.0235],
         [0.6824, 0.6941, 0.7216,  ..., 0.0588, 0.0314, 0.0157],
         [0.4235, 0.4510, 0.4431,  ..., 0.0471, 0.0314, 0.0157],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0039]],
        [[0.5216, 0.7216, 0.7373,  ..., 0.0745, 0.0471, 0.0235],
         [0.6824, 0.6941, 0.7216,  ..., 0.0588, 0.0314, 0.0157],
         [0.4235, 0.4510, 0.4431,  ..., 0.0471, 0.0314, 0.0157],
         ...,
         [0.0039, 0.0039, 0.0118,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0667, 0.0549, 0.0627,  ..., 0.0235, 0.0196, 0.0157],
         [0.0392, 0.0353, 0.0353,  ..., 0.0275, 0.0157, 0.0157],
         [0.0235, 0.0235, 0.0196,  ..., 0.0314, 0.0235, 0.0196],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0667, 0.0549, 0.0627,  ..., 0.0235, 0.0196, 0.0157],
         [0.0392, 0.0353, 0.0353,  ..., 0.0275, 0.0157, 0.0157],
         [0.0235, 0.0235, 0.0196,  ..., 0.0314, 0.0235, 0.0196],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0667, 0.0549, 0.0627,  ..., 0.0235, 0.0196, 0.0157],
         [0.0392, 0.0353, 0.0353,  ..., 0.0275, 0.0157, 0.0157],
         [0.0235, 0.0235, 0.0196,  ..., 0.0314, 0.0235, 0.0196],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0549],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0392, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0392, 0.0353],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0549],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0392, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0392, 0.0353],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0549],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0392, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0392, 0.0353],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0078]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0157, 0.0471, 0.0784,  ..., 0.0196, 0.0353, 0.0667],
         [0.0235, 0.0549, 0.0941,  ..., 0.0157, 0.0235, 0.0392],
         [0.0392, 0.0667, 0.1137,  ..., 0.0118, 0.0157, 0.0275],
         ...,
         [0.0706, 0.0392, 0.0235,  ..., 0.1569, 0.2078, 0.2157],
         [0.0745, 0.0353, 0.0275,  ..., 0.1020, 0.1176, 0.1216],
         [0.0667, 0.0392, 0.0275,  ..., 0.0667, 0.0588, 0.0627]],
        [[0.0157, 0.0471, 0.0784,  ..., 0.0196, 0.0353, 0.0667],
         [0.0235, 0.0549, 0.0941,  ..., 0.0157, 0.0235, 0.0392],
         [0.0392, 0.0667, 0.1137,  ..., 0.0118, 0.0157, 0.0275],
         ...,
         [0.0706, 0.0392, 0.0235,  ..., 0.1569, 0.2078, 0.2157],
         [0.0745, 0.0353, 0.0275,  ..., 0.1020, 0.1176, 0.1216],
         [0.0667, 0.0392, 0.0275,  ..., 0.0667, 0.0588, 0.0627]],
        [[0.0157, 0.0471, 0.0784,  ..., 0.0196, 0.0353, 0.0667],
         [0.0235, 0.0549, 0.0941,  ..., 0.0157, 0.0235, 0.0392],
         [0.0392, 0.0667, 0.1137,  ..., 0.0118, 0.0157, 0.0275],
         ...,
         [0.0706, 0.0392, 0.0235,  ..., 0.1569, 0.2078, 0.2157],
         [0.0745, 0.0353, 0.0275,  ..., 0.1020, 0.1176, 0.1216],
         [0.0667, 0.0392, 0.0275,  ..., 0.0667, 0.0588, 0.0627]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0510, 0.0588, 0.0824,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0588, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0588, 0.1020,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0118, 0.0157, 0.0157,  ..., 0.0863, 0.0706, 0.0588],
         [0.0235, 0.0275, 0.0235,  ..., 0.0941, 0.0941, 0.0667],
         [0.0353, 0.0431, 0.0392,  ..., 0.1020, 0.0941, 0.0824]],
        [[0.0510, 0.0588, 0.0824,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0588, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0588, 0.1020,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0118, 0.0157, 0.0157,  ..., 0.0863, 0.0706, 0.0588],
         [0.0235, 0.0275, 0.0235,  ..., 0.0941, 0.0941, 0.0667],
         [0.0353, 0.0431, 0.0392,  ..., 0.1020, 0.0941, 0.0824]],
        [[0.0510, 0.0588, 0.0824,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0588, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0588, 0.1020,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0118, 0.0157, 0.0157,  ..., 0.0863, 0.0706, 0.0588],
         [0.0235, 0.0275, 0.0235,  ..., 0.0941, 0.0941, 0.0667],
         [0.0353, 0.0431, 0.0392,  ..., 0.1020, 0.0941, 0.0824]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.2667, 0.5569, 0.8745],
         [0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.2314, 0.4000],
         [0.0000, 0.0000, 0.0000,  ..., 0.1176, 0.1529, 0.2118],
         ...,
         [0.0157, 0.0314, 0.0314,  ..., 0.0745, 0.0784, 0.0706],
         [0.0118, 0.0392, 0.0314,  ..., 0.0627, 0.0745, 0.0627],
         [0.0118, 0.0235, 0.0235,  ..., 0.0353, 0.0392, 0.0392]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.2667, 0.5569, 0.8745],
         [0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.2314, 0.4000],
         [0.0000, 0.0000, 0.0000,  ..., 0.1176, 0.1529, 0.2118],
         ...,
         [0.0157, 0.0314, 0.0314,  ..., 0.0745, 0.0784, 0.0706],
         [0.0118, 0.0392, 0.0314,  ..., 0.0627, 0.0745, 0.0627],
         [0.0118, 0.0235, 0.0235,  ..., 0.0353, 0.0392, 0.0392]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.2667, 0.5569, 0.8745],
         [0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.2314, 0.4000],
         [0.0000, 0.0000, 0.0000,  ..., 0.1176, 0.1529, 0.2118],
         ...,
         [0.0157, 0.0314, 0.0314,  ..., 0.0745, 0.0784, 0.0706],
         [0.0118, 0.0392, 0.0314,  ..., 0.0627, 0.0745, 0.0627],
         [0.0118, 0.0235, 0.0235,  ..., 0.0353, 0.0392, 0.0392]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
Epoch 45/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.96img/s, loss (batch)=0.893]
Epoch 46/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 46/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.95img/s, loss (batch)=0.872]
Epoch 47/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 47/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00, 10.20img/s, loss (batch)=1.05]
Epoch 48/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 48/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00, 12.03img/s, loss (batch)=0.993]
Epoch 49/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 49/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.08img/s, loss (batch)=0.871]
sample {'image': tensor([[[0.0000, 0.0039, 0.0000,  ..., 0.1098, 0.2314, 0.3333],
         [0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.2588, 0.3216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1961, 0.2314],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0039, 0.0000,  ..., 0.1098, 0.2314, 0.3333],
         [0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.2588, 0.3216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1961, 0.2314],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0039, 0.0000,  ..., 0.1098, 0.2314, 0.3333],
         [0.0000, 0.0000, 0.0000,  ..., 0.1373, 0.2588, 0.3216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1961, 0.2314],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1686, 0.2000, 0.2118,  ..., 0.2314, 0.1569, 0.0980],
         [0.2039, 0.2078, 0.2510,  ..., 0.1882, 0.1216, 0.0863],
         [0.2510, 0.2118, 0.2431,  ..., 0.1569, 0.1176, 0.0745]],
        [[0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1686, 0.2000, 0.2118,  ..., 0.2314, 0.1569, 0.0980],
         [0.2039, 0.2078, 0.2510,  ..., 0.1882, 0.1216, 0.0863],
         [0.2510, 0.2118, 0.2431,  ..., 0.1569, 0.1176, 0.0745]],
        [[0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1686, 0.2000, 0.2118,  ..., 0.2314, 0.1569, 0.0980],
         [0.2039, 0.2078, 0.2510,  ..., 0.1882, 0.1216, 0.0863],
         [0.2510, 0.2118, 0.2431,  ..., 0.1569, 0.1176, 0.0745]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0157, 0.0275, 0.0431,  ..., 0.1686, 0.1529, 0.1490],
         [0.0078, 0.0157, 0.0314,  ..., 0.1647, 0.2118, 0.2157],
         [0.0078, 0.0118, 0.0275,  ..., 0.1333, 0.2039, 0.2784],
         ...,
         [0.0196, 0.0353, 0.0706,  ..., 0.2000, 0.1569, 0.1176],
         [0.0392, 0.0784, 0.1059,  ..., 0.1843, 0.1569, 0.0941],
         [0.0863, 0.1412, 0.1490,  ..., 0.1686, 0.1294, 0.0784]],
        [[0.0157, 0.0275, 0.0431,  ..., 0.1686, 0.1529, 0.1490],
         [0.0078, 0.0157, 0.0314,  ..., 0.1647, 0.2118, 0.2157],
         [0.0078, 0.0118, 0.0275,  ..., 0.1333, 0.2039, 0.2784],
         ...,
         [0.0196, 0.0353, 0.0706,  ..., 0.2000, 0.1569, 0.1176],
         [0.0392, 0.0784, 0.1059,  ..., 0.1843, 0.1569, 0.0941],
         [0.0863, 0.1412, 0.1490,  ..., 0.1686, 0.1294, 0.0784]],
        [[0.0157, 0.0275, 0.0431,  ..., 0.1686, 0.1529, 0.1490],
         [0.0078, 0.0157, 0.0314,  ..., 0.1647, 0.2118, 0.2157],
         [0.0078, 0.0118, 0.0275,  ..., 0.1333, 0.2039, 0.2784],
         ...,
         [0.0196, 0.0353, 0.0706,  ..., 0.2000, 0.1569, 0.1176],
         [0.0392, 0.0784, 0.1059,  ..., 0.1843, 0.1569, 0.0941],
         [0.0863, 0.1412, 0.1490,  ..., 0.1686, 0.1294, 0.0784]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 0.,  ..., 0., 0., 0.],
        [1., 1., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0667, 0.0588, 0.0549,  ..., 0.8196, 0.6431, 0.3882],
         [0.1294, 0.1294, 0.1373,  ..., 0.3451, 0.1725, 0.1137],
         [0.2588, 0.3373, 0.3569,  ..., 0.0824, 0.0549, 0.0431],
         ...,
         [0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0667, 0.0588, 0.0549,  ..., 0.8196, 0.6431, 0.3882],
         [0.1294, 0.1294, 0.1373,  ..., 0.3451, 0.1725, 0.1137],
         [0.2588, 0.3373, 0.3569,  ..., 0.0824, 0.0549, 0.0431],
         ...,
         [0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0667, 0.0588, 0.0549,  ..., 0.8196, 0.6431, 0.3882],
         [0.1294, 0.1294, 0.1373,  ..., 0.3451, 0.1725, 0.1137],
         [0.2588, 0.3373, 0.3569,  ..., 0.0824, 0.0549, 0.0431],
         ...,
         [0.0039, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0078, 0.0118,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0196, 0.0667, 0.2000,  ..., 0.0235, 0.0118, 0.0078],
         [0.0157, 0.0471, 0.1373,  ..., 0.0196, 0.0118, 0.0039],
         [0.0157, 0.0392, 0.1137,  ..., 0.0157, 0.0078, 0.0039],
         ...,
         [0.0235, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0196, 0.0667, 0.2000,  ..., 0.0235, 0.0118, 0.0078],
         [0.0157, 0.0471, 0.1373,  ..., 0.0196, 0.0118, 0.0039],
         [0.0157, 0.0392, 0.1137,  ..., 0.0157, 0.0078, 0.0039],
         ...,
         [0.0235, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0196, 0.0667, 0.2000,  ..., 0.0235, 0.0118, 0.0078],
         [0.0157, 0.0471, 0.1373,  ..., 0.0196, 0.0118, 0.0039],
         [0.0157, 0.0392, 0.1137,  ..., 0.0157, 0.0078, 0.0039],
         ...,
         [0.0235, 0.0039, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0275, 0.0118, 0.0078],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0196, 0.0118],
         [0.0039, 0.0039, 0.0039,  ..., 0.0784, 0.0353, 0.0196],
         ...,
         [0.0431, 0.0235, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0627, 0.0510, 0.0510,  ..., 0.0078, 0.0039, 0.0039],
         [0.0784, 0.0824, 0.0902,  ..., 0.0078, 0.0039, 0.0039]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0275, 0.0118, 0.0078],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0196, 0.0118],
         [0.0039, 0.0039, 0.0039,  ..., 0.0784, 0.0353, 0.0196],
         ...,
         [0.0431, 0.0235, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0627, 0.0510, 0.0510,  ..., 0.0078, 0.0039, 0.0039],
         [0.0784, 0.0824, 0.0902,  ..., 0.0078, 0.0039, 0.0039]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0275, 0.0118, 0.0078],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0196, 0.0118],
         [0.0039, 0.0039, 0.0039,  ..., 0.0784, 0.0353, 0.0196],
         ...,
         [0.0431, 0.0235, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0627, 0.0510, 0.0510,  ..., 0.0078, 0.0039, 0.0039],
         [0.0784, 0.0824, 0.0902,  ..., 0.0078, 0.0039, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1490, 0.2118, 0.3255,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.1725, 0.2941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0941, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1490, 0.2118, 0.3255,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.1725, 0.2941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0941, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1490, 0.2118, 0.3255,  ..., 0.0000, 0.0000, 0.0000],
         [0.0863, 0.1725, 0.2941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0941, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0078,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.2627, 0.2863, 0.2549,  ..., 0.0510, 0.0667, 0.0824],
         [0.2627, 0.2353, 0.2078,  ..., 0.0431, 0.0745, 0.0902],
         [0.2863, 0.2157, 0.1765,  ..., 0.0510, 0.0706, 0.0588],
         ...,
         [0.1098, 0.1020, 0.0706,  ..., 0.0039, 0.0039, 0.0000],
         [0.1255, 0.0902, 0.0471,  ..., 0.0039, 0.0039, 0.0039],
         [0.1059, 0.0588, 0.0275,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.2627, 0.2863, 0.2549,  ..., 0.0510, 0.0667, 0.0824],
         [0.2627, 0.2353, 0.2078,  ..., 0.0431, 0.0745, 0.0902],
         [0.2863, 0.2157, 0.1765,  ..., 0.0510, 0.0706, 0.0588],
         ...,
         [0.1098, 0.1020, 0.0706,  ..., 0.0039, 0.0039, 0.0000],
         [0.1255, 0.0902, 0.0471,  ..., 0.0039, 0.0039, 0.0039],
         [0.1059, 0.0588, 0.0275,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.2627, 0.2863, 0.2549,  ..., 0.0510, 0.0667, 0.0824],
         [0.2627, 0.2353, 0.2078,  ..., 0.0431, 0.0745, 0.0902],
         [0.2863, 0.2157, 0.1765,  ..., 0.0510, 0.0706, 0.0588],
         ...,
         [0.1098, 0.1020, 0.0706,  ..., 0.0039, 0.0039, 0.0000],
         [0.1255, 0.0902, 0.0471,  ..., 0.0039, 0.0039, 0.0039],
         [0.1059, 0.0588, 0.0275,  ..., 0.0039, 0.0039, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0667, 0.0471, 0.0275,  ..., 0.2980, 0.2157, 0.1176],
         [0.0863, 0.0745, 0.0784,  ..., 0.2039, 0.1451, 0.0824],
         [0.1255, 0.1137, 0.0902,  ..., 0.1216, 0.0941, 0.0627],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039],
         [0.0039, 0.0000, 0.0000,  ..., 0.0196, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0196, 0.0000, 0.0000]],
        [[0.0667, 0.0471, 0.0275,  ..., 0.2980, 0.2157, 0.1176],
         [0.0863, 0.0745, 0.0784,  ..., 0.2039, 0.1451, 0.0824],
         [0.1255, 0.1137, 0.0902,  ..., 0.1216, 0.0941, 0.0627],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039],
         [0.0039, 0.0000, 0.0000,  ..., 0.0196, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0196, 0.0000, 0.0000]],
        [[0.0667, 0.0471, 0.0275,  ..., 0.2980, 0.2157, 0.1176],
         [0.0863, 0.0745, 0.0784,  ..., 0.2039, 0.1451, 0.0824],
         [0.1255, 0.1137, 0.0902,  ..., 0.1216, 0.0941, 0.0627],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039],
         [0.0039, 0.0000, 0.0000,  ..., 0.0196, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0196, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0549, 0.0706, 0.0824,  ..., 0.0902, 0.0863, 0.0980],
         [0.0314, 0.0392, 0.0510,  ..., 0.0863, 0.0902, 0.1020],
         [0.0196, 0.0235, 0.0353,  ..., 0.0824, 0.0980, 0.1216],
         ...,
         [0.0941, 0.0510, 0.0314,  ..., 0.0039, 0.0118, 0.0353],
         [0.0941, 0.0549, 0.0314,  ..., 0.0078, 0.0196, 0.0431],
         [0.0627, 0.0549, 0.0431,  ..., 0.0157, 0.0314, 0.0627]],
        [[0.0549, 0.0706, 0.0824,  ..., 0.0902, 0.0863, 0.0980],
         [0.0314, 0.0392, 0.0510,  ..., 0.0863, 0.0902, 0.1020],
         [0.0196, 0.0235, 0.0353,  ..., 0.0824, 0.0980, 0.1216],
         ...,
         [0.0941, 0.0510, 0.0314,  ..., 0.0039, 0.0118, 0.0353],
         [0.0941, 0.0549, 0.0314,  ..., 0.0078, 0.0196, 0.0431],
         [0.0627, 0.0549, 0.0431,  ..., 0.0157, 0.0314, 0.0627]],
        [[0.0549, 0.0706, 0.0824,  ..., 0.0902, 0.0863, 0.0980],
         [0.0314, 0.0392, 0.0510,  ..., 0.0863, 0.0902, 0.1020],
         [0.0196, 0.0235, 0.0353,  ..., 0.0824, 0.0980, 0.1216],
         ...,
         [0.0941, 0.0510, 0.0314,  ..., 0.0039, 0.0118, 0.0353],
         [0.0941, 0.0549, 0.0314,  ..., 0.0078, 0.0196, 0.0431],
         [0.0627, 0.0549, 0.0431,  ..., 0.0157, 0.0314, 0.0627]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0353, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0392, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0431, 0.0588],
         ...,
         [0.0196, 0.0314, 0.0471,  ..., 0.4471, 0.2039, 0.0824],
         [0.0157, 0.0196, 0.0275,  ..., 0.3725, 0.2000, 0.0824],
         [0.0157, 0.0196, 0.0235,  ..., 0.4275, 0.2745, 0.0980]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0353, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0392, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0431, 0.0588],
         ...,
         [0.0196, 0.0314, 0.0471,  ..., 0.4471, 0.2039, 0.0824],
         [0.0157, 0.0196, 0.0275,  ..., 0.3725, 0.2000, 0.0824],
         [0.0157, 0.0196, 0.0235,  ..., 0.4275, 0.2745, 0.0980]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0353, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0392, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0431, 0.0588],
         ...,
         [0.0196, 0.0314, 0.0471,  ..., 0.4471, 0.2039, 0.0824],
         [0.0157, 0.0196, 0.0275,  ..., 0.3725, 0.2000, 0.0824],
         [0.0157, 0.0196, 0.0235,  ..., 0.4275, 0.2745, 0.0980]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0627, 0.0627, 0.0941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0275, 0.0471],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0627, 0.0627, 0.0941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0275, 0.0471],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0627, 0.0627, 0.0941],
         [0.0000, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0667],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0275, 0.0471],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0078, 0.0118]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0235, 0.0353],
         [0.0000, 0.0000, 0.0039,  ..., 0.0196, 0.0314, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0471, 0.0627],
         ...,
         [0.1216, 0.1804, 0.0941,  ..., 0.4863, 0.5373, 0.4902],
         [0.1882, 0.1961, 0.0941,  ..., 0.1529, 0.1922, 0.2314],
         [0.3804, 0.2392, 0.0588,  ..., 0.0549, 0.0549, 0.0588]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0235, 0.0353],
         [0.0000, 0.0000, 0.0039,  ..., 0.0196, 0.0314, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0471, 0.0627],
         ...,
         [0.1216, 0.1804, 0.0941,  ..., 0.4863, 0.5373, 0.4902],
         [0.1882, 0.1961, 0.0941,  ..., 0.1529, 0.1922, 0.2314],
         [0.3804, 0.2392, 0.0588,  ..., 0.0549, 0.0549, 0.0588]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0235, 0.0353],
         [0.0000, 0.0000, 0.0039,  ..., 0.0196, 0.0314, 0.0510],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0471, 0.0627],
         ...,
         [0.1216, 0.1804, 0.0941,  ..., 0.4863, 0.5373, 0.4902],
         [0.1882, 0.1961, 0.0941,  ..., 0.1529, 0.1922, 0.2314],
         [0.3804, 0.2392, 0.0588,  ..., 0.0549, 0.0549, 0.0588]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.2353, 0.2706, 0.2588,  ..., 0.0196, 0.0118, 0.0078],
         [0.1490, 0.1882, 0.2392,  ..., 0.0157, 0.0118, 0.0078],
         [0.0941, 0.1255, 0.1882,  ..., 0.0157, 0.0118, 0.0078],
         ...,
         [0.1451, 0.1255, 0.1333,  ..., 0.0588, 0.0667, 0.0627],
         [0.1804, 0.1686, 0.1686,  ..., 0.0196, 0.0196, 0.0196],
         [0.2471, 0.2275, 0.1804,  ..., 0.0078, 0.0039, 0.0078]],
        [[0.2353, 0.2706, 0.2588,  ..., 0.0196, 0.0118, 0.0078],
         [0.1490, 0.1882, 0.2392,  ..., 0.0157, 0.0118, 0.0078],
         [0.0941, 0.1255, 0.1882,  ..., 0.0157, 0.0118, 0.0078],
         ...,
         [0.1451, 0.1255, 0.1333,  ..., 0.0588, 0.0667, 0.0627],
         [0.1804, 0.1686, 0.1686,  ..., 0.0196, 0.0196, 0.0196],
         [0.2471, 0.2275, 0.1804,  ..., 0.0078, 0.0039, 0.0078]],
        [[0.2353, 0.2706, 0.2588,  ..., 0.0196, 0.0118, 0.0078],
         [0.1490, 0.1882, 0.2392,  ..., 0.0157, 0.0118, 0.0078],
         [0.0941, 0.1255, 0.1882,  ..., 0.0157, 0.0118, 0.0078],
         ...,
         [0.1451, 0.1255, 0.1333,  ..., 0.0588, 0.0667, 0.0627],
         [0.1804, 0.1686, 0.1686,  ..., 0.0196, 0.0196, 0.0196],
         [0.2471, 0.2275, 0.1804,  ..., 0.0078, 0.0039, 0.0078]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0431, 0.0745, 0.1529,  ..., 0.0039, 0.0039, 0.0000],
         [0.0431, 0.0549, 0.0980,  ..., 0.0039, 0.0039, 0.0039],
         [0.0353, 0.0471, 0.0588,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1961, 0.2549],
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1647, 0.2118],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1176, 0.1098]],
        [[0.0431, 0.0745, 0.1529,  ..., 0.0039, 0.0039, 0.0000],
         [0.0431, 0.0549, 0.0980,  ..., 0.0039, 0.0039, 0.0039],
         [0.0353, 0.0471, 0.0588,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1961, 0.2549],
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1647, 0.2118],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1176, 0.1098]],
        [[0.0431, 0.0745, 0.1529,  ..., 0.0039, 0.0039, 0.0000],
         [0.0431, 0.0549, 0.0980,  ..., 0.0039, 0.0039, 0.0039],
         [0.0353, 0.0471, 0.0588,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1961, 0.2549],
         [0.0000, 0.0000, 0.0000,  ..., 0.1804, 0.1647, 0.2118],
         [0.0000, 0.0000, 0.0000,  ..., 0.1451, 0.1176, 0.1098]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0078, 0.0157, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0196, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0196, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1608, 0.1137, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1686, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1961, 0.1961, 0.1843]],
        [[0.0078, 0.0157, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0196, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0196, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1608, 0.1137, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1686, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1961, 0.1961, 0.1843]],
        [[0.0078, 0.0157, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0118, 0.0196, 0.0235,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0196, 0.0157,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1608, 0.1137, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1843, 0.1686, 0.1490],
         [0.0000, 0.0000, 0.0000,  ..., 0.1961, 0.1961, 0.1843]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.2000, 0.1451, 0.1216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1922, 0.1765, 0.1647],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.2000, 0.2000],
         ...,
         [0.0118, 0.0039, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0157, 0.0275],
         [0.0078, 0.0039, 0.0000,  ..., 0.0275, 0.0392, 0.0510]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.2000, 0.1451, 0.1216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1922, 0.1765, 0.1647],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.2000, 0.2000],
         ...,
         [0.0118, 0.0039, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0157, 0.0275],
         [0.0078, 0.0039, 0.0000,  ..., 0.0275, 0.0392, 0.0510]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.2000, 0.1451, 0.1216],
         [0.0000, 0.0000, 0.0000,  ..., 0.1922, 0.1765, 0.1647],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.2000, 0.2000],
         ...,
         [0.0118, 0.0039, 0.0000,  ..., 0.0039, 0.0078, 0.0118],
         [0.0039, 0.0039, 0.0039,  ..., 0.0118, 0.0157, 0.0275],
         [0.0078, 0.0039, 0.0000,  ..., 0.0275, 0.0392, 0.0510]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0549, 0.0627, 0.0549,  ..., 0.5059, 0.4588, 0.4314],
         [0.0549, 0.0667, 0.0471,  ..., 0.4549, 0.3490, 0.3137],
         [0.0471, 0.0549, 0.0431,  ..., 0.3725, 0.2824, 0.2627],
         ...,
         [0.0039, 0.0078, 0.0078,  ..., 0.0667, 0.1137, 0.2196],
         [0.0039, 0.0039, 0.0078,  ..., 0.0588, 0.1059, 0.1961],
         [0.0039, 0.0039, 0.0078,  ..., 0.0588, 0.0941, 0.1529]],
        [[0.0549, 0.0627, 0.0549,  ..., 0.5059, 0.4588, 0.4314],
         [0.0549, 0.0667, 0.0471,  ..., 0.4549, 0.3490, 0.3137],
         [0.0471, 0.0549, 0.0431,  ..., 0.3725, 0.2824, 0.2627],
         ...,
         [0.0039, 0.0078, 0.0078,  ..., 0.0667, 0.1137, 0.2196],
         [0.0039, 0.0039, 0.0078,  ..., 0.0588, 0.1059, 0.1961],
         [0.0039, 0.0039, 0.0078,  ..., 0.0588, 0.0941, 0.1529]],
        [[0.0549, 0.0627, 0.0549,  ..., 0.5059, 0.4588, 0.4314],
         [0.0549, 0.0667, 0.0471,  ..., 0.4549, 0.3490, 0.3137],
         [0.0471, 0.0549, 0.0431,  ..., 0.3725, 0.2824, 0.2627],
         ...,
         [0.0039, 0.0078, 0.0078,  ..., 0.0667, 0.1137, 0.2196],
         [0.0039, 0.0039, 0.0078,  ..., 0.0588, 0.1059, 0.1961],
         [0.0039, 0.0039, 0.0078,  ..., 0.0588, 0.0941, 0.1529]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0706, 0.0627, 0.0745,  ..., 0.0471, 0.0353, 0.0275],
         [0.0706, 0.0745, 0.0706,  ..., 0.0510, 0.0353, 0.0275],
         [0.0902, 0.0902, 0.0863,  ..., 0.0588, 0.0431, 0.0353],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.1059, 0.1137, 0.1255],
         [0.0000, 0.0039, 0.0039,  ..., 0.1059, 0.1216, 0.1373],
         [0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.1961, 0.2235]],
        [[0.0706, 0.0627, 0.0745,  ..., 0.0471, 0.0353, 0.0275],
         [0.0706, 0.0745, 0.0706,  ..., 0.0510, 0.0353, 0.0275],
         [0.0902, 0.0902, 0.0863,  ..., 0.0588, 0.0431, 0.0353],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.1059, 0.1137, 0.1255],
         [0.0000, 0.0039, 0.0039,  ..., 0.1059, 0.1216, 0.1373],
         [0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.1961, 0.2235]],
        [[0.0706, 0.0627, 0.0745,  ..., 0.0471, 0.0353, 0.0275],
         [0.0706, 0.0745, 0.0706,  ..., 0.0510, 0.0353, 0.0275],
         [0.0902, 0.0902, 0.0863,  ..., 0.0588, 0.0431, 0.0353],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.1059, 0.1137, 0.1255],
         [0.0000, 0.0039, 0.0039,  ..., 0.1059, 0.1216, 0.1373],
         [0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.1961, 0.2235]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.3843, 0.6275, 0.7529,  ..., 0.0000, 0.0000, 0.0000],
         [0.4549, 0.7412, 0.7843,  ..., 0.0000, 0.0000, 0.0000],
         [0.6627, 0.7725, 0.7647,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.2784, 0.2510, 0.2196],
         [0.0118, 0.0118, 0.0157,  ..., 0.6157, 0.7059, 0.6078],
         [0.0235, 0.0235, 0.0235,  ..., 0.5804, 0.7020, 0.5843]],
        [[0.3843, 0.6275, 0.7529,  ..., 0.0000, 0.0000, 0.0000],
         [0.4549, 0.7412, 0.7843,  ..., 0.0000, 0.0000, 0.0000],
         [0.6627, 0.7725, 0.7647,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.2784, 0.2510, 0.2196],
         [0.0118, 0.0118, 0.0157,  ..., 0.6157, 0.7059, 0.6078],
         [0.0235, 0.0235, 0.0235,  ..., 0.5804, 0.7020, 0.5843]],
        [[0.3843, 0.6275, 0.7529,  ..., 0.0000, 0.0000, 0.0000],
         [0.4549, 0.7412, 0.7843,  ..., 0.0000, 0.0000, 0.0000],
         [0.6627, 0.7725, 0.7647,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.2784, 0.2510, 0.2196],
         [0.0118, 0.0118, 0.0157,  ..., 0.6157, 0.7059, 0.6078],
         [0.0235, 0.0235, 0.0235,  ..., 0.5804, 0.7020, 0.5843]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
                                                                                                                                                                                                                                   /home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 50/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.89img/s, loss (batch)=1.12]
Epoch 51/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 51/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.66img/s, loss (batch)=0.844]
Epoch 52/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 52/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.44img/s, loss (batch)=1.21]
Epoch 53/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 53/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.36img/s, loss (batch)=0.844]
Epoch 54/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]
sample {'image': tensor([[[0.0196, 0.0275, 0.0471,  ..., 0.0118, 0.0078, 0.0039],
         [0.0275, 0.0392, 0.0627,  ..., 0.0039, 0.0039, 0.0000],
         [0.0471, 0.0588, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1020, 0.0863, 0.0706,  ..., 0.0824, 0.0431, 0.0196],
         [0.0784, 0.0588, 0.0471,  ..., 0.0510, 0.0275, 0.0118],
         [0.0588, 0.0392, 0.0275,  ..., 0.0275, 0.0157, 0.0078]],
        [[0.0196, 0.0275, 0.0471,  ..., 0.0118, 0.0078, 0.0039],
         [0.0275, 0.0392, 0.0627,  ..., 0.0039, 0.0039, 0.0000],
         [0.0471, 0.0588, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1020, 0.0863, 0.0706,  ..., 0.0824, 0.0431, 0.0196],
         [0.0784, 0.0588, 0.0471,  ..., 0.0510, 0.0275, 0.0118],
         [0.0588, 0.0392, 0.0275,  ..., 0.0275, 0.0157, 0.0078]],
        [[0.0196, 0.0275, 0.0471,  ..., 0.0118, 0.0078, 0.0039],
         [0.0275, 0.0392, 0.0627,  ..., 0.0039, 0.0039, 0.0000],
         [0.0471, 0.0588, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1020, 0.0863, 0.0706,  ..., 0.0824, 0.0431, 0.0196],
         [0.0784, 0.0588, 0.0471,  ..., 0.0510, 0.0275, 0.0118],
         [0.0588, 0.0392, 0.0275,  ..., 0.0275, 0.0157, 0.0078]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1961, 0.1922, 0.1686,  ..., 0.0196, 0.0275, 0.0196],
         [0.2353, 0.2118, 0.1647,  ..., 0.0196, 0.0196, 0.0157],
         [0.2667, 0.2039, 0.1961,  ..., 0.0157, 0.0157, 0.0118],
         ...,
         [0.6824, 0.4549, 0.2392,  ..., 0.0471, 0.0353, 0.0235],
         [0.7725, 0.4824, 0.1804,  ..., 0.0314, 0.0275, 0.0196],
         [0.7922, 0.7412, 0.2784,  ..., 0.0235, 0.0157, 0.0157]],
        [[0.1961, 0.1922, 0.1686,  ..., 0.0196, 0.0275, 0.0196],
         [0.2353, 0.2118, 0.1647,  ..., 0.0196, 0.0196, 0.0157],
         [0.2667, 0.2039, 0.1961,  ..., 0.0157, 0.0157, 0.0118],
         ...,
         [0.6824, 0.4549, 0.2392,  ..., 0.0471, 0.0353, 0.0235],
         [0.7725, 0.4824, 0.1804,  ..., 0.0314, 0.0275, 0.0196],
         [0.7922, 0.7412, 0.2784,  ..., 0.0235, 0.0157, 0.0157]],
        [[0.1961, 0.1922, 0.1686,  ..., 0.0196, 0.0275, 0.0196],
         [0.2353, 0.2118, 0.1647,  ..., 0.0196, 0.0196, 0.0157],
         [0.2667, 0.2039, 0.1961,  ..., 0.0157, 0.0157, 0.0118],
         ...,
         [0.6824, 0.4549, 0.2392,  ..., 0.0471, 0.0353, 0.0235],
         [0.7725, 0.4824, 0.1804,  ..., 0.0314, 0.0275, 0.0196],
         [0.7922, 0.7412, 0.2784,  ..., 0.0235, 0.0157, 0.0157]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0667, 0.1255, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         [0.0745, 0.1373, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         [0.1020, 0.1529, 0.1569,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.1373, 0.1098,  ..., 0.0980, 0.0941, 0.0980],
         [0.1255, 0.1176, 0.0980,  ..., 0.1059, 0.0980, 0.1020],
         [0.0824, 0.0824, 0.0941,  ..., 0.1608, 0.1451, 0.1490]],
        [[0.0667, 0.1255, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         [0.0745, 0.1373, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         [0.1020, 0.1529, 0.1569,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.1373, 0.1098,  ..., 0.0980, 0.0941, 0.0980],
         [0.1255, 0.1176, 0.0980,  ..., 0.1059, 0.0980, 0.1020],
         [0.0824, 0.0824, 0.0941,  ..., 0.1608, 0.1451, 0.1490]],
        [[0.0667, 0.1255, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         [0.0745, 0.1373, 0.1333,  ..., 0.0000, 0.0000, 0.0000],
         [0.1020, 0.1529, 0.1569,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.1176, 0.1373, 0.1098,  ..., 0.0980, 0.0941, 0.0980],
         [0.1255, 0.1176, 0.0980,  ..., 0.1059, 0.0980, 0.1020],
         [0.0824, 0.0824, 0.0941,  ..., 0.1608, 0.1451, 0.1490]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         ...,
         [0.4078, 0.3569, 0.3294,  ..., 0.0078, 0.0039, 0.0039],
         [0.3333, 0.2980, 0.2706,  ..., 0.0039, 0.0039, 0.0039],
         [0.1412, 0.1333, 0.1294,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         ...,
         [0.4078, 0.3569, 0.3294,  ..., 0.0078, 0.0039, 0.0039],
         [0.3333, 0.2980, 0.2706,  ..., 0.0039, 0.0039, 0.0039],
         [0.1412, 0.1333, 0.1294,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0078],
         ...,
         [0.4078, 0.3569, 0.3294,  ..., 0.0078, 0.0039, 0.0039],
         [0.3333, 0.2980, 0.2706,  ..., 0.0039, 0.0039, 0.0039],
         [0.1412, 0.1333, 0.1294,  ..., 0.0039, 0.0039, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0549, 0.0667, 0.0353,  ..., 0.0118, 0.0118, 0.0157],
         [0.0235, 0.0275, 0.0196,  ..., 0.0118, 0.0118, 0.0196],
         [0.0078, 0.0118, 0.0118,  ..., 0.0157, 0.0157, 0.0275],
         ...,
         [0.0157, 0.0157, 0.0157,  ..., 0.0039, 0.0157, 0.0353],
         [0.0196, 0.0157, 0.0118,  ..., 0.0078, 0.0235, 0.0510],
         [0.0196, 0.0157, 0.0118,  ..., 0.0118, 0.0314, 0.0588]],
        [[0.0549, 0.0667, 0.0353,  ..., 0.0118, 0.0118, 0.0157],
         [0.0235, 0.0275, 0.0196,  ..., 0.0118, 0.0118, 0.0196],
         [0.0078, 0.0118, 0.0118,  ..., 0.0157, 0.0157, 0.0275],
         ...,
         [0.0157, 0.0157, 0.0157,  ..., 0.0039, 0.0157, 0.0353],
         [0.0196, 0.0157, 0.0118,  ..., 0.0078, 0.0235, 0.0510],
         [0.0196, 0.0157, 0.0118,  ..., 0.0118, 0.0314, 0.0588]],
        [[0.0549, 0.0667, 0.0353,  ..., 0.0118, 0.0118, 0.0157],
         [0.0235, 0.0275, 0.0196,  ..., 0.0118, 0.0118, 0.0196],
         [0.0078, 0.0118, 0.0118,  ..., 0.0157, 0.0157, 0.0275],
         ...,
         [0.0157, 0.0157, 0.0157,  ..., 0.0039, 0.0157, 0.0353],
         [0.0196, 0.0157, 0.0118,  ..., 0.0078, 0.0235, 0.0510],
         [0.0196, 0.0157, 0.0118,  ..., 0.0118, 0.0314, 0.0588]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0588, 0.1098, 0.1529,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0549, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0196, 0.0392,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0078, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039]],
        [[0.0588, 0.1098, 0.1529,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0549, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0196, 0.0392,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0078, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039]],
        [[0.0588, 0.1098, 0.1529,  ..., 0.0000, 0.0000, 0.0000],
         [0.0275, 0.0549, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0196, 0.0392,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0078, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0118, 0.0078, 0.0078,  ..., 0.0157, 0.0157, 0.0196],
         [0.0157, 0.0118, 0.0078,  ..., 0.0157, 0.0235, 0.0235],
         [0.0235, 0.0157, 0.0157,  ..., 0.0196, 0.0275, 0.0235]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0118, 0.0078, 0.0078,  ..., 0.0157, 0.0157, 0.0196],
         [0.0157, 0.0118, 0.0078,  ..., 0.0157, 0.0235, 0.0235],
         [0.0235, 0.0157, 0.0157,  ..., 0.0196, 0.0275, 0.0235]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0196],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.0118, 0.0078, 0.0078,  ..., 0.0157, 0.0157, 0.0196],
         [0.0157, 0.0118, 0.0078,  ..., 0.0157, 0.0235, 0.0235],
         [0.0235, 0.0157, 0.0157,  ..., 0.0196, 0.0275, 0.0235]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0784, 0.0588, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.1294, 0.0902, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.1412, 0.1059, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0196, 0.0235, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0392, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0510, 0.0706,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0784, 0.0588, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.1294, 0.0902, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.1412, 0.1059, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0196, 0.0235, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0392, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0510, 0.0706,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0784, 0.0588, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.1294, 0.0902, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.1412, 0.1059, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0196, 0.0235, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0314, 0.0392, 0.0510,  ..., 0.0000, 0.0000, 0.0000],
         [0.0471, 0.0510, 0.0706,  ..., 0.0039, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0118, 0.0078, 0.0078,  ..., 0.2275, 0.2471, 0.3412],
         [0.0078, 0.0078, 0.0078,  ..., 0.2000, 0.2196, 0.3765],
         [0.0118, 0.0118, 0.0157,  ..., 0.1490, 0.2039, 0.3098],
         ...,
         [0.1608, 0.3373, 0.3804,  ..., 0.2275, 0.1922, 0.1216],
         [0.3882, 0.5608, 0.4549,  ..., 0.2902, 0.2000, 0.1176],
         [0.4471, 0.6275, 0.4275,  ..., 0.3569, 0.2196, 0.1333]],
        [[0.0118, 0.0078, 0.0078,  ..., 0.2275, 0.2471, 0.3412],
         [0.0078, 0.0078, 0.0078,  ..., 0.2000, 0.2196, 0.3765],
         [0.0118, 0.0118, 0.0157,  ..., 0.1490, 0.2039, 0.3098],
         ...,
         [0.1608, 0.3373, 0.3804,  ..., 0.2275, 0.1922, 0.1216],
         [0.3882, 0.5608, 0.4549,  ..., 0.2902, 0.2000, 0.1176],
         [0.4471, 0.6275, 0.4275,  ..., 0.3569, 0.2196, 0.1333]],
        [[0.0118, 0.0078, 0.0078,  ..., 0.2275, 0.2471, 0.3412],
         [0.0078, 0.0078, 0.0078,  ..., 0.2000, 0.2196, 0.3765],
         [0.0118, 0.0118, 0.0157,  ..., 0.1490, 0.2039, 0.3098],
         ...,
         [0.1608, 0.3373, 0.3804,  ..., 0.2275, 0.1922, 0.1216],
         [0.3882, 0.5608, 0.4549,  ..., 0.2902, 0.2000, 0.1176],
         [0.4471, 0.6275, 0.4275,  ..., 0.3569, 0.2196, 0.1333]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.2980, 0.2392, 0.1843],
         [0.0000, 0.0000, 0.0000,  ..., 0.3059, 0.2745, 0.2471],
         [0.0000, 0.0000, 0.0000,  ..., 0.3059, 0.3294, 0.2824],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0157, 0.0118, 0.0078],
         [0.0039, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         [0.0039, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0157]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.2980, 0.2392, 0.1843],
         [0.0000, 0.0000, 0.0000,  ..., 0.3059, 0.2745, 0.2471],
         [0.0000, 0.0000, 0.0000,  ..., 0.3059, 0.3294, 0.2824],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0157, 0.0118, 0.0078],
         [0.0039, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         [0.0039, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0157]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.2980, 0.2392, 0.1843],
         [0.0000, 0.0000, 0.0000,  ..., 0.3059, 0.2745, 0.2471],
         [0.0000, 0.0000, 0.0000,  ..., 0.3059, 0.3294, 0.2824],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0157, 0.0118, 0.0078],
         [0.0039, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         [0.0039, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0157]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0863, 0.1059, 0.1176,  ..., 0.0000, 0.0000, 0.0000],
         [0.0824, 0.0902, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0824, 0.0863, 0.0902,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0431, 0.0471, 0.0549,  ..., 0.0471, 0.0471, 0.0510],
         [0.0471, 0.0588, 0.0588,  ..., 0.0627, 0.0627, 0.0510],
         [0.0667, 0.0980, 0.0980,  ..., 0.0706, 0.0667, 0.0549]],
        [[0.0863, 0.1059, 0.1176,  ..., 0.0000, 0.0000, 0.0000],
         [0.0824, 0.0902, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0824, 0.0863, 0.0902,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0431, 0.0471, 0.0549,  ..., 0.0471, 0.0471, 0.0510],
         [0.0471, 0.0588, 0.0588,  ..., 0.0627, 0.0627, 0.0510],
         [0.0667, 0.0980, 0.0980,  ..., 0.0706, 0.0667, 0.0549]],
        [[0.0863, 0.1059, 0.1176,  ..., 0.0000, 0.0000, 0.0000],
         [0.0824, 0.0902, 0.0941,  ..., 0.0000, 0.0000, 0.0000],
         [0.0824, 0.0863, 0.0902,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0431, 0.0471, 0.0549,  ..., 0.0471, 0.0471, 0.0510],
         [0.0471, 0.0588, 0.0588,  ..., 0.0627, 0.0627, 0.0510],
         [0.0667, 0.0980, 0.0980,  ..., 0.0706, 0.0667, 0.0549]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0118, 0.0157, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0078],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0078,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0353, 0.0235, 0.0196,  ..., 0.0706, 0.0471, 0.0353],
         [0.0392, 0.0314, 0.0275,  ..., 0.0588, 0.0392, 0.0314],
         [0.0627, 0.0784, 0.0863,  ..., 0.0353, 0.0314, 0.0235],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.3451, 0.6157, 0.6392],
         [0.0000, 0.0039, 0.0039,  ..., 0.2902, 0.5059, 0.5843],
         [0.0039, 0.0039, 0.0039,  ..., 0.2824, 0.4000, 0.5059]],
        [[0.0353, 0.0235, 0.0196,  ..., 0.0706, 0.0471, 0.0353],
         [0.0392, 0.0314, 0.0275,  ..., 0.0588, 0.0392, 0.0314],
         [0.0627, 0.0784, 0.0863,  ..., 0.0353, 0.0314, 0.0235],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.3451, 0.6157, 0.6392],
         [0.0000, 0.0039, 0.0039,  ..., 0.2902, 0.5059, 0.5843],
         [0.0039, 0.0039, 0.0039,  ..., 0.2824, 0.4000, 0.5059]],
        [[0.0353, 0.0235, 0.0196,  ..., 0.0706, 0.0471, 0.0353],
         [0.0392, 0.0314, 0.0275,  ..., 0.0588, 0.0392, 0.0314],
         [0.0627, 0.0784, 0.0863,  ..., 0.0353, 0.0314, 0.0235],
         ...,
         [0.0000, 0.0039, 0.0039,  ..., 0.3451, 0.6157, 0.6392],
         [0.0000, 0.0039, 0.0039,  ..., 0.2902, 0.5059, 0.5843],
         [0.0039, 0.0039, 0.0039,  ..., 0.2824, 0.4000, 0.5059]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.3255, 0.4510, 0.6863],
         [0.0000, 0.0000, 0.0000,  ..., 0.1725, 0.2392, 0.3922],
         [0.0000, 0.0000, 0.0000,  ..., 0.1647, 0.1922, 0.2392],
         ...,
         [0.0118, 0.0039, 0.0039,  ..., 0.0745, 0.1373, 0.3020],
         [0.0039, 0.0039, 0.0039,  ..., 0.1490, 0.2510, 0.4549],
         [0.0078, 0.0039, 0.0039,  ..., 0.2392, 0.3176, 0.5059]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.3255, 0.4510, 0.6863],
         [0.0000, 0.0000, 0.0000,  ..., 0.1725, 0.2392, 0.3922],
         [0.0000, 0.0000, 0.0000,  ..., 0.1647, 0.1922, 0.2392],
         ...,
         [0.0118, 0.0039, 0.0039,  ..., 0.0745, 0.1373, 0.3020],
         [0.0039, 0.0039, 0.0039,  ..., 0.1490, 0.2510, 0.4549],
         [0.0078, 0.0039, 0.0039,  ..., 0.2392, 0.3176, 0.5059]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.3255, 0.4510, 0.6863],
         [0.0000, 0.0000, 0.0000,  ..., 0.1725, 0.2392, 0.3922],
         [0.0000, 0.0000, 0.0000,  ..., 0.1647, 0.1922, 0.2392],
         ...,
         [0.0118, 0.0039, 0.0039,  ..., 0.0745, 0.1373, 0.3020],
         [0.0039, 0.0039, 0.0039,  ..., 0.1490, 0.2510, 0.4549],
         [0.0078, 0.0039, 0.0039,  ..., 0.2392, 0.3176, 0.5059]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 0.],
        [1., 1., 1.,  ..., 1., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1922, 0.1765, 0.1490,  ..., 0.0431, 0.0471, 0.0706],
         [0.3255, 0.2667, 0.2275,  ..., 0.0118, 0.0196, 0.0196],
         [0.2941, 0.2627, 0.2118,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.1216, 0.1255, 0.0902,  ..., 0.0235, 0.0353, 0.0471],
         [0.1098, 0.1255, 0.0784,  ..., 0.0235, 0.0235, 0.0275],
         [0.0824, 0.0941, 0.0745,  ..., 0.0118, 0.0118, 0.0118]],
        [[0.1922, 0.1765, 0.1490,  ..., 0.0431, 0.0471, 0.0706],
         [0.3255, 0.2667, 0.2275,  ..., 0.0118, 0.0196, 0.0196],
         [0.2941, 0.2627, 0.2118,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.1216, 0.1255, 0.0902,  ..., 0.0235, 0.0353, 0.0471],
         [0.1098, 0.1255, 0.0784,  ..., 0.0235, 0.0235, 0.0275],
         [0.0824, 0.0941, 0.0745,  ..., 0.0118, 0.0118, 0.0118]],
        [[0.1922, 0.1765, 0.1490,  ..., 0.0431, 0.0471, 0.0706],
         [0.3255, 0.2667, 0.2275,  ..., 0.0118, 0.0196, 0.0196],
         [0.2941, 0.2627, 0.2118,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.1216, 0.1255, 0.0902,  ..., 0.0235, 0.0353, 0.0471],
         [0.1098, 0.1255, 0.0784,  ..., 0.0235, 0.0235, 0.0275],
         [0.0824, 0.0941, 0.0745,  ..., 0.0118, 0.0118, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0118, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0471,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0118, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078]],
        [[0.0000, 0.0118, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0471,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0118, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078]],
        [[0.0000, 0.0118, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0078, 0.0471,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0118, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0039],
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.5216, 0.4902, 0.3333,  ..., 0.2588, 0.1608, 0.1059],
         [0.4549, 0.4314, 0.3412,  ..., 0.2275, 0.1451, 0.1059],
         [0.3529, 0.3843, 0.4196,  ..., 0.1373, 0.1059, 0.0863],
         ...,
         [0.0471, 0.0196, 0.0157,  ..., 0.0706, 0.2118, 0.3490],
         [0.0667, 0.0392, 0.0392,  ..., 0.0706, 0.2235, 0.4275],
         [0.0784, 0.0824, 0.0784,  ..., 0.1333, 0.3765, 0.6078]],
        [[0.5216, 0.4902, 0.3333,  ..., 0.2588, 0.1608, 0.1059],
         [0.4549, 0.4314, 0.3412,  ..., 0.2275, 0.1451, 0.1059],
         [0.3529, 0.3843, 0.4196,  ..., 0.1373, 0.1059, 0.0863],
         ...,
         [0.0471, 0.0196, 0.0157,  ..., 0.0706, 0.2118, 0.3490],
         [0.0667, 0.0392, 0.0392,  ..., 0.0706, 0.2235, 0.4275],
         [0.0784, 0.0824, 0.0784,  ..., 0.1333, 0.3765, 0.6078]],
        [[0.5216, 0.4902, 0.3333,  ..., 0.2588, 0.1608, 0.1059],
         [0.4549, 0.4314, 0.3412,  ..., 0.2275, 0.1451, 0.1059],
         [0.3529, 0.3843, 0.4196,  ..., 0.1373, 0.1059, 0.0863],
         ...,
         [0.0471, 0.0196, 0.0157,  ..., 0.0706, 0.2118, 0.3490],
         [0.0667, 0.0392, 0.0392,  ..., 0.0706, 0.2235, 0.4275],
         [0.0784, 0.0824, 0.0784,  ..., 0.1333, 0.3765, 0.6078]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 0.],
        [0., 0., 0.,  ..., 1., 1., 0.],
        [0., 0., 0.,  ..., 1., 1., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0275, 0.0745],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0314, 0.0706],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0353, 0.0667],
         ...,
         [0.0627, 0.0902, 0.1412,  ..., 0.0902, 0.0510, 0.0314],
         [0.0431, 0.0549, 0.1176,  ..., 0.0706, 0.0392, 0.0275],
         [0.0314, 0.0471, 0.0902,  ..., 0.0471, 0.0275, 0.0235]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0275, 0.0745],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0314, 0.0706],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0353, 0.0667],
         ...,
         [0.0627, 0.0902, 0.1412,  ..., 0.0902, 0.0510, 0.0314],
         [0.0431, 0.0549, 0.1176,  ..., 0.0706, 0.0392, 0.0275],
         [0.0314, 0.0471, 0.0902,  ..., 0.0471, 0.0275, 0.0235]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0275, 0.0745],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0314, 0.0706],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0353, 0.0667],
         ...,
         [0.0627, 0.0902, 0.1412,  ..., 0.0902, 0.0510, 0.0314],
         [0.0431, 0.0549, 0.1176,  ..., 0.0706, 0.0392, 0.0275],
         [0.0314, 0.0471, 0.0902,  ..., 0.0471, 0.0275, 0.0235]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0078, 0.0157, 0.0157,  ..., 0.0471, 0.0314, 0.0471],
         [0.0118, 0.0196, 0.0196,  ..., 0.0667, 0.0549, 0.0784],
         [0.0196, 0.0235, 0.0275,  ..., 0.0745, 0.0745, 0.0980],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0431, 0.0235, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0118, 0.0039]],
        [[0.0078, 0.0157, 0.0157,  ..., 0.0471, 0.0314, 0.0471],
         [0.0118, 0.0196, 0.0196,  ..., 0.0667, 0.0549, 0.0784],
         [0.0196, 0.0235, 0.0275,  ..., 0.0745, 0.0745, 0.0980],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0431, 0.0235, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0118, 0.0039]],
        [[0.0078, 0.0157, 0.0157,  ..., 0.0471, 0.0314, 0.0471],
         [0.0118, 0.0196, 0.0196,  ..., 0.0667, 0.0549, 0.0784],
         [0.0196, 0.0235, 0.0275,  ..., 0.0745, 0.0745, 0.0980],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0431, 0.0235, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0196, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0118, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
Epoch 54/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 54/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.30img/s, loss (batch)=0.909]
Epoch 55/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 55/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.24img/s, loss (batch)=1.26]
Epoch 56/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 56/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.52img/s, loss (batch)=0.806]
Epoch 57/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 57/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.96img/s, loss (batch)=0.846]
Epoch 58/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.7490, 0.7098, 0.6627,  ..., 0.1647, 0.0941, 0.0824],
         [0.7608, 0.7451, 0.7333,  ..., 0.1020, 0.0941, 0.0824],
         [0.5529, 0.5412, 0.6392,  ..., 0.1059, 0.0980, 0.0863],
         ...,
         [0.0588, 0.1020, 0.1216,  ..., 0.0039, 0.0039, 0.0078],
         [0.0510, 0.0941, 0.1137,  ..., 0.0039, 0.0078, 0.0078],
         [0.0471, 0.0784, 0.1137,  ..., 0.0039, 0.0078, 0.0118]],
        [[0.7490, 0.7098, 0.6627,  ..., 0.1647, 0.0941, 0.0824],
         [0.7608, 0.7451, 0.7333,  ..., 0.1020, 0.0941, 0.0824],
         [0.5529, 0.5412, 0.6392,  ..., 0.1059, 0.0980, 0.0863],
         ...,
         [0.0588, 0.1020, 0.1216,  ..., 0.0039, 0.0039, 0.0078],
         [0.0510, 0.0941, 0.1137,  ..., 0.0039, 0.0078, 0.0078],
         [0.0471, 0.0784, 0.1137,  ..., 0.0039, 0.0078, 0.0118]],
        [[0.7490, 0.7098, 0.6627,  ..., 0.1647, 0.0941, 0.0824],
         [0.7608, 0.7451, 0.7333,  ..., 0.1020, 0.0941, 0.0824],
         [0.5529, 0.5412, 0.6392,  ..., 0.1059, 0.0980, 0.0863],
         ...,
         [0.0588, 0.1020, 0.1216,  ..., 0.0039, 0.0039, 0.0078],
         [0.0510, 0.0941, 0.1137,  ..., 0.0039, 0.0078, 0.0078],
         [0.0471, 0.0784, 0.1137,  ..., 0.0039, 0.0078, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0510, 0.0745, 0.0902,  ..., 0.0078, 0.0078, 0.0039],
         [0.0627, 0.0745, 0.0902,  ..., 0.0039, 0.0039, 0.0000],
         [0.0784, 0.0784, 0.0863,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0510, 0.0745, 0.0902,  ..., 0.0078, 0.0078, 0.0039],
         [0.0627, 0.0745, 0.0902,  ..., 0.0039, 0.0039, 0.0000],
         [0.0784, 0.0784, 0.0863,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000]],
        [[0.0510, 0.0745, 0.0902,  ..., 0.0078, 0.0078, 0.0039],
         [0.0627, 0.0745, 0.0902,  ..., 0.0039, 0.0039, 0.0000],
         [0.0784, 0.0784, 0.0863,  ..., 0.0039, 0.0000, 0.0000],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0078,  ..., 0.0118, 0.0157, 0.0157],
         [0.0039, 0.0078, 0.0118,  ..., 0.0157, 0.0118, 0.0078],
         [0.0039, 0.0118, 0.0157,  ..., 0.0157, 0.0118, 0.0118],
         ...,
         [0.0157, 0.0157, 0.0078,  ..., 0.1686, 0.1529, 0.1451],
         [0.0078, 0.0078, 0.0078,  ..., 0.1647, 0.1686, 0.1922],
         [0.0078, 0.0078, 0.0118,  ..., 0.1922, 0.2078, 0.2706]],
        [[0.0000, 0.0039, 0.0078,  ..., 0.0118, 0.0157, 0.0157],
         [0.0039, 0.0078, 0.0118,  ..., 0.0157, 0.0118, 0.0078],
         [0.0039, 0.0118, 0.0157,  ..., 0.0157, 0.0118, 0.0118],
         ...,
         [0.0157, 0.0157, 0.0078,  ..., 0.1686, 0.1529, 0.1451],
         [0.0078, 0.0078, 0.0078,  ..., 0.1647, 0.1686, 0.1922],
         [0.0078, 0.0078, 0.0118,  ..., 0.1922, 0.2078, 0.2706]],
        [[0.0000, 0.0039, 0.0078,  ..., 0.0118, 0.0157, 0.0157],
         [0.0039, 0.0078, 0.0118,  ..., 0.0157, 0.0118, 0.0078],
         [0.0039, 0.0118, 0.0157,  ..., 0.0157, 0.0118, 0.0118],
         ...,
         [0.0157, 0.0157, 0.0078,  ..., 0.1686, 0.1529, 0.1451],
         [0.0078, 0.0078, 0.0078,  ..., 0.1647, 0.1686, 0.1922],
         [0.0078, 0.0078, 0.0118,  ..., 0.1922, 0.2078, 0.2706]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0235, 0.0118],
         [0.0235, 0.0196, 0.0118,  ..., 0.0784, 0.0431, 0.0235],
         [0.0392, 0.0314, 0.0235,  ..., 0.0980, 0.0667, 0.0392],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0235, 0.0118]],
        [[0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0235, 0.0118],
         [0.0235, 0.0196, 0.0118,  ..., 0.0784, 0.0431, 0.0235],
         [0.0392, 0.0314, 0.0235,  ..., 0.0980, 0.0667, 0.0392],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0235, 0.0118]],
        [[0.0157, 0.0118, 0.0078,  ..., 0.0431, 0.0235, 0.0118],
         [0.0235, 0.0196, 0.0118,  ..., 0.0784, 0.0431, 0.0235],
         [0.0392, 0.0314, 0.0235,  ..., 0.0980, 0.0667, 0.0392],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0157, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0235, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.4000, 0.4824, 0.2863,  ..., 0.0078, 0.0118, 0.0118],
         [0.5765, 0.7529, 0.5804,  ..., 0.0157, 0.0118, 0.0118],
         [0.3490, 0.5686, 0.6039,  ..., 0.0471, 0.0196, 0.0118],
         ...,
         [0.0157, 0.0118, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0392, 0.0314, 0.0118,  ..., 0.0039, 0.0000, 0.0000],
         [0.0902, 0.0706, 0.0314,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.4000, 0.4824, 0.2863,  ..., 0.0078, 0.0118, 0.0118],
         [0.5765, 0.7529, 0.5804,  ..., 0.0157, 0.0118, 0.0118],
         [0.3490, 0.5686, 0.6039,  ..., 0.0471, 0.0196, 0.0118],
         ...,
         [0.0157, 0.0118, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0392, 0.0314, 0.0118,  ..., 0.0039, 0.0000, 0.0000],
         [0.0902, 0.0706, 0.0314,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.4000, 0.4824, 0.2863,  ..., 0.0078, 0.0118, 0.0118],
         [0.5765, 0.7529, 0.5804,  ..., 0.0157, 0.0118, 0.0118],
         [0.3490, 0.5686, 0.6039,  ..., 0.0471, 0.0196, 0.0118],
         ...,
         [0.0157, 0.0118, 0.0118,  ..., 0.0039, 0.0039, 0.0039],
         [0.0392, 0.0314, 0.0118,  ..., 0.0039, 0.0000, 0.0000],
         [0.0902, 0.0706, 0.0314,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0000, 0.0000,  ..., 0.0235, 0.0431, 0.0941],
         [0.0510, 0.0078, 0.0000,  ..., 0.0431, 0.0706, 0.1255],
         [0.0863, 0.0314, 0.0118,  ..., 0.0745, 0.1020, 0.1294],
         ...,
         [0.1529, 0.0471, 0.0118,  ..., 0.0863, 0.1137, 0.2627],
         [0.0235, 0.0078, 0.0039,  ..., 0.1098, 0.1333, 0.2745],
         [0.0039, 0.0000, 0.0000,  ..., 0.1137, 0.1373, 0.1686]],
        [[0.0039, 0.0000, 0.0000,  ..., 0.0235, 0.0431, 0.0941],
         [0.0510, 0.0078, 0.0000,  ..., 0.0431, 0.0706, 0.1255],
         [0.0863, 0.0314, 0.0118,  ..., 0.0745, 0.1020, 0.1294],
         ...,
         [0.1529, 0.0471, 0.0118,  ..., 0.0863, 0.1137, 0.2627],
         [0.0235, 0.0078, 0.0039,  ..., 0.1098, 0.1333, 0.2745],
         [0.0039, 0.0000, 0.0000,  ..., 0.1137, 0.1373, 0.1686]],
        [[0.0039, 0.0000, 0.0000,  ..., 0.0235, 0.0431, 0.0941],
         [0.0510, 0.0078, 0.0000,  ..., 0.0431, 0.0706, 0.1255],
         [0.0863, 0.0314, 0.0118,  ..., 0.0745, 0.1020, 0.1294],
         ...,
         [0.1529, 0.0471, 0.0118,  ..., 0.0863, 0.1137, 0.2627],
         [0.0235, 0.0078, 0.0039,  ..., 0.1098, 0.1333, 0.2745],
         [0.0039, 0.0000, 0.0000,  ..., 0.1137, 0.1373, 0.1686]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0118, 0.0118, 0.0235,  ..., 0.0510, 0.0510, 0.0431],
         [0.0196, 0.0196, 0.0275,  ..., 0.0314, 0.0275, 0.0314],
         [0.0196, 0.0196, 0.0235,  ..., 0.0196, 0.0196, 0.0353]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0118, 0.0118, 0.0235,  ..., 0.0510, 0.0510, 0.0431],
         [0.0196, 0.0196, 0.0275,  ..., 0.0314, 0.0275, 0.0314],
         [0.0196, 0.0196, 0.0235,  ..., 0.0196, 0.0196, 0.0353]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0078, 0.0039,  ..., 0.0039, 0.0000, 0.0000],
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0118, 0.0118, 0.0235,  ..., 0.0510, 0.0510, 0.0431],
         [0.0196, 0.0196, 0.0275,  ..., 0.0314, 0.0275, 0.0314],
         [0.0196, 0.0196, 0.0235,  ..., 0.0196, 0.0196, 0.0353]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.0902, 0.0510],
         [0.0000, 0.0000, 0.0039,  ..., 0.1137, 0.0824, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.0549, 0.0392],
         ...,
         [0.0275, 0.0235, 0.0235,  ..., 0.0784, 0.0667, 0.0510],
         [0.0275, 0.0314, 0.0314,  ..., 0.0784, 0.0706, 0.0588],
         [0.0235, 0.0314, 0.0431,  ..., 0.1020, 0.0980, 0.0745]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.0902, 0.0510],
         [0.0000, 0.0000, 0.0039,  ..., 0.1137, 0.0824, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.0549, 0.0392],
         ...,
         [0.0275, 0.0235, 0.0235,  ..., 0.0784, 0.0667, 0.0510],
         [0.0275, 0.0314, 0.0314,  ..., 0.0784, 0.0706, 0.0588],
         [0.0235, 0.0314, 0.0431,  ..., 0.1020, 0.0980, 0.0745]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.1333, 0.0902, 0.0510],
         [0.0000, 0.0000, 0.0039,  ..., 0.1137, 0.0824, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0824, 0.0549, 0.0392],
         ...,
         [0.0275, 0.0235, 0.0235,  ..., 0.0784, 0.0667, 0.0510],
         [0.0275, 0.0314, 0.0314,  ..., 0.0784, 0.0706, 0.0588],
         [0.0235, 0.0314, 0.0431,  ..., 0.1020, 0.0980, 0.0745]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.3961, 0.3490, 0.3333,  ..., 0.0196, 0.0627, 0.1725],
         [0.4118, 0.3529, 0.3098,  ..., 0.0118, 0.0353, 0.1059],
         [0.3569, 0.3412, 0.3137,  ..., 0.0078, 0.0196, 0.0549],
         ...,
         [0.0275, 0.0392, 0.0431,  ..., 0.3098, 0.2863, 0.2431],
         [0.0157, 0.0196, 0.0235,  ..., 0.4118, 0.4314, 0.4000],
         [0.0078, 0.0118, 0.0118,  ..., 0.5843, 0.6392, 0.6235]],
        [[0.3961, 0.3490, 0.3333,  ..., 0.0196, 0.0627, 0.1725],
         [0.4118, 0.3529, 0.3098,  ..., 0.0118, 0.0353, 0.1059],
         [0.3569, 0.3412, 0.3137,  ..., 0.0078, 0.0196, 0.0549],
         ...,
         [0.0275, 0.0392, 0.0431,  ..., 0.3098, 0.2863, 0.2431],
         [0.0157, 0.0196, 0.0235,  ..., 0.4118, 0.4314, 0.4000],
         [0.0078, 0.0118, 0.0118,  ..., 0.5843, 0.6392, 0.6235]],
        [[0.3961, 0.3490, 0.3333,  ..., 0.0196, 0.0627, 0.1725],
         [0.4118, 0.3529, 0.3098,  ..., 0.0118, 0.0353, 0.1059],
         [0.3569, 0.3412, 0.3137,  ..., 0.0078, 0.0196, 0.0549],
         ...,
         [0.0275, 0.0392, 0.0431,  ..., 0.3098, 0.2863, 0.2431],
         [0.0157, 0.0196, 0.0235,  ..., 0.4118, 0.4314, 0.4000],
         [0.0078, 0.0118, 0.0118,  ..., 0.5843, 0.6392, 0.6235]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1294, 0.1059, 0.0784,  ..., 0.0118, 0.0039, 0.0000],
         [0.1294, 0.1020, 0.0863,  ..., 0.0157, 0.0078, 0.0039],
         [0.1373, 0.1059, 0.1020,  ..., 0.0196, 0.0157, 0.0118],
         ...,
         [0.0000, 0.0078, 0.0275,  ..., 0.0275, 0.0314, 0.0745],
         [0.0118, 0.0157, 0.0196,  ..., 0.0235, 0.0314, 0.0510],
         [0.0392, 0.0353, 0.0275,  ..., 0.0314, 0.0431, 0.0510]],
        [[0.1294, 0.1059, 0.0784,  ..., 0.0118, 0.0039, 0.0000],
         [0.1294, 0.1020, 0.0863,  ..., 0.0157, 0.0078, 0.0039],
         [0.1373, 0.1059, 0.1020,  ..., 0.0196, 0.0157, 0.0118],
         ...,
         [0.0000, 0.0078, 0.0275,  ..., 0.0275, 0.0314, 0.0745],
         [0.0118, 0.0157, 0.0196,  ..., 0.0235, 0.0314, 0.0510],
         [0.0392, 0.0353, 0.0275,  ..., 0.0314, 0.0431, 0.0510]],
        [[0.1294, 0.1059, 0.0784,  ..., 0.0118, 0.0039, 0.0000],
         [0.1294, 0.1020, 0.0863,  ..., 0.0157, 0.0078, 0.0039],
         [0.1373, 0.1059, 0.1020,  ..., 0.0196, 0.0157, 0.0118],
         ...,
         [0.0000, 0.0078, 0.0275,  ..., 0.0275, 0.0314, 0.0745],
         [0.0118, 0.0157, 0.0196,  ..., 0.0235, 0.0314, 0.0510],
         [0.0392, 0.0353, 0.0275,  ..., 0.0314, 0.0431, 0.0510]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0196, 0.0235, 0.0275,  ..., 0.0627, 0.0431, 0.0471],
         [0.0196, 0.0196, 0.0196,  ..., 0.0667, 0.0471, 0.0431],
         [0.0235, 0.0235, 0.0314,  ..., 0.0627, 0.0471, 0.0392],
         ...,
         [0.1373, 0.1412, 0.1843,  ..., 0.0196, 0.0235, 0.0392],
         [0.1490, 0.1490, 0.1804,  ..., 0.0157, 0.0196, 0.0235],
         [0.1137, 0.1255, 0.1333,  ..., 0.0157, 0.0196, 0.0235]],
        [[0.0196, 0.0235, 0.0275,  ..., 0.0627, 0.0431, 0.0471],
         [0.0196, 0.0196, 0.0196,  ..., 0.0667, 0.0471, 0.0431],
         [0.0235, 0.0235, 0.0314,  ..., 0.0627, 0.0471, 0.0392],
         ...,
         [0.1373, 0.1412, 0.1843,  ..., 0.0196, 0.0235, 0.0392],
         [0.1490, 0.1490, 0.1804,  ..., 0.0157, 0.0196, 0.0235],
         [0.1137, 0.1255, 0.1333,  ..., 0.0157, 0.0196, 0.0235]],
        [[0.0196, 0.0235, 0.0275,  ..., 0.0627, 0.0431, 0.0471],
         [0.0196, 0.0196, 0.0196,  ..., 0.0667, 0.0471, 0.0431],
         [0.0235, 0.0235, 0.0314,  ..., 0.0627, 0.0471, 0.0392],
         ...,
         [0.1373, 0.1412, 0.1843,  ..., 0.0196, 0.0235, 0.0392],
         [0.1490, 0.1490, 0.1804,  ..., 0.0157, 0.0196, 0.0235],
         [0.1137, 0.1255, 0.1333,  ..., 0.0157, 0.0196, 0.0235]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 58/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  5.99img/s, loss (batch)=1.12]
Epoch 59/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 59/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.95img/s, loss (batch)=1.13]
Epoch 60/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 60/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  7.93img/s, loss (batch)=0.781]
Epoch 61/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 61/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.52img/s, loss (batch)=0.936]
Epoch 62/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 62/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.87img/s, loss (batch)=1.06]
sample {'image': tensor([[[0.0275, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0078, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0784, 0.0706, 0.0667,  ..., 0.0980, 0.1216, 0.1490],
         [0.1176, 0.0941, 0.0745,  ..., 0.1098, 0.1333, 0.1412],
         [0.0667, 0.0627, 0.0745,  ..., 0.1255, 0.1176, 0.1137]],
        [[0.0275, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0078, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0784, 0.0706, 0.0667,  ..., 0.0980, 0.1216, 0.1490],
         [0.1176, 0.0941, 0.0745,  ..., 0.1098, 0.1333, 0.1412],
         [0.0667, 0.0627, 0.0745,  ..., 0.1255, 0.1176, 0.1137]],
        [[0.0275, 0.0157, 0.0118,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0078, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0784, 0.0706, 0.0667,  ..., 0.0980, 0.1216, 0.1490],
         [0.1176, 0.0941, 0.0745,  ..., 0.1098, 0.1333, 0.1412],
         [0.0667, 0.0627, 0.0745,  ..., 0.1255, 0.1176, 0.1137]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0118, 0.0118, 0.0078,  ..., 0.0000, 0.0039, 0.0039],
         [0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0078, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0235, 0.0078, 0.0039],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0196, 0.0118]],
        [[0.0118, 0.0118, 0.0078,  ..., 0.0000, 0.0039, 0.0039],
         [0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0078, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0235, 0.0078, 0.0039],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0196, 0.0118]],
        [[0.0118, 0.0118, 0.0078,  ..., 0.0000, 0.0039, 0.0039],
         [0.0118, 0.0078, 0.0039,  ..., 0.0039, 0.0039, 0.0078],
         [0.0078, 0.0078, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.0000, 0.0039, 0.0000,  ..., 0.0078, 0.0039, 0.0000],
         [0.0039, 0.0039, 0.0000,  ..., 0.0235, 0.0078, 0.0039],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0196, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0000, 0.0000],
         [0.0235, 0.0392, 0.0471,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0314, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0039,  ..., 0.0392, 0.0275, 0.0118],
         [0.0000, 0.0039, 0.0078,  ..., 0.0588, 0.0353, 0.0157]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0000, 0.0000],
         [0.0235, 0.0392, 0.0471,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0314, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0039,  ..., 0.0392, 0.0275, 0.0118],
         [0.0000, 0.0039, 0.0078,  ..., 0.0588, 0.0353, 0.0157]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000],
         [0.0039, 0.0078, 0.0118,  ..., 0.0039, 0.0000, 0.0000],
         [0.0235, 0.0392, 0.0471,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0039,  ..., 0.0314, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0039,  ..., 0.0392, 0.0275, 0.0118],
         [0.0000, 0.0039, 0.0078,  ..., 0.0588, 0.0353, 0.0157]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0549, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1882, 0.3020],
         ...,
         [0.0314, 0.0275, 0.0235,  ..., 0.4784, 0.4980, 0.3804],
         [0.0549, 0.0392, 0.0353,  ..., 0.2863, 0.2706, 0.3137],
         [0.0549, 0.0549, 0.0510,  ..., 0.2353, 0.2157, 0.2471]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0549, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1882, 0.3020],
         ...,
         [0.0314, 0.0275, 0.0235,  ..., 0.4784, 0.4980, 0.3804],
         [0.0549, 0.0392, 0.0353,  ..., 0.2863, 0.2706, 0.3137],
         [0.0549, 0.0549, 0.0510,  ..., 0.2353, 0.2157, 0.2471]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0392, 0.0549, 0.0588],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1882, 0.3020],
         ...,
         [0.0314, 0.0275, 0.0235,  ..., 0.4784, 0.4980, 0.3804],
         [0.0549, 0.0392, 0.0353,  ..., 0.2863, 0.2706, 0.3137],
         [0.0549, 0.0549, 0.0510,  ..., 0.2353, 0.2157, 0.2471]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1294, 0.1216, 0.0980,  ..., 0.0235, 0.0039, 0.0000],
         [0.1255, 0.1333, 0.1137,  ..., 0.0196, 0.0078, 0.0039],
         [0.1373, 0.1608, 0.1765,  ..., 0.0275, 0.0078, 0.0000],
         ...,
         [0.0431, 0.0706, 0.0941,  ..., 0.0078, 0.0118, 0.0118],
         [0.0431, 0.0588, 0.0863,  ..., 0.0039, 0.0039, 0.0039],
         [0.0314, 0.0510, 0.0863,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.1294, 0.1216, 0.0980,  ..., 0.0235, 0.0039, 0.0000],
         [0.1255, 0.1333, 0.1137,  ..., 0.0196, 0.0078, 0.0039],
         [0.1373, 0.1608, 0.1765,  ..., 0.0275, 0.0078, 0.0000],
         ...,
         [0.0431, 0.0706, 0.0941,  ..., 0.0078, 0.0118, 0.0118],
         [0.0431, 0.0588, 0.0863,  ..., 0.0039, 0.0039, 0.0039],
         [0.0314, 0.0510, 0.0863,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.1294, 0.1216, 0.0980,  ..., 0.0235, 0.0039, 0.0000],
         [0.1255, 0.1333, 0.1137,  ..., 0.0196, 0.0078, 0.0039],
         [0.1373, 0.1608, 0.1765,  ..., 0.0275, 0.0078, 0.0000],
         ...,
         [0.0431, 0.0706, 0.0941,  ..., 0.0078, 0.0118, 0.0118],
         [0.0431, 0.0588, 0.0863,  ..., 0.0039, 0.0039, 0.0039],
         [0.0314, 0.0510, 0.0863,  ..., 0.0039, 0.0039, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.1490, 0.1373, 0.1373,  ..., 0.0196, 0.0118, 0.0118],
         [0.1176, 0.1373, 0.1843,  ..., 0.0196, 0.0078, 0.0039],
         [0.1333, 0.1686, 0.2745,  ..., 0.0118, 0.0078, 0.0039],
         ...,
         [0.2784, 0.2510, 0.2314,  ..., 0.0000, 0.0000, 0.0000],
         [0.3098, 0.2902, 0.2275,  ..., 0.0000, 0.0000, 0.0000],
         [0.2510, 0.2078, 0.1804,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1490, 0.1373, 0.1373,  ..., 0.0196, 0.0118, 0.0118],
         [0.1176, 0.1373, 0.1843,  ..., 0.0196, 0.0078, 0.0039],
         [0.1333, 0.1686, 0.2745,  ..., 0.0118, 0.0078, 0.0039],
         ...,
         [0.2784, 0.2510, 0.2314,  ..., 0.0000, 0.0000, 0.0000],
         [0.3098, 0.2902, 0.2275,  ..., 0.0000, 0.0000, 0.0000],
         [0.2510, 0.2078, 0.1804,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1490, 0.1373, 0.1373,  ..., 0.0196, 0.0118, 0.0118],
         [0.1176, 0.1373, 0.1843,  ..., 0.0196, 0.0078, 0.0039],
         [0.1333, 0.1686, 0.2745,  ..., 0.0118, 0.0078, 0.0039],
         ...,
         [0.2784, 0.2510, 0.2314,  ..., 0.0000, 0.0000, 0.0000],
         [0.3098, 0.2902, 0.2275,  ..., 0.0000, 0.0000, 0.0000],
         [0.2510, 0.2078, 0.1804,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0000, 0.0000,  ..., 0.0157, 0.0039, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039],
         [0.0118, 0.0078, 0.0078,  ..., 0.0549, 0.0157, 0.0078],
         ...,
         [0.0118, 0.0118, 0.0039,  ..., 0.0549, 0.0510, 0.0392],
         [0.0157, 0.0118, 0.0039,  ..., 0.0235, 0.0235, 0.0275],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0118]],
        [[0.0039, 0.0000, 0.0000,  ..., 0.0157, 0.0039, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039],
         [0.0118, 0.0078, 0.0078,  ..., 0.0549, 0.0157, 0.0078],
         ...,
         [0.0118, 0.0118, 0.0039,  ..., 0.0549, 0.0510, 0.0392],
         [0.0157, 0.0118, 0.0039,  ..., 0.0235, 0.0235, 0.0275],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0118]],
        [[0.0039, 0.0000, 0.0000,  ..., 0.0157, 0.0039, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0275, 0.0078, 0.0039],
         [0.0118, 0.0078, 0.0078,  ..., 0.0549, 0.0157, 0.0078],
         ...,
         [0.0118, 0.0118, 0.0039,  ..., 0.0549, 0.0510, 0.0392],
         [0.0157, 0.0118, 0.0039,  ..., 0.0235, 0.0235, 0.0275],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0353, 0.0667, 0.0745,  ..., 0.0706, 0.1098, 0.2235],
         [0.0235, 0.0471, 0.0667,  ..., 0.1412, 0.1647, 0.2784],
         [0.0157, 0.0275, 0.0392,  ..., 0.2157, 0.2392, 0.2745],
         ...,
         [0.1255, 0.1294, 0.1020,  ..., 0.0078, 0.0039, 0.0039],
         [0.1373, 0.1412, 0.1020,  ..., 0.0078, 0.0039, 0.0039],
         [0.1412, 0.1451, 0.1294,  ..., 0.0078, 0.0078, 0.0078]],
        [[0.0353, 0.0667, 0.0745,  ..., 0.0706, 0.1098, 0.2235],
         [0.0235, 0.0471, 0.0667,  ..., 0.1412, 0.1647, 0.2784],
         [0.0157, 0.0275, 0.0392,  ..., 0.2157, 0.2392, 0.2745],
         ...,
         [0.1255, 0.1294, 0.1020,  ..., 0.0078, 0.0039, 0.0039],
         [0.1373, 0.1412, 0.1020,  ..., 0.0078, 0.0039, 0.0039],
         [0.1412, 0.1451, 0.1294,  ..., 0.0078, 0.0078, 0.0078]],
        [[0.0353, 0.0667, 0.0745,  ..., 0.0706, 0.1098, 0.2235],
         [0.0235, 0.0471, 0.0667,  ..., 0.1412, 0.1647, 0.2784],
         [0.0157, 0.0275, 0.0392,  ..., 0.2157, 0.2392, 0.2745],
         ...,
         [0.1255, 0.1294, 0.1020,  ..., 0.0078, 0.0039, 0.0039],
         [0.1373, 0.1412, 0.1020,  ..., 0.0078, 0.0039, 0.0039],
         [0.1412, 0.1451, 0.1294,  ..., 0.0078, 0.0078, 0.0078]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0275, 0.0235, 0.0235,  ..., 0.0275, 0.0235, 0.0235],
         [0.0235, 0.0275, 0.0314,  ..., 0.0235, 0.0196, 0.0157],
         [0.0235, 0.0196, 0.0235,  ..., 0.0157, 0.0157, 0.0118]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0275, 0.0235, 0.0235,  ..., 0.0275, 0.0235, 0.0235],
         [0.0235, 0.0275, 0.0314,  ..., 0.0235, 0.0196, 0.0157],
         [0.0235, 0.0196, 0.0235,  ..., 0.0157, 0.0157, 0.0118]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0275, 0.0235, 0.0235,  ..., 0.0275, 0.0235, 0.0235],
         [0.0235, 0.0275, 0.0314,  ..., 0.0235, 0.0196, 0.0157],
         [0.0235, 0.0196, 0.0235,  ..., 0.0157, 0.0157, 0.0118]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.1098, 0.1333, 0.1216,  ..., 0.0039, 0.0039, 0.0039],
         [0.0863, 0.1059, 0.1059,  ..., 0.0039, 0.0039, 0.0000],
         [0.0667, 0.0980, 0.1020,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0353, 0.0275, 0.0196,  ..., 0.0196, 0.0196, 0.0157],
         [0.0314, 0.0275, 0.0157,  ..., 0.0235, 0.0235, 0.0196],
         [0.0275, 0.0314, 0.0118,  ..., 0.0235, 0.0235, 0.0235]],
        [[0.1098, 0.1333, 0.1216,  ..., 0.0039, 0.0039, 0.0039],
         [0.0863, 0.1059, 0.1059,  ..., 0.0039, 0.0039, 0.0000],
         [0.0667, 0.0980, 0.1020,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0353, 0.0275, 0.0196,  ..., 0.0196, 0.0196, 0.0157],
         [0.0314, 0.0275, 0.0157,  ..., 0.0235, 0.0235, 0.0196],
         [0.0275, 0.0314, 0.0118,  ..., 0.0235, 0.0235, 0.0235]],
        [[0.1098, 0.1333, 0.1216,  ..., 0.0039, 0.0039, 0.0039],
         [0.0863, 0.1059, 0.1059,  ..., 0.0039, 0.0039, 0.0000],
         [0.0667, 0.0980, 0.1020,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0353, 0.0275, 0.0196,  ..., 0.0196, 0.0196, 0.0157],
         [0.0314, 0.0275, 0.0157,  ..., 0.0235, 0.0235, 0.0196],
         [0.0275, 0.0314, 0.0118,  ..., 0.0235, 0.0235, 0.0235]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.2078, 0.0980, 0.0471,  ..., 0.0039, 0.0078, 0.0118],
         [0.2314, 0.0902, 0.0275,  ..., 0.0039, 0.0039, 0.0078],
         [0.1961, 0.0588, 0.0157,  ..., 0.0000, 0.0039, 0.0078],
         ...,
         [0.0510, 0.0314, 0.0118,  ..., 0.0902, 0.1137, 0.1059],
         [0.0157, 0.0078, 0.0039,  ..., 0.0745, 0.0627, 0.0980],
         [0.0039, 0.0000, 0.0000,  ..., 0.1098, 0.0706, 0.0980]],
        [[0.2078, 0.0980, 0.0471,  ..., 0.0039, 0.0078, 0.0118],
         [0.2314, 0.0902, 0.0275,  ..., 0.0039, 0.0039, 0.0078],
         [0.1961, 0.0588, 0.0157,  ..., 0.0000, 0.0039, 0.0078],
         ...,
         [0.0510, 0.0314, 0.0118,  ..., 0.0902, 0.1137, 0.1059],
         [0.0157, 0.0078, 0.0039,  ..., 0.0745, 0.0627, 0.0980],
         [0.0039, 0.0000, 0.0000,  ..., 0.1098, 0.0706, 0.0980]],
        [[0.2078, 0.0980, 0.0471,  ..., 0.0039, 0.0078, 0.0118],
         [0.2314, 0.0902, 0.0275,  ..., 0.0039, 0.0039, 0.0078],
         [0.1961, 0.0588, 0.0157,  ..., 0.0000, 0.0039, 0.0078],
         ...,
         [0.0510, 0.0314, 0.0118,  ..., 0.0902, 0.1137, 0.1059],
         [0.0157, 0.0078, 0.0039,  ..., 0.0745, 0.0627, 0.0980],
         [0.0039, 0.0000, 0.0000,  ..., 0.1098, 0.0706, 0.0980]]]), 'mask': tensor([[0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 0., 0.]])}
sample {'image': tensor([[[0.1020, 0.0941, 0.0745,  ..., 0.0510, 0.0824, 0.1020],
         [0.0667, 0.0745, 0.0784,  ..., 0.0549, 0.0941, 0.1137],
         [0.0745, 0.0902, 0.0902,  ..., 0.0549, 0.0941, 0.1176],
         ...,
         [0.0863, 0.0510, 0.0235,  ..., 0.0118, 0.0118, 0.0157],
         [0.1529, 0.1059, 0.0549,  ..., 0.0039, 0.0039, 0.0039],
         [0.1725, 0.1647, 0.1176,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1020, 0.0941, 0.0745,  ..., 0.0510, 0.0824, 0.1020],
         [0.0667, 0.0745, 0.0784,  ..., 0.0549, 0.0941, 0.1137],
         [0.0745, 0.0902, 0.0902,  ..., 0.0549, 0.0941, 0.1176],
         ...,
         [0.0863, 0.0510, 0.0235,  ..., 0.0118, 0.0118, 0.0157],
         [0.1529, 0.1059, 0.0549,  ..., 0.0039, 0.0039, 0.0039],
         [0.1725, 0.1647, 0.1176,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.1020, 0.0941, 0.0745,  ..., 0.0510, 0.0824, 0.1020],
         [0.0667, 0.0745, 0.0784,  ..., 0.0549, 0.0941, 0.1137],
         [0.0745, 0.0902, 0.0902,  ..., 0.0549, 0.0941, 0.1176],
         ...,
         [0.0863, 0.0510, 0.0235,  ..., 0.0118, 0.0118, 0.0157],
         [0.1529, 0.1059, 0.0549,  ..., 0.0039, 0.0039, 0.0039],
         [0.1725, 0.1647, 0.1176,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0118, 0.0078, 0.0078,  ..., 0.0353, 0.0275, 0.0235],
         [0.0157, 0.0118, 0.0118,  ..., 0.0392, 0.0392, 0.0549],
         [0.0196, 0.0118, 0.0118,  ..., 0.0392, 0.0588, 0.1137],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0196, 0.0157, 0.0118],
         [0.0039, 0.0039, 0.0078,  ..., 0.0353, 0.0275, 0.0235],
         [0.0039, 0.0078, 0.0118,  ..., 0.0588, 0.0510, 0.0392]],
        [[0.0118, 0.0078, 0.0078,  ..., 0.0353, 0.0275, 0.0235],
         [0.0157, 0.0118, 0.0118,  ..., 0.0392, 0.0392, 0.0549],
         [0.0196, 0.0118, 0.0118,  ..., 0.0392, 0.0588, 0.1137],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0196, 0.0157, 0.0118],
         [0.0039, 0.0039, 0.0078,  ..., 0.0353, 0.0275, 0.0235],
         [0.0039, 0.0078, 0.0118,  ..., 0.0588, 0.0510, 0.0392]],
        [[0.0118, 0.0078, 0.0078,  ..., 0.0353, 0.0275, 0.0235],
         [0.0157, 0.0118, 0.0118,  ..., 0.0392, 0.0392, 0.0549],
         [0.0196, 0.0118, 0.0118,  ..., 0.0392, 0.0588, 0.1137],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0196, 0.0157, 0.0118],
         [0.0039, 0.0039, 0.0078,  ..., 0.0353, 0.0275, 0.0235],
         [0.0039, 0.0078, 0.0118,  ..., 0.0588, 0.0510, 0.0392]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.0510, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0157, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.0510, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0157, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0706, 0.0510, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0510, 0.0235, 0.0157],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0157, 0.0118],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0078, 0.0039, 0.0039]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.7882, 0.5216, 0.2784,  ..., 0.1020, 0.1137, 0.0980],
         [0.7255, 0.3020, 0.1451,  ..., 0.1255, 0.1451, 0.1255],
         [0.3961, 0.1765, 0.0941,  ..., 0.1137, 0.1294, 0.1137],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1216, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.1059, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.0784, 0.1020, 0.1216]],
        [[0.7882, 0.5216, 0.2784,  ..., 0.1020, 0.1137, 0.0980],
         [0.7255, 0.3020, 0.1451,  ..., 0.1255, 0.1451, 0.1255],
         [0.3961, 0.1765, 0.0941,  ..., 0.1137, 0.1294, 0.1137],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1216, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.1059, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.0784, 0.1020, 0.1216]],
        [[0.7882, 0.5216, 0.2784,  ..., 0.1020, 0.1137, 0.0980],
         [0.7255, 0.3020, 0.1451,  ..., 0.1255, 0.1451, 0.1255],
         [0.3961, 0.1765, 0.0941,  ..., 0.1137, 0.1294, 0.1137],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1569, 0.1216, 0.0824],
         [0.0000, 0.0000, 0.0000,  ..., 0.1020, 0.1059, 0.0980],
         [0.0000, 0.0000, 0.0000,  ..., 0.0784, 0.1020, 0.1216]]]), 'mask': tensor([[1., 0., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 1.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0078, 0.0118, 0.0078,  ..., 0.0667, 0.0314, 0.0235],
         [0.0039, 0.0000, 0.0000,  ..., 0.0784, 0.0353, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0667, 0.0392, 0.0314]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0078, 0.0118, 0.0078,  ..., 0.0667, 0.0314, 0.0235],
         [0.0039, 0.0000, 0.0000,  ..., 0.0784, 0.0353, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0667, 0.0392, 0.0314]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0000, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0078, 0.0118, 0.0078,  ..., 0.0667, 0.0314, 0.0235],
         [0.0039, 0.0000, 0.0000,  ..., 0.0784, 0.0353, 0.0275],
         [0.0000, 0.0000, 0.0000,  ..., 0.0667, 0.0392, 0.0314]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0078,  ..., 0.0157, 0.0118, 0.0118],
         [0.0039, 0.0078, 0.0078,  ..., 0.0235, 0.0196, 0.0196],
         [0.0078, 0.0078, 0.0118,  ..., 0.0392, 0.0353, 0.0275],
         ...,
         [0.0078, 0.0118, 0.0157,  ..., 0.0392, 0.0353, 0.0471],
         [0.0078, 0.0118, 0.0157,  ..., 0.0471, 0.0510, 0.0588],
         [0.0118, 0.0157, 0.0118,  ..., 0.0510, 0.0667, 0.0784]],
        [[0.0000, 0.0000, 0.0078,  ..., 0.0157, 0.0118, 0.0118],
         [0.0039, 0.0078, 0.0078,  ..., 0.0235, 0.0196, 0.0196],
         [0.0078, 0.0078, 0.0118,  ..., 0.0392, 0.0353, 0.0275],
         ...,
         [0.0078, 0.0118, 0.0157,  ..., 0.0392, 0.0353, 0.0471],
         [0.0078, 0.0118, 0.0157,  ..., 0.0471, 0.0510, 0.0588],
         [0.0118, 0.0157, 0.0118,  ..., 0.0510, 0.0667, 0.0784]],
        [[0.0000, 0.0000, 0.0078,  ..., 0.0157, 0.0118, 0.0118],
         [0.0039, 0.0078, 0.0078,  ..., 0.0235, 0.0196, 0.0196],
         [0.0078, 0.0078, 0.0118,  ..., 0.0392, 0.0353, 0.0275],
         ...,
         [0.0078, 0.0118, 0.0157,  ..., 0.0392, 0.0353, 0.0471],
         [0.0078, 0.0118, 0.0157,  ..., 0.0471, 0.0510, 0.0588],
         [0.0118, 0.0157, 0.0118,  ..., 0.0510, 0.0667, 0.0784]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0118,  ..., 0.0039, 0.0078, 0.0078],
         [0.0039, 0.0157, 0.0353,  ..., 0.0039, 0.0039, 0.0039],
         [0.0235, 0.0510, 0.0627,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.0039, 0.0078, 0.0078],
         [0.0039, 0.0157, 0.0353,  ..., 0.0039, 0.0039, 0.0039],
         [0.0235, 0.0510, 0.0627,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.0039, 0.0078, 0.0078],
         [0.0039, 0.0157, 0.0353,  ..., 0.0039, 0.0039, 0.0039],
         [0.0235, 0.0510, 0.0627,  ..., 0.0039, 0.0039, 0.0000],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0000,  ..., 0.3176, 0.3255, 0.2941],
         [0.0039, 0.0000, 0.0000,  ..., 0.3176, 0.3373, 0.3294],
         [0.0039, 0.0000, 0.0000,  ..., 0.3765, 0.3725, 0.3216],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1765, 0.1333, 0.0902],
         [0.0000, 0.0000, 0.0000,  ..., 0.2392, 0.1412, 0.0902],
         [0.0039, 0.0000, 0.0000,  ..., 0.3098, 0.1804, 0.1176]],
        [[0.0039, 0.0039, 0.0000,  ..., 0.3176, 0.3255, 0.2941],
         [0.0039, 0.0000, 0.0000,  ..., 0.3176, 0.3373, 0.3294],
         [0.0039, 0.0000, 0.0000,  ..., 0.3765, 0.3725, 0.3216],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1765, 0.1333, 0.0902],
         [0.0000, 0.0000, 0.0000,  ..., 0.2392, 0.1412, 0.0902],
         [0.0039, 0.0000, 0.0000,  ..., 0.3098, 0.1804, 0.1176]],
        [[0.0039, 0.0039, 0.0000,  ..., 0.3176, 0.3255, 0.2941],
         [0.0039, 0.0000, 0.0000,  ..., 0.3176, 0.3373, 0.3294],
         [0.0039, 0.0000, 0.0000,  ..., 0.3765, 0.3725, 0.3216],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1765, 0.1333, 0.0902],
         [0.0000, 0.0000, 0.0000,  ..., 0.2392, 0.1412, 0.0902],
         [0.0039, 0.0000, 0.0000,  ..., 0.3098, 0.1804, 0.1176]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 1., 1.],
        [1., 1., 1.,  ..., 0., 1., 1.],
        [1., 1., 1.,  ..., 0., 1., 1.]])}sample {'image': tensor([[[0.0118, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0196, 0.0314, 0.0471,  ..., 0.1176, 0.0353, 0.0157],
         [0.0196, 0.0235, 0.0392,  ..., 0.1608, 0.0549, 0.0235],
         [0.0196, 0.0157, 0.0196,  ..., 0.2431, 0.1098, 0.0627]],
        [[0.0118, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0196, 0.0314, 0.0471,  ..., 0.1176, 0.0353, 0.0157],
         [0.0196, 0.0235, 0.0392,  ..., 0.1608, 0.0549, 0.0235],
         [0.0196, 0.0157, 0.0196,  ..., 0.2431, 0.1098, 0.0627]],
        [[0.0118, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0039, 0.0000,  ..., 0.0039, 0.0000, 0.0000],
         [0.0078, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0196, 0.0314, 0.0471,  ..., 0.1176, 0.0353, 0.0157],
         [0.0196, 0.0235, 0.0392,  ..., 0.1608, 0.0549, 0.0235],
         [0.0196, 0.0157, 0.0196,  ..., 0.2431, 0.1098, 0.0627]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
Epoch 62/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.14img/s, loss (batch)=1.06]
Epoch 63/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 63/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.83img/s, loss (batch)=1.09]
Epoch 64/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 64/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.85img/s, loss (batch)=0.865]
Epoch 65/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 65/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  9.12img/s, loss (batch)=0.924]
Epoch 66/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 66/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.41img/s, loss (batch)=0.913]
Epoch 67/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]
sample {'image': tensor([[[0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.1373, 0.1412, 0.1490,  ..., 0.0118, 0.0157, 0.0314],
         [0.1765, 0.1922, 0.2078,  ..., 0.0118, 0.0196, 0.0392],
         [0.2627, 0.3137, 0.3294,  ..., 0.0157, 0.0235, 0.0431]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.1373, 0.1412, 0.1490,  ..., 0.0118, 0.0157, 0.0314],
         [0.1765, 0.1922, 0.2078,  ..., 0.0118, 0.0196, 0.0392],
         [0.2627, 0.3137, 0.3294,  ..., 0.0157, 0.0235, 0.0431]],
        [[0.0000, 0.0000, 0.0039,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         [0.0000, 0.0000, 0.0039,  ..., 0.0078, 0.0078, 0.0039],
         ...,
         [0.1373, 0.1412, 0.1490,  ..., 0.0118, 0.0157, 0.0314],
         [0.1765, 0.1922, 0.2078,  ..., 0.0118, 0.0196, 0.0392],
         [0.2627, 0.3137, 0.3294,  ..., 0.0157, 0.0235, 0.0431]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}sample {'image': tensor([[[0.0078, 0.0078, 0.0314,  ..., 0.0471, 0.0706, 0.1176],
         [0.0000, 0.0078, 0.0235,  ..., 0.0431, 0.0667, 0.1098],
         [0.0000, 0.0078, 0.0118,  ..., 0.0353, 0.0471, 0.0745],
         ...,
         [0.0118, 0.0118, 0.0039,  ..., 0.0118, 0.0078, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1882, 0.2902]],
        [[0.0078, 0.0078, 0.0314,  ..., 0.0471, 0.0706, 0.1176],
         [0.0000, 0.0078, 0.0235,  ..., 0.0431, 0.0667, 0.1098],
         [0.0000, 0.0078, 0.0118,  ..., 0.0353, 0.0471, 0.0745],
         ...,
         [0.0118, 0.0118, 0.0039,  ..., 0.0118, 0.0078, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1882, 0.2902]],
        [[0.0078, 0.0078, 0.0314,  ..., 0.0471, 0.0706, 0.1176],
         [0.0000, 0.0078, 0.0235,  ..., 0.0431, 0.0667, 0.1098],
         [0.0000, 0.0078, 0.0118,  ..., 0.0353, 0.0471, 0.0745],
         ...,
         [0.0118, 0.0118, 0.0039,  ..., 0.0118, 0.0078, 0.0000],
         [0.0039, 0.0000, 0.0000,  ..., 0.0353, 0.0471, 0.0784],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1882, 0.2902]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0275, 0.0353],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0314, 0.0471],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0431, 0.0667],
         ...,
         [0.0549, 0.0745, 0.0902,  ..., 0.0157, 0.0157, 0.0196],
         [0.0510, 0.0667, 0.0667,  ..., 0.0078, 0.0078, 0.0078],
         [0.0431, 0.0471, 0.0431,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0275, 0.0353],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0314, 0.0471],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0431, 0.0667],
         ...,
         [0.0549, 0.0745, 0.0902,  ..., 0.0157, 0.0157, 0.0196],
         [0.0510, 0.0667, 0.0667,  ..., 0.0078, 0.0078, 0.0078],
         [0.0431, 0.0471, 0.0431,  ..., 0.0039, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0314, 0.0275, 0.0353],
         [0.0000, 0.0000, 0.0000,  ..., 0.0275, 0.0314, 0.0471],
         [0.0039, 0.0039, 0.0039,  ..., 0.0431, 0.0431, 0.0667],
         ...,
         [0.0549, 0.0745, 0.0902,  ..., 0.0157, 0.0157, 0.0196],
         [0.0510, 0.0667, 0.0667,  ..., 0.0078, 0.0078, 0.0078],
         [0.0431, 0.0471, 0.0431,  ..., 0.0039, 0.0039, 0.0039]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0471, 0.0431, 0.0392,  ..., 0.0078, 0.0196, 0.0314],
         [0.0824, 0.0667, 0.0471,  ..., 0.0078, 0.0196, 0.0314],
         [0.1294, 0.1098, 0.0667,  ..., 0.0078, 0.0157, 0.0196],
         ...,
         [0.1137, 0.0627, 0.0275,  ..., 0.1137, 0.1216, 0.0941],
         [0.0863, 0.0471, 0.0196,  ..., 0.1137, 0.1059, 0.1020],
         [0.0784, 0.0392, 0.0157,  ..., 0.1098, 0.1098, 0.1098]],
        [[0.0471, 0.0431, 0.0392,  ..., 0.0078, 0.0196, 0.0314],
         [0.0824, 0.0667, 0.0471,  ..., 0.0078, 0.0196, 0.0314],
         [0.1294, 0.1098, 0.0667,  ..., 0.0078, 0.0157, 0.0196],
         ...,
         [0.1137, 0.0627, 0.0275,  ..., 0.1137, 0.1216, 0.0941],
         [0.0863, 0.0471, 0.0196,  ..., 0.1137, 0.1059, 0.1020],
         [0.0784, 0.0392, 0.0157,  ..., 0.1098, 0.1098, 0.1098]],
        [[0.0471, 0.0431, 0.0392,  ..., 0.0078, 0.0196, 0.0314],
         [0.0824, 0.0667, 0.0471,  ..., 0.0078, 0.0196, 0.0314],
         [0.1294, 0.1098, 0.0667,  ..., 0.0078, 0.0157, 0.0196],
         ...,
         [0.1137, 0.0627, 0.0275,  ..., 0.1137, 0.1216, 0.0941],
         [0.0863, 0.0471, 0.0196,  ..., 0.1137, 0.1059, 0.1020],
         [0.0784, 0.0392, 0.0157,  ..., 0.1098, 0.1098, 0.1098]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0431, 0.0353, 0.0471,  ..., 0.0039, 0.0039, 0.0039],
         [0.0196, 0.0314, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0235, 0.0196, 0.0275,  ..., 0.0078, 0.0039, 0.0039],
         ...,
         [0.1490, 0.2314, 0.2784,  ..., 0.0275, 0.0627, 0.1059],
         [0.1529, 0.2235, 0.3020,  ..., 0.0706, 0.1059, 0.1412],
         [0.1412, 0.2431, 0.4157,  ..., 0.0863, 0.0980, 0.1686]],
        [[0.0431, 0.0353, 0.0471,  ..., 0.0039, 0.0039, 0.0039],
         [0.0196, 0.0314, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0235, 0.0196, 0.0275,  ..., 0.0078, 0.0039, 0.0039],
         ...,
         [0.1490, 0.2314, 0.2784,  ..., 0.0275, 0.0627, 0.1059],
         [0.1529, 0.2235, 0.3020,  ..., 0.0706, 0.1059, 0.1412],
         [0.1412, 0.2431, 0.4157,  ..., 0.0863, 0.0980, 0.1686]],
        [[0.0431, 0.0353, 0.0471,  ..., 0.0039, 0.0039, 0.0039],
         [0.0196, 0.0314, 0.0275,  ..., 0.0039, 0.0039, 0.0039],
         [0.0235, 0.0196, 0.0275,  ..., 0.0078, 0.0039, 0.0039],
         ...,
         [0.1490, 0.2314, 0.2784,  ..., 0.0275, 0.0627, 0.1059],
         [0.1529, 0.2235, 0.3020,  ..., 0.0706, 0.1059, 0.1412],
         [0.1412, 0.2431, 0.4157,  ..., 0.0863, 0.0980, 0.1686]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 0.],
        [0., 0., 0.,  ..., 1., 1., 0.]])}
sample {'image': tensor([[[0.2588, 0.3216, 0.2902,  ..., 0.1373, 0.0510, 0.0235],
         [0.1725, 0.2353, 0.2706,  ..., 0.0510, 0.0235, 0.0118],
         [0.1176, 0.1569, 0.2353,  ..., 0.0275, 0.0157, 0.0078],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.2588, 0.3216, 0.2902,  ..., 0.1373, 0.0510, 0.0235],
         [0.1725, 0.2353, 0.2706,  ..., 0.0510, 0.0235, 0.0118],
         [0.1176, 0.1569, 0.2353,  ..., 0.0275, 0.0157, 0.0078],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.2588, 0.3216, 0.2902,  ..., 0.1373, 0.0510, 0.0235],
         [0.1725, 0.2353, 0.2706,  ..., 0.0510, 0.0235, 0.0118],
         [0.1176, 0.1569, 0.2353,  ..., 0.0275, 0.0157, 0.0078],
         ...,
         [0.0039, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 1., 0.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0784, 0.0588, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0745, 0.0510, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0667, 0.0510, 0.0353],
         ...,
         [0.0235, 0.0196, 0.0157,  ..., 0.0078, 0.0039, 0.0039],
         [0.0471, 0.0314, 0.0275,  ..., 0.0118, 0.0078, 0.0078],
         [0.0510, 0.0588, 0.0431,  ..., 0.0078, 0.0078, 0.0118]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0784, 0.0588, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0745, 0.0510, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0667, 0.0510, 0.0353],
         ...,
         [0.0235, 0.0196, 0.0157,  ..., 0.0078, 0.0039, 0.0039],
         [0.0471, 0.0314, 0.0275,  ..., 0.0118, 0.0078, 0.0078],
         [0.0510, 0.0588, 0.0431,  ..., 0.0078, 0.0078, 0.0118]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0784, 0.0588, 0.0471],
         [0.0000, 0.0000, 0.0000,  ..., 0.0745, 0.0510, 0.0392],
         [0.0000, 0.0000, 0.0000,  ..., 0.0667, 0.0510, 0.0353],
         ...,
         [0.0235, 0.0196, 0.0157,  ..., 0.0078, 0.0039, 0.0039],
         [0.0471, 0.0314, 0.0275,  ..., 0.0118, 0.0078, 0.0078],
         [0.0510, 0.0588, 0.0431,  ..., 0.0078, 0.0078, 0.0118]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0431, 0.0471, 0.0549,  ..., 0.0000, 0.0000, 0.0078],
         [0.0314, 0.0392, 0.0471,  ..., 0.0000, 0.0039, 0.0078],
         [0.0392, 0.0431, 0.0549,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.0784, 0.1020, 0.1176,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0784, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0706, 0.1020,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0431, 0.0471, 0.0549,  ..., 0.0000, 0.0000, 0.0078],
         [0.0314, 0.0392, 0.0471,  ..., 0.0000, 0.0039, 0.0078],
         [0.0392, 0.0431, 0.0549,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.0784, 0.1020, 0.1176,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0784, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0706, 0.1020,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0431, 0.0471, 0.0549,  ..., 0.0000, 0.0000, 0.0078],
         [0.0314, 0.0392, 0.0471,  ..., 0.0000, 0.0039, 0.0078],
         [0.0392, 0.0431, 0.0549,  ..., 0.0039, 0.0078, 0.0118],
         ...,
         [0.0784, 0.1020, 0.1176,  ..., 0.0000, 0.0000, 0.0000],
         [0.0588, 0.0784, 0.0980,  ..., 0.0000, 0.0000, 0.0000],
         [0.0510, 0.0706, 0.1020,  ..., 0.0000, 0.0000, 0.0000]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0353, 0.0510, 0.0824,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0549, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.0706, 0.0627, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0118,  ..., 0.0157, 0.0078, 0.0000],
         [0.0118, 0.0118, 0.0078,  ..., 0.0157, 0.0078, 0.0039],
         [0.0118, 0.0118, 0.0078,  ..., 0.0118, 0.0118, 0.0118]],
        [[0.0353, 0.0510, 0.0824,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0549, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.0706, 0.0627, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0118,  ..., 0.0157, 0.0078, 0.0000],
         [0.0118, 0.0118, 0.0078,  ..., 0.0157, 0.0078, 0.0039],
         [0.0118, 0.0118, 0.0078,  ..., 0.0118, 0.0118, 0.0118]],
        [[0.0353, 0.0510, 0.0824,  ..., 0.0000, 0.0000, 0.0000],
         [0.0431, 0.0549, 0.0745,  ..., 0.0000, 0.0000, 0.0000],
         [0.0706, 0.0627, 0.0667,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0078, 0.0078, 0.0118,  ..., 0.0157, 0.0078, 0.0000],
         [0.0118, 0.0118, 0.0078,  ..., 0.0157, 0.0078, 0.0039],
         [0.0118, 0.0118, 0.0078,  ..., 0.0118, 0.0118, 0.0118]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0627, 0.0471, 0.0353,  ..., 0.1255, 0.0902, 0.0588],
         [0.0745, 0.0510, 0.0392,  ..., 0.1333, 0.1137, 0.0902],
         [0.0784, 0.0588, 0.0549,  ..., 0.1098, 0.1098, 0.0745],
         ...,
         [0.1255, 0.0706, 0.0549,  ..., 0.0824, 0.1451, 0.2431],
         [0.1529, 0.0667, 0.0353,  ..., 0.1098, 0.2510, 0.4392],
         [0.1608, 0.0706, 0.0353,  ..., 0.1176, 0.2157, 0.4000]],
        [[0.0627, 0.0471, 0.0353,  ..., 0.1255, 0.0902, 0.0588],
         [0.0745, 0.0510, 0.0392,  ..., 0.1333, 0.1137, 0.0902],
         [0.0784, 0.0588, 0.0549,  ..., 0.1098, 0.1098, 0.0745],
         ...,
         [0.1255, 0.0706, 0.0549,  ..., 0.0824, 0.1451, 0.2431],
         [0.1529, 0.0667, 0.0353,  ..., 0.1098, 0.2510, 0.4392],
         [0.1608, 0.0706, 0.0353,  ..., 0.1176, 0.2157, 0.4000]],
        [[0.0627, 0.0471, 0.0353,  ..., 0.1255, 0.0902, 0.0588],
         [0.0745, 0.0510, 0.0392,  ..., 0.1333, 0.1137, 0.0902],
         [0.0784, 0.0588, 0.0549,  ..., 0.1098, 0.1098, 0.0745],
         ...,
         [0.1255, 0.0706, 0.0549,  ..., 0.0824, 0.1451, 0.2431],
         [0.1529, 0.0667, 0.0353,  ..., 0.1098, 0.2510, 0.4392],
         [0.1608, 0.0706, 0.0353,  ..., 0.1176, 0.2157, 0.4000]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [1., 1., 1.,  ..., 1., 1., 0.],
        [1., 1., 1.,  ..., 1., 1., 0.],
        [1., 1., 1.,  ..., 1., 1., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.1137, 0.1216, 0.1569,  ..., 0.0000, 0.0000, 0.0000],
         [0.1255, 0.0941, 0.1098,  ..., 0.0000, 0.0000, 0.0000],
         [0.2000, 0.1294, 0.0980,  ..., 0.0000, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.1137, 0.1216, 0.1569,  ..., 0.0000, 0.0000, 0.0000],
         [0.1255, 0.0941, 0.1098,  ..., 0.0000, 0.0000, 0.0000],
         [0.2000, 0.1294, 0.0980,  ..., 0.0000, 0.0039, 0.0039]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0039, 0.0039],
         [0.0000, 0.0000, 0.0000,  ..., 0.0039, 0.0039, 0.0039],
         ...,
         [0.1137, 0.1216, 0.1569,  ..., 0.0000, 0.0000, 0.0000],
         [0.1255, 0.0941, 0.1098,  ..., 0.0000, 0.0000, 0.0000],
         [0.2000, 0.1294, 0.0980,  ..., 0.0000, 0.0039, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3176, 0.2196, 0.1647,  ..., 0.0039, 0.0000, 0.0000],
         [0.3569, 0.2667, 0.2588,  ..., 0.0039, 0.0000, 0.0000],
         [0.5608, 0.5451, 0.4941,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3176, 0.2196, 0.1647,  ..., 0.0039, 0.0000, 0.0000],
         [0.3569, 0.2667, 0.2588,  ..., 0.0039, 0.0000, 0.0000],
         [0.5608, 0.5451, 0.4941,  ..., 0.0039, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.3176, 0.2196, 0.1647,  ..., 0.0039, 0.0000, 0.0000],
         [0.3569, 0.2667, 0.2588,  ..., 0.0039, 0.0000, 0.0000],
         [0.5608, 0.5451, 0.4941,  ..., 0.0039, 0.0000, 0.0000]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0706, 0.0588, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0667, 0.0471, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0784, 0.0588, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0235, 0.0314, 0.0549,  ..., 0.0157, 0.0118, 0.0118],
         [0.0353, 0.0471, 0.0784,  ..., 0.0196, 0.0157, 0.0118],
         [0.0510, 0.0549, 0.0745,  ..., 0.0196, 0.0078, 0.0039]],
        [[0.0706, 0.0588, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0667, 0.0471, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0784, 0.0588, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0235, 0.0314, 0.0549,  ..., 0.0157, 0.0118, 0.0118],
         [0.0353, 0.0471, 0.0784,  ..., 0.0196, 0.0157, 0.0118],
         [0.0510, 0.0549, 0.0745,  ..., 0.0196, 0.0078, 0.0039]],
        [[0.0706, 0.0588, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         [0.0667, 0.0471, 0.0314,  ..., 0.0000, 0.0000, 0.0000],
         [0.0784, 0.0588, 0.0353,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0235, 0.0314, 0.0549,  ..., 0.0157, 0.0118, 0.0118],
         [0.0353, 0.0471, 0.0784,  ..., 0.0196, 0.0157, 0.0118],
         [0.0510, 0.0549, 0.0745,  ..., 0.0196, 0.0078, 0.0039]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}sample {'image': tensor([[[0.0039, 0.0000, 0.0000,  ..., 0.0667, 0.0235, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1961, 0.2980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.1569, 0.2353],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1451, 0.1725]],
        [[0.0039, 0.0000, 0.0000,  ..., 0.0667, 0.0235, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1961, 0.2980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.1569, 0.2353],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1451, 0.1725]],
        [[0.0039, 0.0000, 0.0000,  ..., 0.0667, 0.0235, 0.0118],
         [0.0000, 0.0000, 0.0000,  ..., 0.0196, 0.0118, 0.0078],
         [0.0000, 0.0000, 0.0000,  ..., 0.0157, 0.0157, 0.0157],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1216, 0.1961, 0.2980],
         [0.0000, 0.0000, 0.0000,  ..., 0.1490, 0.1569, 0.2353],
         [0.0000, 0.0000, 0.0000,  ..., 0.1255, 0.1451, 0.1725]]]), 'mask': tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        [1., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0078, 0.0196,  ..., 0.0353, 0.0667, 0.0863],
         [0.0039, 0.0078, 0.0235,  ..., 0.0118, 0.0235, 0.0431],
         [0.0039, 0.0078, 0.0353,  ..., 0.0000, 0.0078, 0.0235],
         ...,
         [0.0000, 0.0078, 0.0235,  ..., 0.0353, 0.0157, 0.0118],
         [0.0000, 0.0078, 0.0196,  ..., 0.0588, 0.0235, 0.0118],
         [0.0000, 0.0118, 0.0196,  ..., 0.0784, 0.0353, 0.0196]],
        [[0.0000, 0.0078, 0.0196,  ..., 0.0353, 0.0667, 0.0863],
         [0.0039, 0.0078, 0.0235,  ..., 0.0118, 0.0235, 0.0431],
         [0.0039, 0.0078, 0.0353,  ..., 0.0000, 0.0078, 0.0235],
         ...,
         [0.0000, 0.0078, 0.0235,  ..., 0.0353, 0.0157, 0.0118],
         [0.0000, 0.0078, 0.0196,  ..., 0.0588, 0.0235, 0.0118],
         [0.0000, 0.0118, 0.0196,  ..., 0.0784, 0.0353, 0.0196]],
        [[0.0000, 0.0078, 0.0196,  ..., 0.0353, 0.0667, 0.0863],
         [0.0039, 0.0078, 0.0235,  ..., 0.0118, 0.0235, 0.0431],
         [0.0039, 0.0078, 0.0353,  ..., 0.0000, 0.0078, 0.0235],
         ...,
         [0.0000, 0.0078, 0.0235,  ..., 0.0353, 0.0157, 0.0118],
         [0.0000, 0.0078, 0.0196,  ..., 0.0588, 0.0235, 0.0118],
         [0.0000, 0.0118, 0.0196,  ..., 0.0784, 0.0353, 0.0196]]]), 'mask': tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.]])}
sample {'image': tensor([[[0.0157, 0.0118, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0118, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0157, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0157, 0.0235, 0.0314,  ..., 0.0275, 0.0588, 0.1412],
         [0.0196, 0.0314, 0.0353,  ..., 0.0235, 0.0549, 0.1333],
         [0.0353, 0.0549, 0.0784,  ..., 0.0235, 0.0431, 0.0863]],
        [[0.0157, 0.0118, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0118, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0157, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0157, 0.0235, 0.0314,  ..., 0.0275, 0.0588, 0.1412],
         [0.0196, 0.0314, 0.0353,  ..., 0.0235, 0.0549, 0.1333],
         [0.0353, 0.0549, 0.0784,  ..., 0.0235, 0.0431, 0.0863]],
        [[0.0157, 0.0118, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0196, 0.0118, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         [0.0157, 0.0157, 0.0078,  ..., 0.0000, 0.0000, 0.0000],
         ...,
         [0.0157, 0.0235, 0.0314,  ..., 0.0275, 0.0588, 0.1412],
         [0.0196, 0.0314, 0.0353,  ..., 0.0235, 0.0549, 0.1333],
         [0.0353, 0.0549, 0.0784,  ..., 0.0235, 0.0431, 0.0863]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0000, 0.0039, 0.0118,  ..., 0.0980, 0.0863, 0.0784],
         [0.0039, 0.0078, 0.0157,  ..., 0.0706, 0.0667, 0.0706],
         [0.0039, 0.0118, 0.0157,  ..., 0.0824, 0.0745, 0.0824],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.2784, 0.4549, 0.4039],
         [0.0000, 0.0000, 0.0000,  ..., 0.2510, 0.4039, 0.3569],
         [0.0000, 0.0000, 0.0000,  ..., 0.2627, 0.4314, 0.4863]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.0980, 0.0863, 0.0784],
         [0.0039, 0.0078, 0.0157,  ..., 0.0706, 0.0667, 0.0706],
         [0.0039, 0.0118, 0.0157,  ..., 0.0824, 0.0745, 0.0824],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.2784, 0.4549, 0.4039],
         [0.0000, 0.0000, 0.0000,  ..., 0.2510, 0.4039, 0.3569],
         [0.0000, 0.0000, 0.0000,  ..., 0.2627, 0.4314, 0.4863]],
        [[0.0000, 0.0039, 0.0118,  ..., 0.0980, 0.0863, 0.0784],
         [0.0039, 0.0078, 0.0157,  ..., 0.0706, 0.0667, 0.0706],
         [0.0039, 0.0118, 0.0157,  ..., 0.0824, 0.0745, 0.0824],
         ...,
         [0.0039, 0.0039, 0.0039,  ..., 0.2784, 0.4549, 0.4039],
         [0.0000, 0.0000, 0.0000,  ..., 0.2510, 0.4039, 0.3569],
         [0.0000, 0.0000, 0.0000,  ..., 0.2627, 0.4314, 0.4863]]]), 'mask': tensor([[0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 1.]])}
sample {'image': tensor([[[0.0863, 0.0471, 0.0275,  ..., 0.1843, 0.1373, 0.0902],
         [0.2039, 0.1059, 0.0824,  ..., 0.1176, 0.0745, 0.0431],
         [0.3490, 0.2784, 0.2824,  ..., 0.0745, 0.0392, 0.0275],
         ...,
         [0.0039, 0.0078, 0.0039,  ..., 0.1412, 0.0706, 0.0471],
         [0.0078, 0.0157, 0.0078,  ..., 0.1451, 0.0863, 0.0706],
         [0.0039, 0.0078, 0.0039,  ..., 0.1569, 0.1020, 0.0863]],
        [[0.0863, 0.0471, 0.0275,  ..., 0.1843, 0.1373, 0.0902],
         [0.2039, 0.1059, 0.0824,  ..., 0.1176, 0.0745, 0.0431],
         [0.3490, 0.2784, 0.2824,  ..., 0.0745, 0.0392, 0.0275],
         ...,
         [0.0039, 0.0078, 0.0039,  ..., 0.1412, 0.0706, 0.0471],
         [0.0078, 0.0157, 0.0078,  ..., 0.1451, 0.0863, 0.0706],
         [0.0039, 0.0078, 0.0039,  ..., 0.1569, 0.1020, 0.0863]],
        [[0.0863, 0.0471, 0.0275,  ..., 0.1843, 0.1373, 0.0902],
         [0.2039, 0.1059, 0.0824,  ..., 0.1176, 0.0745, 0.0431],
         [0.3490, 0.2784, 0.2824,  ..., 0.0745, 0.0392, 0.0275],
         ...,
         [0.0039, 0.0078, 0.0039,  ..., 0.1412, 0.0706, 0.0471],
         [0.0078, 0.0157, 0.0078,  ..., 0.1451, 0.0863, 0.0706],
         [0.0039, 0.0078, 0.0039,  ..., 0.1569, 0.1020, 0.0863]]]), 'mask': tensor([[1., 1., 1.,  ..., 0., 0., 0.],
        [1., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0627, 0.0353, 0.0235,  ..., 0.1137, 0.0941, 0.0980],
         [0.0588, 0.0431, 0.0275,  ..., 0.1765, 0.1490, 0.1373],
         [0.0706, 0.0549, 0.0275,  ..., 0.2118, 0.2078, 0.2627],
         ...,
         [0.2235, 0.2941, 0.2667,  ..., 0.0784, 0.0941, 0.0941],
         [0.4863, 0.6549, 0.4000,  ..., 0.0471, 0.0784, 0.0824],
         [0.7843, 0.7882, 0.3059,  ..., 0.0431, 0.0627, 0.0784]],
        [[0.0627, 0.0353, 0.0235,  ..., 0.1137, 0.0941, 0.0980],
         [0.0588, 0.0431, 0.0275,  ..., 0.1765, 0.1490, 0.1373],
         [0.0706, 0.0549, 0.0275,  ..., 0.2118, 0.2078, 0.2627],
         ...,
         [0.2235, 0.2941, 0.2667,  ..., 0.0784, 0.0941, 0.0941],
         [0.4863, 0.6549, 0.4000,  ..., 0.0471, 0.0784, 0.0824],
         [0.7843, 0.7882, 0.3059,  ..., 0.0431, 0.0627, 0.0784]],
        [[0.0627, 0.0353, 0.0235,  ..., 0.1137, 0.0941, 0.0980],
         [0.0588, 0.0431, 0.0275,  ..., 0.1765, 0.1490, 0.1373],
         [0.0706, 0.0549, 0.0275,  ..., 0.2118, 0.2078, 0.2627],
         ...,
         [0.2235, 0.2941, 0.2667,  ..., 0.0784, 0.0941, 0.0941],
         [0.4863, 0.6549, 0.4000,  ..., 0.0471, 0.0784, 0.0824],
         [0.7843, 0.7882, 0.3059,  ..., 0.0431, 0.0627, 0.0784]]]), 'mask': tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])}
sample {'image': tensor([[[0.0039, 0.0039, 0.0039,  ..., 0.0745, 0.0627, 0.0745],
         [0.0000, 0.0039, 0.0039,  ..., 0.0588, 0.0549, 0.0549],
         [0.0000, 0.0039, 0.0039,  ..., 0.0275, 0.0353, 0.0392],
         ...,
         [0.0157, 0.0392, 0.0667,  ..., 0.3020, 0.2118, 0.1294],
         [0.0235, 0.0549, 0.0745,  ..., 0.1686, 0.1098, 0.0784],
         [0.0431, 0.0706, 0.0863,  ..., 0.0902, 0.0588, 0.0431]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0745, 0.0627, 0.0745],
         [0.0000, 0.0039, 0.0039,  ..., 0.0588, 0.0549, 0.0549],
         [0.0000, 0.0039, 0.0039,  ..., 0.0275, 0.0353, 0.0392],
         ...,
         [0.0157, 0.0392, 0.0667,  ..., 0.3020, 0.2118, 0.1294],
         [0.0235, 0.0549, 0.0745,  ..., 0.1686, 0.1098, 0.0784],
         [0.0431, 0.0706, 0.0863,  ..., 0.0902, 0.0588, 0.0431]],
        [[0.0039, 0.0039, 0.0039,  ..., 0.0745, 0.0627, 0.0745],
         [0.0000, 0.0039, 0.0039,  ..., 0.0588, 0.0549, 0.0549],
         [0.0000, 0.0039, 0.0039,  ..., 0.0275, 0.0353, 0.0392],
         ...,
         [0.0157, 0.0392, 0.0667,  ..., 0.3020, 0.2118, 0.1294],
         [0.0235, 0.0549, 0.0745,  ..., 0.1686, 0.1098, 0.0784],
Epoch 67/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 67/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.14img/s, loss (batch)=1.04]
Epoch 68/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 68/1000: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  6.85img/s, loss (batch)=1.13]
Epoch 69/1000:   0%|                                                                                                                                                                                        | 0/4 [00:00<?, ?img/s]/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torchvision/transforms/functional.py:92: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370116979/work/torch/csrc/utils/tensor_numpy.cpp:141.)
  img = torch.from_numpy(np.array(pic, np.float32, copy=False))
Epoch 69/1000: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:00<00:00,  8.82img/s, loss (batch)=0.902]
