before =  [<PIL.PngImagePlugin.PngImageFile image mode=RGB size=672x756 at 0x7F1A04DE2780>, <PIL.PngImagePlugin.PngImageFile image mode=RGB size=672x756 at 0x7F1A014CF128>, <PIL.PngImagePlugin.PngImageFile image mode=RGB size=672x756 at 0x7F1A014DC4A8>, <PIL.PngImagePlugin.PngImageFile image mode=RGB size=672x756 at 0x7F1A014DC940>, <PIL.PngImagePlugin.PngImageFile image mode=RGB size=672x756 at 0x7F1A014DC9B0>]
After =  [tensor([[[ 0.0697,  0.0285, -0.1360,  ...,  0.3164,  0.3164,  0.7277],
         [ 0.6866,  0.2342, -0.2594,  ..., -0.0537,  0.1108,  0.1519],
         [ 0.8511,  0.2342, -0.0949,  ..., -0.1771, -0.1771, -0.1360],
         ...,
         [-0.6707, -0.6707, -0.6707,  ..., -0.6296, -0.6707, -0.6707],
         [-0.6707, -0.6296, -0.6707,  ..., -0.6707, -0.6707, -0.6707],
         [-0.6707, -0.6707, -0.6707,  ..., -0.6296, -0.6707, -0.6707]],
        [[ 0.0697,  0.0285, -0.1360,  ...,  0.3164,  0.3164,  0.7277],
         [ 0.6866,  0.2342, -0.2594,  ..., -0.0537,  0.1108,  0.1519],
         [ 0.8511,  0.2342, -0.0949,  ..., -0.1771, -0.1771, -0.1360],
         ...,
         [-0.6707, -0.6707, -0.6707,  ..., -0.6296, -0.6707, -0.6707],
         [-0.6707, -0.6296, -0.6707,  ..., -0.6707, -0.6707, -0.6707],
         [-0.6707, -0.6707, -0.6707,  ..., -0.6296, -0.6707, -0.6707]],
        [[ 0.0697,  0.0285, -0.1360,  ...,  0.3164,  0.3164,  0.7277],
         [ 0.6866,  0.2342, -0.2594,  ..., -0.0537,  0.1108,  0.1519],
         [ 0.8511,  0.2342, -0.0949,  ..., -0.1771, -0.1771, -0.1360],
         ...,
         [-0.6707, -0.6707, -0.6707,  ..., -0.6296, -0.6707, -0.6707],
         [-0.6707, -0.6296, -0.6707,  ..., -0.6707, -0.6707, -0.6707],
         [-0.6707, -0.6707, -0.6707,  ..., -0.6296, -0.6707, -0.6707]]]), tensor([[[ 0.6392, -0.1373, -0.3037,  ...,  0.6392,  0.6392,  0.4728],
         [ 1.1384,  0.2509,  0.0845,  ...,  0.0291,  0.1400, -0.0264],
         [ 1.8595,  0.9165,  0.3619,  ..., -0.2483, -0.3037, -0.4147],
         ...,
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584],
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584],
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584]],
        [[ 0.6392, -0.1373, -0.3037,  ...,  0.6392,  0.6392,  0.4728],
         [ 1.1384,  0.2509,  0.0845,  ...,  0.0291,  0.1400, -0.0264],
         [ 1.8595,  0.9165,  0.3619,  ..., -0.2483, -0.3037, -0.4147],
         ...,
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584],
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584],
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584]],
        [[ 0.6392, -0.1373, -0.3037,  ...,  0.6392,  0.6392,  0.4728],
         [ 1.1384,  0.2509,  0.0845,  ...,  0.0291,  0.1400, -0.0264],
         [ 1.8595,  0.9165,  0.3619,  ..., -0.2483, -0.3037, -0.4147],
         ...,
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584],
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584],
         [-0.8584, -0.8584, -0.8584,  ..., -0.8584, -0.8584, -0.8584]]]), tensor([[[-0.1380, -0.2669, -0.2992,  ..., -0.2025, -0.3637, -0.5571],
         [ 0.2811, -0.1702, -0.3314,  ..., -0.4926, -0.5893, -0.7183],
         [ 0.9903,  0.3133, -0.0735,  ..., -0.6538, -0.7183, -0.7827],
         ...,
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9439],
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9117],
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9117]],
        [[-0.1380, -0.2669, -0.2992,  ..., -0.2025, -0.3637, -0.5571],
         [ 0.2811, -0.1702, -0.3314,  ..., -0.4926, -0.5893, -0.7183],
         [ 0.9903,  0.3133, -0.0735,  ..., -0.6538, -0.7183, -0.7827],
         ...,
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9439],
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9117],
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9117]],
        [[-0.1380, -0.2669, -0.2992,  ..., -0.2025, -0.3637, -0.5571],
         [ 0.2811, -0.1702, -0.3314,  ..., -0.4926, -0.5893, -0.7183],
         [ 0.9903,  0.3133, -0.0735,  ..., -0.6538, -0.7183, -0.7827],
         ...,
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9439],
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9117],
         [-0.9439, -0.9439, -0.9439,  ..., -0.8795, -0.9117, -0.9117]]]), tensor([[[-0.3634, -0.4092, -0.5008,  ...,  0.0716,  0.1403, -0.2032],
         [-0.2947, -0.4550, -0.5008,  ..., -0.1345, -0.1803, -0.4779],
         [-0.1345, -0.3863, -0.4092,  ..., -0.3176, -0.4550, -0.5924],
         ...,
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984],
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984],
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984]],
        [[-0.3634, -0.4092, -0.5008,  ...,  0.0716,  0.1403, -0.2032],
         [-0.2947, -0.4550, -0.5008,  ..., -0.1345, -0.1803, -0.4779],
         [-0.1345, -0.3863, -0.4092,  ..., -0.3176, -0.4550, -0.5924],
         ...,
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984],
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984],
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984]],
        [[-0.3634, -0.4092, -0.5008,  ...,  0.0716,  0.1403, -0.2032],
         [-0.2947, -0.4550, -0.5008,  ..., -0.1345, -0.1803, -0.4779],
         [-0.1345, -0.3863, -0.4092,  ..., -0.3176, -0.4550, -0.5924],
         ...,
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984],
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984],
         [-0.8213, -0.8213, -0.8213,  ..., -0.7755, -0.7984, -0.7984]]]), tensor([[[-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.1742, -0.3775],
         [ 0.0292, -0.1742, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         [ 0.6392,  0.6392, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         ...,
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775,  0.0292],
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775, -0.3775]],
        [[-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.1742, -0.3775],
         [ 0.0292, -0.1742, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         [ 0.6392,  0.6392, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         ...,
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775,  0.0292],
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775, -0.3775]],
        [[-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.1742, -0.3775],
         [ 0.0292, -0.1742, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         [ 0.6392,  0.6392, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         ...,
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775, -0.3775],
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775,  0.0292],
         [-0.3775, -0.3775, -0.3775,  ..., -0.3775, -0.3775, -0.3775]]])]
INFO: Starting training:
        Epochs:          1000
        Batch size:      2
        Learning rate:   1e-06
        Training size:   4
        Validation size: 0
        Checkpoints:     True
        Device:          cuda
        Images scaling:  1
        Mixed Precision: True
Epoch 1/1000:   0%|                                                                                                                                        | 0/4 [00:00<?, ?img/s]
Traceback (most recent call last):
  File "train.py", line 223, in <module>
    amp=args.amp)
  File "train.py", line 101, in train_net
    for batch in train_loader:
  File "/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 435, in __next__
    data = self._next_data()
  File "/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 475, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torch/utils/data/_utils/fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torch/utils/data/_utils/fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/master/09/chacotw/miniconda3/envs/detectron2/lib/python3.6/site-packages/torch/utils/data/dataset.py", line 272, in __getitem__
    return self.dataset[self.indices[idx]]
  File "/tmp2/chacotw/unet/Pytorch-UNet/utils/data_loading.py", line 271, in __getitem__
    print("img shape", img.shape)
AttributeError: 'list' object has no attribute 'shape'