INFO: Starting training:
        Epochs:          15000
        Batch size:      2
        Learning rate:   1e-06
        Training size:   3
        Validation size: 0
        Checkpoints:     True
        Device:          cuda
        Images scaling:  1
        Mixed Precision: True
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  5.61it/s]
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 12.41it/s]
Epoch 1/15000:   0%|                                                                                                                   | 0/3 [00:00<?, ?img/s]
Traceback (most recent call last):
  File "train-multi.py", line 211, in <module>
    amp=args.amp)
  File "train-multi.py", line 103, in train_net
    loss = criterion_lbl(masks_pred[:,0], true_masks[:,1]) \
  File "/home/master/09/chacotw/miniconda3/envs/unet/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/master/09/chacotw/miniconda3/envs/unet/lib/python3.7/site-packages/torch/nn/modules/loss.py", line 1121, in forward
    ignore_index=self.ignore_index, reduction=self.reduction)
  File "/home/master/09/chacotw/miniconda3/envs/unet/lib/python3.7/site-packages/torch/nn/functional.py", line 2824, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index)
RuntimeError: Expected target size [2, 200], got [2, 300, 200]